<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柏竹博客</title>
  
  <subtitle>柏竹</subtitle>
  <link href="/Sanscan12.github.io/atom.xml" rel="self"/>
  
  <link href="https://sanscan12.github.io/"/>
  <updated>2020-05-03T12:51:10.427Z</updated>
  <id>https://sanscan12.github.io/</id>
  
  <author>
    <name>Sanscan12</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>赛博朋克风格</title>
    <link href="https://sanscan12.github.io/posts/d3.html"/>
    <id>https://sanscan12.github.io/posts/d3.html</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-05-03T12:51:10.427Z</updated>
    
    <content type="html"><![CDATA[<h1 id="赛博风格"><a href="#赛博风格" class="headerlink" title="赛博风格"></a>赛博风格</h1><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p>科技、时尚、未来、神秘、低生活、黑客、数字空间、恐怖·····</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/5.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/2.png" alt=""></p><h2 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h2><h3 id="黑暗系列"><a href="#黑暗系列" class="headerlink" title="黑暗系列"></a>黑暗系列</h3><p><font color=#1c1769>#1c1769</font> 、<font color=#eb19c4>#ed175c</font> 、<font color=#fc4ced>#fc4ced</font> 、<font color=#05ffdc>#05ffdc</font>   、<font color=#40d4fa>#40d4fa</font> 、<font color=#e2fcfd>#e2fcfd</font> 、<font color=#21eafe>#21eafe</font> </p><h3 id="光感"><a href="#光感" class="headerlink" title="光感"></a>光感</h3><p>背景偏暗，要灯光点要强烈光感，方框线高亮</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/7.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/9.jpg" alt=""></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>故障感、粗体、倾斜</p><h3 id="屏幕故障"><a href="#屏幕故障" class="headerlink" title="屏幕故障"></a>屏幕故障</h3><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/6.png" alt=""></p><p>注入灵魂。RGB 三原色 体现出来</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/4.png" alt=""></p><h3 id="环境字体"><a href="#环境字体" class="headerlink" title="环境字体"></a>环境字体</h3><p>字体描边高亮，字体彩色阴影</p><h3 id="反光"><a href="#反光" class="headerlink" title="反光"></a>反光</h3><p>灯光线反射强烈程度根据反射物决定，暗淡透明升高 或 高亮直白</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/1.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;赛博风格&quot;&gt;&lt;a href=&quot;#赛博风格&quot; class=&quot;headerlink&quot; title=&quot;赛博风格&quot;&gt;&lt;/a&gt;赛博风格&lt;/h1&gt;&lt;h2 id=&quot;元素&quot;&gt;&lt;a href=&quot;#元素&quot; class=&quot;headerlink&quot; title=&quot;元素&quot;&gt;&lt;/a&gt;元素&lt;/h
      
    
    </summary>
    
    
      <category term="其他" scheme="https://Sanscan12.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="分享" scheme="https://Sanscan12.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="喜好" scheme="https://Sanscan12.github.io/tags/%E5%96%9C%E5%A5%BD/"/>
    
      <category term="搭色" scheme="https://Sanscan12.github.io/tags/%E6%90%AD%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo个人装饰及解决问题篇</title>
    <link href="https://sanscan12.github.io/posts/e958.html"/>
    <id>https://sanscan12.github.io/posts/e958.html</id>
    <published>2020-04-26T16:00:00.000Z</published>
    <updated>2020-05-07T09:55:45.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo个人装饰篇"><a href="#Hexo个人装饰篇" class="headerlink" title="Hexo个人装饰篇"></a>Hexo个人装饰篇</h1><h2 id="颜色更改"><a href="#颜色更改" class="headerlink" title="颜色更改"></a>颜色更改</h2><p>看图，找要修改样式颜色的！</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no3.jpg" style="zoom:50%;" /><p>主题里的文件路径：<code>..\source\css\matery.css</code><br>在本地找到相应位置的文件查找对象修改部署即可！！!<br>附加：可选透明颜色的值有</p><table><thead><tr><th>颜色值</th><th>说明</th></tr></thead><tbody><tr><td>rgba(255, 255, 255, 0.6)</td><td>最后一个参数是调节透明度</td></tr><tr><td>transparent</td><td>完全透明</td></tr></tbody></table><h2 id="背景渐变颜色"><a href="#背景渐变颜色" class="headerlink" title="背景渐变颜色"></a>背景渐变颜色</h2><p>以下是颜色值：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">142</span>,<span class="token number">140</span>, <span class="token number">220</span>, <span class="token number">0.7</span><span class="token punctuation">)</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">215</span>,<span class="token number">180</span>, <span class="token number">215</span>, <span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>参数1的值</th><th>说明</th></tr></thead><tbody><tr><td>to right(向右)、to left(向左)、to top(向上)、to buttom(向下)</td><td>线性渐变</td></tr><tr><td>right top、right buttom、left top、left buttom</td><td>斜线渐变</td></tr><tr><td>circle</td><td>放射性渐变</td></tr><tr><td>ellipse</td><td>圆形渐变</td></tr></tbody></table><h2 id="文本阴影"><a href="#文本阴影" class="headerlink" title="文本阴影"></a>文本阴影</h2><p>以下是颜色值：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">text-shadow</span><span class="token punctuation">:</span><span class="token number">0</span>px <span class="token number">0</span>px <span class="token number">3</span>px <span class="token hexcode">#05ffd</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>参数：</p><ol><li>阴影水平偏移值（可取正负值）</li><li>阴影垂直偏移值（可取正负值）</li><li>阴影模糊值</li><li>阴影颜色</li></ol></blockquote><h2 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h2><p>看图：<br><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no4.jpg" alt=""></p><p>样式属性为：background-color: transparent; 即可！<br>主题里的文件路径：<code>..\source\css\matery.css</code></p><h2 id="主页面壁纸透明"><a href="#主页面壁纸透明" class="headerlink" title="主页面壁纸透明"></a>主页面壁纸透明</h2><p>先用ps对图片进行编辑！</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no1.jpg" style="zoom:50%;" /><p>在ps另存PNG格式，然后编辑更改为JPG格式</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no2.jpg" style="zoom:50%;" /><p>把图片文件放到相应位置即可部署即可！！!</p><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><p>在<code>themes/matery/source/css/matery.css</code>找到<code>.bg-color</code>类选择器编辑即可<br>下图是我的编辑<br><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no7.jpg" alt=""></p><h2 id="背景动态线条"><a href="#背景动态线条" class="headerlink" title="背景动态线条"></a>背景动态线条</h2><p>在<code>themes/matery/layout/layout.ejs</code>文件里的body范围内添加以下代码：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span>color<span class="token operator">=</span><span class="token string">"209 235 227"</span> opacity<span class="token operator">=</span><span class="token string">'0.6'</span> zIndex<span class="token operator">=</span><span class="token string">"-2"</span> count<span class="token operator">=</span><span class="token string">"300"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h2><p>如果你有你喜欢的字体，先网站  <a href="https://transfonter.org/" target="_blank" rel="noopener">https://transfonter.org/</a>  编码，字体转base64编码<br><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no6.jpg" style="zoom: 33%;" /></p><p>下载完后，在博客路径里<code>../source/font</code>里放刚刚下载的字体文件（.ttf）。如果没有font文件夹自行创建放进去。<br>最后在路径<code>../themes/matery/source/css/my.css</code>添加代码。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myFont'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('../font/myFont.ttf')</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myFont'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例子：</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/no5.jpg" style="zoom:50%;" /><p>保存部署即可。<br><strong>学习来源：</strong></p><ol><li><a href="https://www.cnblogs.com/victorlyw/articles/9970805.html" target="_blank" rel="noopener">https://www.cnblogs.com/victorlyw/articles/9970805.html</a></li><li><a href="https://yafine-blog.cn/posts/49fb.html" target="_blank" rel="noopener">https://yafine-blog.cn/posts/49fb.html</a></li></ol><h2 id="代码块样式"><a href="#代码块样式" class="headerlink" title="代码块样式"></a>代码块样式</h2><p>在根路经git运行</p><pre class="line-numbers language-npm"><code class="language-npm">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在根路经目录下_config.yml打开，查找位置<code>highlight</code>，大概位置在50行</p><pre class="line-numbers language-yml"><code class="language-yml">highlight:  enable: false # 把原本的true改为false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在下面新添加以下代码：</p><pre class="line-numbers language-yml"><code class="language-yml">prism_plugin:  mode: 'preprocess'     theme: 'duotone-light' #主题  line_number: true  custom_css: ''     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新部署即可~<br><strong>学习来源：</strong><a href="https://yafine-blog.cn/posts/8c84.html#toc-heading-7" target="_blank" rel="noopener">https://yafine-blog.cn/posts/8c84.html#toc-heading-7</a></p><h2 id="动态标题"><a href="#动态标题" class="headerlink" title="动态标题"></a>动态标题</h2><p>在主题文件下的<code>layout/layout.ejs</code>文件中添加代码，要在标签<code>&lt;bdoy&gt;</code>内添加</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>        <span class="token keyword">var</span> OriginTitile<span class="token operator">=</span>document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>st<span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            document<span class="token punctuation">.</span>hidden<span class="token operator">?</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">" 网站丢失啦 qwq ！"</span><span class="token punctuation">,</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">"ヾ(Ő∀Ő3)ノ欢迎回来！"</span><span class="token punctuation">,</span>st<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span>OriginTitile<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>学习来源：</strong><a href="https://yafine-blog.cn/posts/8c84.html#toc-heading-7" target="_blank" rel="noopener">https://yafine-blog.cn/posts/8c84.html#toc-heading-7</a></p><h2 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h2><p>首先你找到自己喜欢的鼠标图，后缀最好是png格式32x32大小的透明背景图，别的格式不能保证起到期望效果，也可以自己动手ps。</p><blockquote><p><font color=red> <strong>重点：</strong></font></p><ol><li>图片大小32x32</li><li>图片格式png</li><li>图片背景透明</li><li>3个鼠标样式分为：默认、链接/图片、指示文本</li></ol></blockquote><p><strong>教程步骤：</strong></p><ol><li>在主题路径的 <code>source</code> 里新建文件夹 <code>shubiao</code> 的文件夹</li><li><code>shubiao</code> 用来存放鼠标图片的位置，留意一下图片名称一会用到</li><li>到主题路径的 <code>source\css\my.css</code> 的my.css文件配置样式</li><li>在最下面添加代码（不要盲目照抄，因为我用的是自己的仓库）</li><li><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo  s</code> 在4000端口预览，成功部署即可！！！</li></ol><p>url中我用了鼠标样式图片加速，使用方法：</p><pre class="line-numbers language-text"><code class="language-text">http://cdn.jsdelivr.net/gh/[github用户名]/[github用户名.github.io]/shubiao/图片名加后缀<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我用的，例子：</p><pre class="line-numbers language-text"><code class="language-text">http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/11.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><font color=red> <strong>鼠标样式末端定义说明：</strong></font><br>11.png 默认样式样式<br>22.png 链接打开样式<br>33.png 指示文本样式<br>url的值可以根据自己的图片链接设定</p></blockquote><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/11.png")</span>, default <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/11.png")</span>, default <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/22.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:hover</span> span </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/22.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token pseudo-class">:hover</span> img </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/22.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token pseudo-class">:hover</span> span </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/22.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token pseudo-class">:hover</span> button </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*d */</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/22.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token pseudo-class">:hover</span> textarea </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/33.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token pseudo-class">:hover</span> input </span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url">url("http://cdn.jsdelivr.net/gh/Sanscan12/Sanscan12.github.io/shubiao/33.png")</span>, pointer <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>代码详细：（可跳过）</strong></p><p><code>:hover</code> ：作用鼠标经过时显示</p><p><code>!important</code>：可以获取最高权限来下显示鼠标样式，并覆盖原有的鼠标样式</p><p><code>cursor</code> 属性规定要显示的光标的类型（形状）该属性定义了鼠标指针放在一个元素边界范围内时所用的光标形状</p><table><thead><tr><th align="left">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">url</td><td align="left">需使用的自定义光标的 URL。注释：请在此列表的末端始终定义一种普通的光标，以防没有由 URL 定义的可用光标</td></tr><tr><td align="left">default</td><td align="left">默认光标（通常是一个箭头）</td></tr><tr><td align="left">auto</td><td align="left">默认。浏览器设置的光标</td></tr><tr><td align="left">crosshair</td><td align="left">光标呈现为十字线</td></tr><tr><td align="left">pointer</td><td align="left">光标呈现为指示链接的指针（一只手）</td></tr><tr><td align="left">move</td><td align="left">此光标指示某对象可被移动</td></tr><tr><td align="left">e-resize</td><td align="left">此光标指示矩形框的边缘可被向右（东）移动</td></tr><tr><td align="left">ne-resize</td><td align="left">此光标指示矩形框的边缘可被向上及向右移动（北/东）</td></tr><tr><td align="left">nw-resize</td><td align="left">此光标指示矩形框的边缘可被向上及向左移动（北/西）</td></tr><tr><td align="left">n-resize</td><td align="left">此光标指示矩形框的边缘可被向上（北）移动</td></tr><tr><td align="left">se-resize</td><td align="left">此光标指示矩形框的边缘可被向下及向右移动（南/东）</td></tr><tr><td align="left">sw-resize</td><td align="left">此光标指示矩形框的边缘可被向下及向左移动（南/西）</td></tr><tr><td align="left">s-resize</td><td align="left">此光标指示矩形框的边缘可被向下移动（南）</td></tr><tr><td align="left">w-resize</td><td align="left">此光标指示矩形框的边缘可被向左移动（西）</td></tr><tr><td align="left">text</td><td align="left">此光标指示文本</td></tr><tr><td align="left">wait</td><td align="left">此光标指示程序正忙（通常是一只表或沙漏）</td></tr><tr><td align="left">help</td><td align="left">此光标指示可用的帮助（通常是一个问号或一个气球）</td></tr></tbody></table><h2 id="目录样式"><a href="#目录样式" class="headerlink" title="目录样式"></a>目录样式</h2><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Mlml1.png" style="zoom:50%;" /><blockquote><ol><li>滚动条去掉</li><li>方块去掉</li></ol></blockquote><p>在主题文件下 <code>source\css\my.css</code> 文件，最下面添加代码</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*去掉滚动条*/</span><span class="token selector"><span class="token id">#toc-content</span> </span><span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*去掉方块*/</span><span class="token selector"><span class="token id">#toc-content</span> <span class="token class">.is-active-link</span><span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo  s</code> 在4000端口预览，成功部署即可！！！</p><h1 id="hexo问题解决篇"><a href="#hexo问题解决篇" class="headerlink" title="hexo问题解决篇"></a>hexo问题解决篇</h1><h2 id="文章链接溢出问题"><a href="#文章链接溢出问题" class="headerlink" title="文章链接溢出问题"></a>文章链接溢出问题</h2><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/lj.png" style="zoom:50%;" /><p><strong>解决方案</strong></p><p>在主题文件下<code>source\css\matery.css</code> 文件，查找<code>#artDetail .reprint</code> 位置中添加<code>word-break: break-all;</code>代码。<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo  s</code> 在4000端口预览，成功部署即可！！！<br>以下是例子</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/lj22.png" style="zoom:50%;" /><p>等待更新····</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo个人装饰篇&quot;&gt;&lt;a href=&quot;#Hexo个人装饰篇&quot; class=&quot;headerlink&quot; title=&quot;Hexo个人装饰篇&quot;&gt;&lt;/a&gt;Hexo个人装饰篇&lt;/h1&gt;&lt;h2 id=&quot;颜色更改&quot;&gt;&lt;a href=&quot;#颜色更改&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="配置" scheme="https://Sanscan12.github.io/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="css" scheme="https://Sanscan12.github.io/tags/css/"/>
    
      <category term="分享" scheme="https://Sanscan12.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="hexo" scheme="https://Sanscan12.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>结构写作</title>
    <link href="https://sanscan12.github.io/posts/54dc.html"/>
    <id>https://sanscan12.github.io/posts/54dc.html</id>
    <published>2020-04-23T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="结构写作训练"><a href="#结构写作训练" class="headerlink" title="结构写作训练"></a>结构写作训练</h1><h2 id="确定写作方向"><a href="#确定写作方向" class="headerlink" title="确定写作方向"></a>确定写作方向</h2><p><font size=2>如何确定写作内容？</font></p><h3 id="分析目标对象"><a href="#分析目标对象" class="headerlink" title="分析目标对象"></a>分析目标对象</h3><p> 通过<strong>提问</strong>、<strong>观察</strong>、<strong>侧面了解</strong>。<br> <strong>第一层次：</strong>对方是否与你所持的立场一致?<br> <strong>第二层次：</strong>对方是否存在客观环境和外部资源的约束？</p><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>　　老板最近发现公司的效率不高，是因为层级太多，导致信息传递很慢。于是，他想通过减少组织层级的方法，来解决这个问题。但是呢，这种方案在实际执行后，会遇到很多阻力，没法一下子什么都不管地进行推进。于是，他布置了一个任务，让部门写一份组织架构调整方案。<br>　　老板是想通过减少组织层级来提高效率的（目的），实际行动时，会遇到很多问题，有客观环境和外部资源的问题（约束），只是苦于没有解决这些问题的方案，所以暂时没办法这么实施行动。</p><hr><h3 id="游说矩形"><a href="#游说矩形" class="headerlink" title="游说矩形"></a>游说矩形</h3><table><thead><tr><th></th><th><strong>与你立场一致</strong></th><th><strong>与你立场不一致</strong></th></tr></thead><tbody><tr><td><strong>不存在约束（资源充足）</strong></td><td>罗列事实:提供给对方需要知道的事实</td><td>说服:强调利益所在，说服对方转换立场</td></tr><tr><td><strong>存在约束</strong></td><td>解决问题:对受约束的问题，提供解决方案</td><td>既要说服，也要解决问题</td></tr></tbody></table><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>　　上司让你写一份策划案，关于举办元旦庆祝晚会的事，预算金<br>额大概是5000元。<br><strong>情况一，立场一致且不存在资源约束问题</strong></p><blockquote><p><font size=2><strong>就可以只简单提供给对方他需要知道的事实</strong>。只需要把这个场所离工作的地点近、菜单品种丰富、要价也在预算之内等信息，传递给你的老板就好了。</font></p></blockquote><p><strong>情况二，立场一致且存在资源约束问题</strong></p><blockquote><p><font size=2><strong>需要侧重于解决问题，受约束的问题，提供你的解决方案</strong>。因此，把事情分析清楚，使他觉得“虽然超支1000元、但是非常物有所值”。或者也可以告诉老板，如果这次能多提供1000元的预算资金，你会在另外一个活动中节约出这1000元的预算开支等。</font></p></blockquote><p><strong>情况三，立场不一致且不存在资源约束问题</strong></p><blockquote><p><font size=2><strong>内容就应该强调你的建议能带来的好处，说服对方转换立场，同意你的建议。</strong>庆祝元旦的方式由聚餐改为去看话剧演出。就应该是强调看元旦话剧演出的好处，想办法说服你的老板，让他转换立场。比如说，看元旦话剧，更能够给员工留下特殊的回忆等等。</font></p></blockquote><p><strong>情况四，立场不一致且存在资源约束问题</strong></p><blockquote><p><font size=2><strong>先说服对方转换立场，再解决相关的约束问题。</strong>如果你想建议用看一场元旦话剧演出代替原来的聚餐，而且演出的整体票价也超过了预算。就应该是先表明看元旦话剧演出的处，让他转换立场，再对预算超了的问题提出解决方案。</font></p></blockquote><hr><h2 id="构思写作框架"><a href="#构思写作框架" class="headerlink" title="构思写作框架"></a>构思写作框架</h2><h3 id="四步法构思写作框架"><a href="#四步法构思写作框架" class="headerlink" title="四步法构思写作框架"></a>四步法构思写作框架</h3><ol><li><p><strong>收集素材：</strong>事实、观点、故事、新闻</p></li><li><p><strong>提炼结构：</strong><br>信息归类、归纳共性、提炼结构、验证结构</p><p>常用结构：简单类、要素类、二维矩形类、流程类</p></li><li><p><strong>补充信息：</strong>除了包括最开始的素材，从最终确定的结构所关联想到的相关素材 ，也需要补充</p></li><li><p><strong>提炼主题：</strong><br>结论法：由下层信息推导出上层信息，适用于做因果关系推论</p></li></ol><hr><p><strong>事实</strong>是已经发生或存在的一种客观状况，它可以被证明真或假。而<strong>观点</strong>则往往表达个人的看法，是你的预测、推断、结论等主观的表达。比如你说今天很冷，但别人不这么认为···。好的<strong>故事</strong>，能够吸引读者看下去，或者调动他们的情感、引发共鸣，又或者让内容更容易被理解。<strong>新闻</strong>素材，有时效性，能作为事实信息来佐证自己的观点。新闻素材可根据场景来定。<br><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>　　朋友来向你询问职业选择的建议，他拿到了两个offer，技术方面的，销售方面的。你分析了他的特点和相关岗位后。以下是你经过头脑风暴和查阅资料后，收集到的素材:</p><ol><li>他学的专业是工科，有做技术的基本知识</li><li>他的性格外向，更喜欢与人交往，做销售可能更适合他的个性</li><li>销售岗位的晋升可能更容易，晋升会伴随着加薪</li><li>做技术的基本工资可能较高</li><li>销售的奖金更多</li><li>他没有做销售的经验和知识，上手需要–定的时间</li></ol><p><strong>信息归类：</strong>3 , 4 , 5 ；1 , 6  ；2<br><strong>归纳共性：</strong>3 , 4 , 5 归纳为工资待遇，1 , 6 归纳为知识经验和经验储备，2就是有关性格的<br><strong>提炼结构：</strong>以重要性可分类为：工资、性格、知识储备。然后根据MECE原则验证结构。</p><p>把工资、知识经验储备和性格，补充为赚钱、擅长和兴趣的最终结构。赚钱分组下，原来收集的素材中只考虑了基本工资、加薪速度、奖金等，现在还能想到的是，发放的福利也会影响赚钱的多少，所以可以将它补充进去。<strong>补充信息</strong>。</p><p>素材中推导出各个类别的三个子主题是“做销售更有赚大钱的机会”、“朋友更喜欢做销售”、“朋友能够把销售做好”。最后主题为：我应该建议朋友做销！</p><hr><h2 id="填充内容与成文修改"><a href="#填充内容与成文修改" class="headerlink" title="填充内容与成文修改"></a>填充内容与成文修改</h2><p><font size=2>如何丰富内容和修改？</font></p><h3 id="正式写作四个步骤"><a href="#正式写作四个步骤" class="headerlink" title="正式写作四个步骤"></a>正式写作四个步骤</h3><ol><li><p><strong>主题鲜明：</strong></p><ul><li>主题要符合预期</li><li>铺垫要适应</li><li>避免没有思想的主题</li></ul></li><li><p><strong>完善提纲：</strong></p><p>根据提纲补充每个子主题下的支持信息</p></li><li><p><strong>承上启下：</strong></p><p>从上个平主题中，挑选个关键词/短语来总结思想，将用在下个主期的起始句中。</p></li><li><p><strong>结尾升华：</strong></p><p>阐明建议或下一步计划，展望未来。</p></li></ol><h3 id="检查修改文章的五个方面"><a href="#检查修改文章的五个方面" class="headerlink" title="检查修改文章的五个方面"></a>检查修改文章的五个方面</h3><ol><li><p><strong>主题：</strong><br>检查主题和子主题是否明确</p></li><li><p><strong>思路：</strong><br>检查支持主题的子主题是否充分，排布是否符合提纲的结构顺序</p></li><li><p><strong>内容：</strong></p><p>检查子主题内的支持论据是否具体，必要时加数字的证据</p></li><li><p><strong>表述：</strong></p><p>检查你的传达目的是否达到，语言是否尽量口语化。是否需要附注、附件。</p></li><li><p><strong>其他：</strong></p><p>检查语法、标点符号、词语</p></li></ol><h2 id="常见商务文体写作"><a href="#常见商务文体写作" class="headerlink" title="常见商务文体写作"></a>常见商务文体写作</h2><h3 id="商业邮件的六个步骤"><a href="#商业邮件的六个步骤" class="headerlink" title="商业邮件的六个步骤"></a>商业邮件的六个步骤</h3><ol><li>在标题栏写明主题</li><li>开头概括出需要接收者做的事(主题)</li><li>中间内容说明情况，用简单明了的词语、避免长句复杂句，重要的内容特殊标出。</li><li>结尾再次给山明确的行动指令，给出相关的截止时间。</li><li>某一单独部分的内容过多时，可以适当地使用链接和附件。</li><li>发送前，用5W1H来检验所给的信息是否完整。</li></ol><p>工作总结的三个部分</p><ol><li><strong>工作业绩</strong><br>写框架可参考KPI列表，或参考以下四个方面，对收入利润的贡献、对客户/用户的贡献、对管理的贡献和流程的贡献，以及对学习成长的贡献</li><li><strong>个人成长</strong><br>写框架可参考岗位所需的能力项目。客观分析个人的进步和不足，总结经验和教训；通过他人评价、个人真实案例来展现闪光点</li><li><strong>工作计划</strong><br>参考PDCA模型制定计划。P(Plan)计划、 D(Do)执行、 C(Check)检查、A(Action)修正</li></ol><p>未完成···</p><p><strong>学习来源：圈外同学</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;结构写作训练&quot;&gt;&lt;a href=&quot;#结构写作训练&quot; class=&quot;headerlink&quot; title=&quot;结构写作训练&quot;&gt;&lt;/a&gt;结构写作训练&lt;/h1&gt;&lt;h2 id=&quot;确定写作方向&quot;&gt;&lt;a href=&quot;#确定写作方向&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="常识" scheme="https://Sanscan12.github.io/categories/%E5%B8%B8%E8%AF%86/"/>
    
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="圈外同学" scheme="https://Sanscan12.github.io/tags/%E5%9C%88%E5%A4%96%E5%90%8C%E5%AD%A6/"/>
    
      <category term="写作" scheme="https://Sanscan12.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>生活计划</title>
    <link href="https://sanscan12.github.io/posts/f461.html"/>
    <id>https://sanscan12.github.io/posts/f461.html</id>
    <published>2020-04-21T16:00:00.000Z</published>
    <updated>2020-05-03T12:52:09.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大学生生活计划"><a href="#大学生生活计划" class="headerlink" title="大学生生活计划"></a>大学生生活计划</h1><h2 id="值得关注"><a href="#值得关注" class="headerlink" title="值得关注"></a>值得关注</h2><p>大数据、区块链、VR、AR、5G开发</p><h2 id="期间要做的"><a href="#期间要做的" class="headerlink" title="期间要做的"></a>期间要做的</h2><ol><li>大学的文化课（基础课）不能轻视</li><li>精通一门语言！！！JAVA、C++、Golang等···</li><li>学习语言的<strong>数据结构</strong>、<strong>算法</strong>！</li><li>精通数据库</li><li>网络原理要学好</li><li>认真做一个项目，持续维护。</li></ol><h2 id="找到适合的领域"><a href="#找到适合的领域" class="headerlink" title="找到适合的领域"></a>找到适合的领域</h2><p>多去参加演讲会、讨论会、线下活动、多认识一下爱分享的技术人才</p><h2 id="职业的分类"><a href="#职业的分类" class="headerlink" title="职业的分类"></a>职业的分类</h2><ol><li><p>算法工程师！</p><blockquote><p>机器学习、图形图像处理、自然语言处理<br>适合爱研究耐得住寂寞的一群人</p></blockquote></li><li><p>客户端开发工程师</p><blockquote><p>开发IOS、开发安卓、wed前端、桌面系统<br>培训班大量输出这些人才！（不建议）</p></blockquote></li><li><p>研发工程师！</p><blockquote><p>c、c++、java做系统、搜索引擎、后端<br>服务器端，用户看不到的逻辑处理，往后发展架构师</p></blockquote></li><li><p>数据研发工程师</p><blockquote><p>与大数据相关<br>需要背景、统计学背景</p></blockquote></li><li><p>测试工程师（不建议）</p><blockquote><p>代码测试，检验软件是否通过测试，目前自动化测试不断发展，有淘汰风险不建议往这方面发展</p></blockquote></li><li><p>安全工程师</p><blockquote><p>处理系统的安全隐患，保证系统的安全，掌握多门语言、知识面广</p></blockquote></li><li><p>UED工程师</p><blockquote><p>软件美工，属于美工与代码结合</p></blockquote></li></ol><p>如果有能力自己一定要考研！！！</p><p>指引大佬：b站技术胖</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;大学生生活计划&quot;&gt;&lt;a href=&quot;#大学生生活计划&quot; class=&quot;headerlink&quot; title=&quot;大学生生活计划&quot;&gt;&lt;/a&gt;大学生生活计划&lt;/h1&gt;&lt;h2 id=&quot;值得关注&quot;&gt;&lt;a href=&quot;#值得关注&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="生活" scheme="https://Sanscan12.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="计划" scheme="https://Sanscan12.github.io/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript API笔记</title>
    <link href="https://sanscan12.github.io/posts/e34f.html"/>
    <id>https://sanscan12.github.io/posts/e34f.html</id>
    <published>2020-04-20T16:00:00.000Z</published>
    <updated>2020-05-07T15:53:00.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript初识"><a href="#JavaScript初识" class="headerlink" title="JavaScript初识"></a>JavaScript初识</h1><p>JavaScript是Web页面中的一种脚本编程语言，也是一种通用的、跨平台的、基于对象和事件驱动并具有安全性的脚本语言。它不需要进行编译，而是直接嵌入在HTML页面中，把静态页面转变成支持用户交互并响应相应事件的动态页面。</p><h1 id="在HTML中的使用"><a href="#在HTML中的使用" class="headerlink" title="在HTML中的使用"></a>在HTML中的使用</h1><h2 id="在页面中直接嵌入JavaScript"><a href="#在页面中直接嵌入JavaScript" class="headerlink" title="在页面中直接嵌入JavaScript"></a>在页面中直接嵌入JavaScript</h2><p>​    在HTML文档中可以使用<script>... </script>标记将JavaScript脚本嵌入到其中。<br>​<strong>script属性：</strong></p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>language</td><td>不常用</td></tr><tr><td>type</td><td>用于指定使用的脚本类型</td></tr><tr><td>src</td><td>指定外部脚本文件路径</td></tr><tr><td>defer</td><td>不常用</td></tr></tbody></table><p><strong>type属性的语法格式：</strong></p><pre class="line-numbers language-html"><code class="language-html">&lt;script type = "text/javascript"><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="链接外部JavaScript文件"><a href="#链接外部JavaScript文件" class="headerlink" title="链接外部JavaScript文件"></a>链接外部JavaScript文件</h2><p>​    语法格式：<em>多了个src属性</em></p><pre class="line-numbers language-html"><code class="language-html">&lt;script type = "text/javascript" src = "js文件的rul路径"><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong> </p><ol><li>外部JavaScript文件中只能包含JavaScript代码，不能包含HTML和<code>&lt;script&gt;</code>标签。 </li><li>在<code>&lt;script&gt;</code>标签内部不要存在其他的JavaScript代码。 </li><li>在链接外部JavaScript文件时<code>&lt;/script&gt;</code>结束标签不能省略。</li></ol><h2 id="作为标签的属性值使用"><a href="#作为标签的属性值使用" class="headerlink" title="作为标签的属性值使用"></a>作为标签的属性值使用</h2><p>在HTML文档中可以在<code>&lt;a&gt;</code>标签、<code>&lt;input&gt;</code>标签 中使用JavaScript脚本作为它们的属性值。<br>    <strong>通过“JavaScript”调用</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>你好JavaScript<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    <strong>与实践结合调用</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>测试<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>你好JavaScript <span class="token punctuation">'</span>)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><p>程序按照在HTML文件中出现的顺序逐行执行。</p><h2 id="大小写敏感"><a href="#大小写敏感" class="headerlink" title="大小写敏感"></a>大小写敏感</h2><p>在输入语言的关键字、函数名、变量时，都必须采用正确的大小写形式。</p><h2 id="空格与换行"><a href="#空格与换行" class="headerlink" title="空格与换行"></a>空格与换行</h2><p>在JavaScript中会忽略程序中的空格、换行和制表符。</p><h2 id="每行结尾的分号可有可无"><a href="#每行结尾的分号可有可无" class="headerlink" title="每行结尾的分号可有可无"></a>每行结尾的分号可有可无</h2><p>为了养好习惯，经量写上分号。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>注释就是向文件代码中添加的–些说明性的文字，或者对代码进行暂时屏蔽。<code>//内容</code>ro <code>/*内容*/</code></p><hr><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h3><table><thead><tr><th>数值类型</th><th>说明</th></tr></thead><tbody><tr><td>十进制</td><td>由0~9组成的数字序列</td></tr><tr><td>十六进制</td><td>“0X”或“0x”开头数字序列</td></tr><tr><td>八进制</td><td>以0开头</td></tr><tr><td>浮点型</td><td>传统计数法、科学计数法e或E后面的整数表示10的指数次幂</td></tr><tr><td>特殊值Infinity</td><td>超出最大值范围，则正<br />超出最小范围，则负</td></tr><tr><td>特殊值NaN</td><td>非数字</td></tr></tbody></table><p><strong>科学计数法</strong><br>语法格式：</p><pre class="line-numbers language-text"><code class="language-text">[digits] [.digits] [E|e[(+|-)]]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例子：<br>$$<br>4E+2 = 4*10^{2} = 400<br>$$</p><p>$$<br>3.14e4 = 3.14*10^{4} = 31400<br>$$</p><p>$$<br>.14e4 = 0.14*10^{4} = 1400<br>$$</p><p>$$<br>314E-2 = 314*10^{-2} = 3.14<br>$$</p><h3 id="字符串型"><a href="#字符串型" class="headerlink" title="字符串型"></a>字符串型</h3><p>字符串是由0个或多个字符组成的序列，它可以包含<strong>太小写字母、数字、标点符号或其他字符，也可以包含汉字</strong>。程序中的字符串型数据是包含在<strong>单引号或双引号</strong>中的。<br><em>由单引号定界的字符串中可以含有双引号，由双引号定界的字符串中也可以含有单引号。</em></p><pre class="line-numbers language-text"><code class="language-text">"I'm legend" = I'm legend '你好"JavaScript"' = 你好"JavaScript"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>空字符串</strong>不包含任何字符，也不包含任何空格，用一对引号表示，即 “” 或 ‘ ‘<br><strong>转义字符</strong>是<code>\</code>，通过转义字符可以在字符串中<strong>添加不可显示的特殊字符</strong>（例如<code>\n</code>, <code>\t</code>），或者<strong>防止引号匹配混乱</strong>的问题 </p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><table><thead><tr><th>转义字符</th><th>描述</th></tr></thead><tbody><tr><td>\r</td><td>回车符</td></tr><tr><td>\t</td><td>水平制表符，Tab空 格</td></tr><tr><td>\b</td><td>退格</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\f</td><td>换页</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\ \</td><td>反斜杠</td></tr><tr><td>\OOO</td><td>八进制，范围000~777</td></tr><tr><td>\ ‘</td><td>单引号</td></tr><tr><td>\xHH</td><td>十六进制整数，范围00~FF</td></tr><tr><td>\ “</td><td>双引号</td></tr><tr><td>\uhhhh</td><td>十六进制编码Unicode字符</td></tr></tbody></table><p>在document. write()语句中使用转义字符时，只有将其放在格式化文本块中才会起作用，即脚本必须放在<code>&lt;pre&gt;&lt;/pre&gt;</code>标签内。<br>代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;pre>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"网页基础:\nHTML\nCSS\nJavascript"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;pre>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/js1.png" alt=""></p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><p>布尔数据类型只有两个值，一 个是true （真），一个是false （假），它说明了某个事物是真还是假。<br><strong>特殊数据类型：</strong><br>未定义值就是undefined，表示还没赋值</p><h3 id="空值-null"><a href="#空值-null" class="headerlink" title="空值  (null)"></a>空值  (null)</h3><p>用于定义空的或不存在的引用。</p><h3 id="常量与变量"><a href="#常量与变量" class="headerlink" title="常量与变量"></a>常量与变量</h3><p>常量：固定不变数据<br>变量：存储要用的数据<br>如果只是声明了变量，并未对其赋值，则其值默认为undef ined。可以使用var语句重复声明同一个变量，也可以在重复声明变量时为该变量赋一个新值。<br><em>在JavaScript中的变量必须要先定义后使用，没有定义过的变量不能直接使用。</em></p><h2 id="JavaScript的关键字"><a href="#JavaScript的关键字" class="headerlink" title="JavaScript的关键字"></a>JavaScript的关键字</h2><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>abstract</td><td>continue</td><td>finally</td><td>instanceof</td><td>private</td></tr><tr><td>boolean</td><td>default</td><td>float</td><td>int</td><td>public</td></tr><tr><td>break</td><td>do</td><td>for</td><td>interface</td><td>return</td></tr><tr><td>byte</td><td>double</td><td>function</td><td>long</td><td>short</td></tr><tr><td>case</td><td>else</td><td>goto</td><td>native</td><td>static</td></tr><tr><td>catch</td><td>extends</td><td>implements</td><td>new</td><td>super</td></tr><tr><td>char</td><td>false</td><td>import</td><td>null</td><td>switch</td></tr><tr><td>class</td><td>final</td><td>in</td><td>package</td><td>synchronized</td></tr><tr><td>this</td><td>throw</td><td>typeof</td><td>true</td><td>var</td></tr><tr><td>void</td><td>while</td><td>with</td><td></td><td></td></tr></tbody></table><hr><h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><p>用于在程序中进行加、减、乘、除等运算。</p><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>对操作数进行比较，然后返回一个布尔值true或faIse.</p><blockquote><p><code>&lt;</code> , <code>&lt;=</code> , <code>&gt;</code> , <code>&gt;=</code> , <code>==</code> , <code>!=</code> , <code>===</code> (绝对等于) , <code>!==</code>(绝对不等于)</p></blockquote><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p><strong>简单赋值运算符</strong>：<code>=</code><br><strong>符合赋值运算符</strong>：<code>+=</code> , <code>-=</code> , <code>*=</code> , <code>/=</code> , <code>%=</code></p><h2 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h2><p>用于两个字符串型数据之间的运算符，它的作用是将两个字符串连接起来。<br><em>如果比较字符串，则逐个比较字符的ASCIl码值，ASCII码值大的字符串大。ASCII码值都相等，字符数多的字符串大。</em></p><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>用于对一个或多个布尔值进行逻辑运算：<code>&amp;&amp;</code>（与 ）、<code>||</code>（或） 、<code>!</code>(非） </p><h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><blockquote><p>表达式?结果1:结果2<br>结果1为: <code>true</code><br>结果2为: <code>false</code></p></blockquote><h2 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h2><p>用于将多个表达式排在一起，整个表达式的值为最后一个表达式的值。<br>例子：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> a <span class="token punctuation">,</span> b <span class="token punctuation">,</span> c <span class="token punctuation">,</span> d<span class="token punctuation">;</span>a <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">3</span> <span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">4</span> <span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"a最终值为"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//结果为 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运算符-typeof"><a href="#运算符-typeof" class="headerlink" title="运算符 (typeof)"></a>运算符 (typeof)</h2><p><font color =#05ffdc>typeof</font> 用于判断操作数的数据类型。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">typeof</span> 操作数<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>数据类型（操作数）</th><th>返回值</th></tr></thead><tbody><tr><td>数值型</td><td>number</td></tr><tr><td>字符串型</td><td>string</td></tr><tr><td>布尔型</td><td>boolean</td></tr><tr><td>undefined</td><td>nudefined</td></tr><tr><td>null</td><td>object</td></tr><tr><td>对象</td><td>object</td></tr><tr><td>函数</td><td>functio</td></tr></tbody></table><h2 id="运算符-new"><a href="#运算符-new" class="headerlink" title="运算符 (new)"></a>运算符 (new)</h2><p><font color =#05ffdc>new</font> 用来创建一个新的对象实例。语法格式：</p><blockquote><p>格式1：<br>对象实例名称 = new 对象类型(参数);<br>格式2：<br>对象实例名称 = new 对象类型2;</p></blockquote><h2 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h2><table><thead><tr><th>优先级</th><th>结合性</th><th>运算符</th></tr></thead><tbody><tr><td>最高</td><td>向左</td><td>、[]、()</td></tr><tr><td>由高到低依次排列</td><td></td><td>++、–、-、！、delete、new、typeof、void</td></tr><tr><td></td><td>向左</td><td>*、/、%</td></tr><tr><td></td><td>向左</td><td>+、-</td></tr><tr><td></td><td>向左</td><td>&lt;&lt;、&gt;&gt; 、&gt;&gt;</td></tr><tr><td></td><td>向左</td><td>&lt;、&lt;=、&gt;、&gt;=、in、instanceof</td></tr><tr><td></td><td>向左</td><td>=、!=、=== 、 绝对不等于</td></tr><tr><td></td><td>向左</td><td>&amp;</td></tr><tr><td></td><td>向左</td><td>^</td></tr><tr><td></td><td>向左</td><td>|</td></tr><tr><td></td><td>向左</td><td>&amp;&amp;</td></tr><tr><td></td><td>向左</td><td>||</td></tr><tr><td></td><td>向右</td><td>?:</td></tr><tr><td></td><td>向右</td><td>=</td></tr><tr><td></td><td>向右</td><td>=、/=、%=、+=、-=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=、&amp;=、^=、|=</td></tr><tr><td>最低</td><td>向右</td><td>,</td></tr></tbody></table><p><strong>结合性</strong><br>左结合：除了赋值、条件和单目运算符<br>右结合：赋值运算符、条件运算符</p><hr><h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><p>是<strong>运算符</strong>和<strong>操作数</strong>组合而成的式子。运算结果可分为：<strong>算术表达式</strong>、<strong>字符串表达式</strong>、<strong>逻辑表达式</strong><br><em>表达式是一个相对的概念，在表达式中可以含有若千个子表达式，而且表达式中的一个常量或变量都可以看作是一个表达式。</em></p><h2 id="表达式类型转换"><a href="#表达式类型转换" class="headerlink" title="表达式类型转换"></a>表达式类型转换</h2><h3 id="转换为数值型"><a href="#转换为数值型" class="headerlink" title="转换为数值型"></a>转换为数值型</h3><table><thead><tr><th>类型</th><th>转换为数值型</th></tr></thead><tbody><tr><td>undefined</td><td>NaN</td></tr><tr><td>null</td><td>0</td></tr><tr><td>逻辑型</td><td>true,则为 1 ;false,则为 0</td></tr><tr><td>字符串型</td><td>若内容为数字，则相应的数字，否则为NaN</td></tr><tr><td>其他对象</td><td>NaN（非数字）</td></tr></tbody></table><h3 id="转换为布尔型"><a href="#转换为布尔型" class="headerlink" title="转换为布尔型"></a>转换为布尔型</h3><table><thead><tr><th>类型</th><th>转换为布尔型</th></tr></thead><tbody><tr><td>undefined</td><td>false</td></tr><tr><td>null</td><td>false</td></tr><tr><td>数值型</td><td>值为0或NaN,则结果为false,否则为true</td></tr><tr><td>字符串型</td><td>长度为0，则结果为false,否则为true</td></tr><tr><td>其他对象</td><td>true</td></tr></tbody></table><h3 id="转换为字符串型"><a href="#转换为字符串型" class="headerlink" title="转换为字符串型"></a>转换为字符串型</h3><table><thead><tr><th>类型</th><th>转换为字符串型</th></tr></thead><tbody><tr><td>undefined</td><td>“undefined”</td></tr><tr><td>null</td><td>“null”</td></tr><tr><td>数值型</td><td>NaN、0或者与数值相对应的字符串</td></tr><tr><td>逻辑型</td><td>值true,则为”true”,值为false,则结果为”false”</td></tr><tr><td>其他对象</td><td>若存在，结果为toString()方法的值，否则结果为”undefined”</td></tr></tbody></table><hr><h1 id="语句结构"><a href="#语句结构" class="headerlink" title="语句结构"></a>语句结构</h1><h2 id="赋值语句"><a href="#赋值语句" class="headerlink" title="赋值语句"></a>赋值语句</h2><p>···</p><h2 id="判断语句-if"><a href="#判断语句-if" class="headerlink" title="判断语句 (if)"></a>判断语句 (if)</h2><p><strong>if语句</strong>，语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>  语句<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>if…else语句</strong>，语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>  语句<span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  语句<span class="token number">2</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>if…else if语句</strong>，语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  语句<span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    语句<span class="token number">2</span><span class="token punctuation">}</span>···<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>表达式n<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句n<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    语句n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>if语句的嵌套</strong></p><p> 套娃格式，if中的if。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        语句<span class="token number">1</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        语句<span class="token number">2</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>表达式<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        语句<span class="token number">3</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        语句<span class="token number">4</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分支语句-switch"><a href="#分支语句-switch" class="headerlink" title="分支语句 (switch)"></a>分支语句 (switch)</h2><p><font color =#05ffdc>switch</font> 它根据一个表达式的值，选择不同的分支执行。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">switch</span> <span class="token punctuation">(</span>表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">case</span> 常量表达式<span class="token number">1</span> <span class="token punctuation">:</span>        语句<span class="token number">1</span><span class="token punctuation">;</span>        ···<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> 常量表达式<span class="token number">2</span> <span class="token punctuation">:</span>        语句<span class="token number">2</span><span class="token punctuation">;</span>        ···<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>        ···    <span class="token keyword">case</span> 常量表达式n <span class="token punctuation">:</span>        语句n<span class="token punctuation">;</span>        ···<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>        语句n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color = #b3d4fc><strong><em>default语句可以省略。在表达式的值不能与任何一个case语句中的值相匹配的情况下，JavaScript会直接结束switch语句，不进行任何操作。</em></strong></font><br><font color=red><strong><em>case后面常量表达式的数据类型必须与表达式的数据类型相同，否则匹配会全部失败，而去执行default语句中的内容。</em></strong></font><br><font color=red><strong><em>在switch语句中漏写break语句。则会影响其他语句</em></strong></font></p><h2 id="循环语句-while"><a href="#循环语句-while" class="headerlink" title="循环语句 (while)"></a>循环语句 (while)</h2><p><font color =#05ffdc>while</font> 判断，它是利用一个条件来控制是否要继续重复执行这个语句。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">while</span><span class="token punctuation">(</span>表达式<span class="token punctuation">)</span><span class="token punctuation">(</span>   语句（循环体）<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color =red><strong><em>在使用while语句时，一定要保证循环可以正常结束，即必须保证条件表达式的值存在为false的情况，否则将形成死循环。</em></strong></font></p><h2 id="循环语句-do…while"><a href="#循环语句-do…while" class="headerlink" title="循环语句 (do…while)"></a>循环语句 (do…while)</h2><p><font color =#05ffdc>do…while</font> 后判断，它也是利用一个条件来控制是否要继续重复执行这个语句。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">do</span><span class="token punctuation">{</span>   语句<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>表达式<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="循环语句-for"><a href="#循环语句-for" class="headerlink" title="循环语句 (for)"></a>循环语句 (for)</h2><p><font color =#05ffdc>for</font> 计次循环，一般用于循环次数已知的情况。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>初始化表达式<span class="token punctuation">;</span>条件表达式<span class="token punctuation">;</span>迭代表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句（循环体）<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color = red><strong><em>在使用for语句时，也一定要保证循环可以正常结束，也就是必须保证循环条件的结果存在为false的情况，否则循环体将无休止地执行下去，从而形成死循环。</em></strong></font></p><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h3><p>用于跳过本次循环，并开始下一次循环。<br><font color = #b3d4fc><em>当使用continue语句跳过本次循环后，如果循环条件的结果为false,则退出<br>循环，否则继续下一次循环。</em></font><br><font color = red><strong><em>continue语句只能应用在while、for、do…while语句中.</em></strong></font></p><h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h3><p>在循环语句中，break语句用于跳出循环。</p><p><font color = red><strong><em>continue语句只能应用在while、for、do…while或switch语句中。在嵌套的循环语句中，break语句只能跳出当前这一层的循环语句，而不是跳出所有的循环语句。</em></strong></font></p><hr><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>函数是<strong>定义一次</strong>，可以<strong>调用或执行多次</strong>的一段JavaScript代码。定义函数的语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">[</span>参数<span class="token number">1</span><span class="token punctuation">,</span>参数<span class="token number">2</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    语句    <span class="token punctuation">[</span><span class="token keyword">return</span>返回值<span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><h3 id="函数的简单调用"><a href="#函数的简单调用" class="headerlink" title="函数的简单调用"></a>函数的简单调用</h3><p>调用的语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">函数名</span><span class="token punctuation">(</span>传递给函数的参数<span class="token number">1</span><span class="token punctuation">,</span>传递给函数的参数<span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color = red><strong>函数名有大小写的区分</strong></font></p><h3 id="在事件响应中调用函数"><a href="#在事件响应中调用函数" class="headerlink" title="在事件响应中调用函数"></a>在事件响应中调用函数</h3><p><strong>事件处理流程</strong>：</p><p><font size =5><em>触发事件→调用和执行函数→在页面中产生响应</em></font></p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> value<span class="token operator">=</span><span class="token string">"提交"</span> onclick<span class="token operator">=</span><span class="token string">"[调用函数]"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="通过链接调用函数"><a href="#通过链接调用函数" class="headerlink" title="通过链接调用函数"></a>通过链接调用函数</h3><p>在 <code>&lt; a &gt;</code> 标签中的href(链接地址)属性中使用<code>javascript:函数名()</code>格式来调用函数，单击这个链接时，函数将被执行。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascaript:[调用函数]"</span><span class="token operator">></span> 单击链接 <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><p>函数的参数分为 <strong>形参</strong> 和 <strong>实参</strong><br><strong>形参</strong>：定义函数时指定的参数<br><strong>实参</strong>：调用函数时实际传递的值<br>语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript">定义函数参数的语法格式<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span>形参<span class="token number">1</span><span class="token punctuation">,</span>形参<span class="token number">2</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    函数体<span class="token punctuation">}</span>调用函数语法格式<span class="token punctuation">:</span><span class="token function">函数名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span>实参<span class="token number">2</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <font color = red><strong>形参和实参要对应</strong></font></p><h2 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h2><p>在函数中，可以使用return语句为函数返回一个值。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript">retutn 表达式<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="嵌套函数"><a href="#嵌套函数" class="headerlink" title="嵌套函数"></a>嵌套函数</h2><h4 id="函数的嵌套定义"><a href="#函数的嵌套定义" class="headerlink" title="函数的嵌套定义"></a>函数的嵌套定义</h4><p>函数的嵌套定义就是在函数内部再定义其他的函数。 会使程序的可读性降低</p><h4 id="函数的嵌套调用"><a href="#函数的嵌套调用" class="headerlink" title="函数的嵌套调用"></a>函数的嵌套调用</h4><p>允许在一个函数的函数体中对另一个函数进行调 用</p><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><p>所谓递归函数就是函数在自身的函数体内调用自身，<strong>只在特定的情况下使用</strong>。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span>参数<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">函数名</span><span class="token punctuation">(</span>参数<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color = red><strong>注意判断结束条件，否则死循环！！！</strong></font></p><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><table><thead><tr><th>内置函数</th><th></th></tr></thead><tbody><tr><td>parseInt()</td><td>数值处理 <strong>前四个</strong></td></tr><tr><td>parseFloat()</td><td></td></tr><tr><td>isNaN()</td><td></td></tr><tr><td>isFinite()</td><td></td></tr><tr><td>eval()</td><td>字符串处理函数 <strong>后五个</strong></td></tr><tr><td>escape()</td><td></td></tr><tr><td>unescape()</td><td></td></tr><tr><td>encodeURI()</td><td></td></tr><tr><td>decodeURI()</td><td></td></tr></tbody></table><h2 id="数值处理函数"><a href="#数值处理函数" class="headerlink" title="数值处理函数"></a>数值处理函数</h2><h3 id="字符转数字函数-parseInt"><a href="#字符转数字函数-parseInt" class="headerlink" title="字符转数字函数  ( parseInt )"></a>字符转数字函数  ( parseInt )</h3><p><font color =#05ffdc>parseInt </font><strong>将首位为数字的字符串转换成数字</strong>，字符串开头不是数字的字符，则返回<code>NaN</code>，<strong>前提是默认十进制</strong>。语法格式：（默认十进制）</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">parseInt</span><span class="token punctuation">(</span>String<span class="token punctuation">,</span><span class="token punctuation">[</span>进制数<span class="token punctuation">]</span><span class="token punctuation">)</span> 如<span class="token punctuation">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"e2b"</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>结果为<span class="token punctuation">:</span><span class="token number">3627</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="字符转浮点函数-parseFloat"><a href="#字符转浮点函数-parseFloat" class="headerlink" title="字符转浮点函数 (parseFloat)"></a>字符转浮点函数 (parseFloat)</h3><p><font color =#05ffdc>parseFloat</font> <strong>将首位为数字的字符串转化成浮点型数字</strong>，字符串不是以数字开头，则返回NaN。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">parseFloat</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span>如<span class="token punctuation">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">"5.411"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="检验函数-isNaN"><a href="#检验函数-isNaN" class="headerlink" title="检验函数 (isNaN)"></a>检验函数 (isNaN)</h3><p><font color =#05ffdc>isNaN </font> <strong>检验某个值是否为NaN</strong>。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">isNaN</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>返回值：</strong><br>结果为<code>NaN</code> 函数返回值为<code>true</code><br>否则，函数返回值为<code>false</code></p></blockquote><h3 id="检验限度函数-isFinite"><a href="#检验限度函数-isFinite" class="headerlink" title="检验限度函数 (isFinite)"></a>检验限度函数 (isFinite)</h3><p><font color =#05ffdc>isFinite</font> <strong>检验其参数是否有限</strong>。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">isFinite</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>num：需要验证的数字</p><blockquote><p><strong>返回值：</strong><br>有限数字，则返回<code>true</code><br>NaN或无穷大，则返回<code>false</code></p></blockquote><p><strong>代码示范：</strong></p><pre class="line-numbers language-css"><code class="language-css">&lt;!DOCTYPE html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>     &lt;title>Title&lt;/title>&lt;/head>&lt;body>    &lt;script type=<span class="token string">"text/javascript"</span>>        var no<span class="token number">1</span> = <span class="token string">"123abc"</span><span class="token punctuation">;</span>        var no<span class="token number">2</span> = <span class="token string">"abc123"</span><span class="token punctuation">;</span>        var no<span class="token number">3</span> = <span class="token string">"e2b"</span><span class="token punctuation">;</span>        var no<span class="token number">4</span> = <span class="token string">"3434.43"</span><span class="token punctuation">;</span>        var no<span class="token number">5</span> = <span class="token string">"abb434.43"</span><span class="token punctuation">;</span>        var no<span class="token number">6</span> = <span class="token string">"12322"</span><span class="token punctuation">;</span>        var no<span class="token number">7</span> = <span class="token string">"1232a2"</span><span class="token punctuation">;</span>        var no<span class="token number">8</span> = <span class="token string">"123"</span><span class="token punctuation">;</span>        var no<span class="token number">9</span> = <span class="token string">"123abc"</span><span class="token punctuation">;</span>        var no<span class="token number">10</span> = <span class="token string">"1/0"</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"parseInt:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"123abc = "</span>+<span class="token function">parseInt</span><span class="token punctuation">(</span>no<span class="token number">1</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"abc123 = "</span>+<span class="token function">parseInt</span><span class="token punctuation">(</span>no<span class="token number">2</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"e2b = "</span>+<span class="token function">parseInt</span><span class="token punctuation">(</span>no<span class="token number">3</span>,<span class="token number">16</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"parseFloat:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"3434.43 = "</span>+<span class="token function">parseFloat</span><span class="token punctuation">(</span>no<span class="token number">4</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"abb434.43 = "</span>+<span class="token function">parseFloat</span><span class="token punctuation">(</span>no<span class="token number">5</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"isNaN:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"12322 = "</span>+<span class="token function">isNaN</span><span class="token punctuation">(</span>no<span class="token number">6</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"1232a2 = "</span>+<span class="token function">isNaN</span><span class="token punctuation">(</span>no<span class="token number">7</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"isFinite:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"123 = "</span>+<span class="token function">isFinite</span><span class="token punctuation">(</span>no<span class="token number">8</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"123abc = "</span>+<span class="token function">isFinite</span><span class="token punctuation">(</span>no<span class="token number">9</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"1/0 = "</span>+<span class="token function">isFinite</span><span class="token punctuation">(</span>no<span class="token number">10</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    &lt;/script>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/js2.png" alt=""></p><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><h3 id="字符表达式值函数-eval"><a href="#字符表达式值函数-eval" class="headerlink" title="字符表达式值函数 (eval)"></a>字符表达式值函数 (eval)</h3><p><font color =#05ffdc>eval</font> <strong>计算字符串表达式的值</strong>并执行。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">eval</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如: eval("5 * 4")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="字符串编码函数-escape"><a href="#字符串编码函数-escape" class="headerlink" title="字符串编码函数 (escape)"></a>字符串编码函数 (escape)</h3><p><font color =#05ffdc>escape</font> <strong>将一些特殊字符</strong>(不包括字母和数字字符以及<em>、@、一、_、+、.和/)*</em>进行编码<strong>，它可以将这些特殊字符转换为“</strong>%XX**” 格式的数字。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">escape</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如: escape("You &amp; Me") →You%20%26%20Me</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="字符串解码函数-unescape"><a href="#字符串解码函数-unescape" class="headerlink" title="字符串解码函数 (unescape)"></a>字符串解码函数 (unescape)</h3><p><font color =#05ffdc>unescape</font> <strong>对应用escape()函数编码后的字符串进行解码</strong>。它可以将字符串中“<strong>%XX</strong>”格式的数字转换为字符。语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">unescape</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如: unescape("You%20%26%20Me") →You &amp; Me</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="URL编码函数-encodeURI"><a href="#URL编码函数-encodeURI" class="headerlink" title="URL编码函数 (encodeURI )"></a>URL编码函数 (encodeURI )</h3><p><font color =#05ffdc>encodeURI </font> <strong>将URI字符串进行编码</strong>，语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">encodeURI</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如:encodeURI("https://www.baidu.com/?name=测试");</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="URL解码函数-decodeURI"><a href="#URL解码函数-decodeURI" class="headerlink" title="URL解码函数 (decodeURI)"></a>URL解码函数 (decodeURI)</h3><p><font color =#05ffdc>decodeURI</font> <strong>对已编码URI字符串进行解码，</strong>语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">decodeURI</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如:decodeURI("https://www.baidu.com/?name=%E6%B5%8B%E8%AF%95")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>代码示范：</p><pre class="line-numbers language-css"><code class="language-css">&lt;!DOCTYPE html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;title>Title&lt;/title>&lt;/head>&lt;body>    &lt;script type=<span class="token string">"text/javascript"</span>>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"eval:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"3+5 ="</span>+<span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"3+5"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"3*4/2+1 = "</span>+<span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"3*4/2+1"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"x = 5 ; y = 6 ; document.write(x * y)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>&lt;br/>"</span>+<span class="token string">"escape:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"I%20love%20JS%20%21%21%21 ="</span>+<span class="token function">escape</span><span class="token punctuation">(</span><span class="token string">"I love JS !!!"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"unescape:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"I love JS !!! = "</span>+<span class="token function">unescape</span><span class="token punctuation">(</span><span class="token string">"I%20love%20JS%20%21%21%21"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"encodeURI:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/?name=%E6%B5%8B%E8%AF%95 = "</span>+<span class="token function">encodeURI</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/?name=测试"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br/>"</span>+<span class="token string">"decodeURI:"</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token number">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/?name=测试 = "</span>+<span class="token function">decodeURI</span><span class="token punctuation">(</span><span class="token string">"decodeURI(\"https://www.baidu.com/?name=%E6%B5%8B%E8%AF%95\")"</span><span class="token punctuation">)</span>+<span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    &lt;/script>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/js3.png" style="zoom: 67%;" /><h2 id="定义函数的其他方法"><a href="#定义函数的其他方法" class="headerlink" title="定义函数的其他方法"></a>定义函数的其他方法</h2><h3 id="定义匿名函数"><a href="#定义匿名函数" class="headerlink" title="定义匿名函数"></a>定义匿名函数</h3><p>语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> 变量名 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>参数<span class="token number">1</span>，参数<span class="token number">2</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    函数体<span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Function-构造函数"><a href="#Function-构造函数" class="headerlink" title="Function() 构造函数"></a>Function() 构造函数</h3><p>语法格式：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> 变量名 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">"参数1"</span><span class="token punctuation">,</span><span class="token string">"参数2"</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token string">"函数体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color = red><strong>Function()构造函数中的所有参数和函数体都必须是字符串类型，因此一定要用双引号或单引号引起来。</strong></font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript初识&quot;&gt;&lt;a href=&quot;#JavaScript初识&quot; class=&quot;headerlink&quot; title=&quot;JavaScript初识&quot;&gt;&lt;/a&gt;JavaScript初识&lt;/h1&gt;&lt;p&gt;JavaScript是Web页面中的一种脚本编程语言，也是一
      
    
    </summary>
    
    
      <category term="脚本语言" scheme="https://Sanscan12.github.io/categories/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://Sanscan12.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>群辉DSM端口</title>
    <link href="https://sanscan12.github.io/posts/96bc.html"/>
    <id>https://sanscan12.github.io/posts/96bc.html</id>
    <published>2020-04-20T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="群晖DSM使用端口大全（转载）"><a href="#群晖DSM使用端口大全（转载）" class="headerlink" title="群晖DSM使用端口大全（转载）"></a>群晖DSM使用端口大全（转载）</h1><table><thead><tr><th>设置工具</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>Synology Assistant</td><td>9999、9998、9997</td><td>UDP</td></tr></tbody></table><table><thead><tr><th>备份</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>Data Replicator、Data Replicator II、Data Replicator III</td><td>9999、9998、9997、137、138、139、445</td><td>TCP</td></tr><tr><td>网络备份</td><td>873（数据）、3260（iSCSI LUN）</td><td>TCP</td></tr><tr><td>加密的网络备份（远程 Time Backup）</td><td>22</td><td>TCP</td></tr></tbody></table><table><thead><tr><th>下载</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>eMule</td><td>4662（TCP）、4672（UDP）</td><td>TCP/UDP</td></tr><tr><td>BT</td><td>6890 ~ 6999（用于 DSM 版本早于 v2.0.1-3.0401 的机型）；  16881（用于 DSM 版本 v2.0.1 以上的机型）</td><td>TCP/UDP</td></tr></tbody></table><table><thead><tr><th>网页应用程序</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>DSM</td><td>5000（HTTP）、5001（HTTPS）</td><td>TCP</td></tr><tr><td>Download Station</td><td>5000</td><td>TCP</td></tr><tr><td>Photo Station、Web Station</td><td>80（可添加另外的端口）、443（HTTPS）</td><td>TCP</td></tr><tr><td>Mail Station</td><td>80（HTTP）、443（HTTPS）</td><td>TCP</td></tr><tr><td>Audio Station</td><td>5000（HTTP，可添加另外的端口）、5001（HTTPS，可添加另外的端口）、5353（Bonjour 服务）、6001-6010（AirPlay 控制/定时）</td><td>TCP/UDP</td></tr><tr><td>File Station</td><td>5000（HTTP，可添加另外的端口）、5001（HTTPS，可添加另外的端口）</td><td>TCP</td></tr><tr><td>Surveillance Station</td><td>9900（HTTP）、9901（HTTPS）</td><td>TCP</td></tr><tr><td>媒体服务器</td><td>1900（UPnP）、50001（内容浏览）、50002（内容串流）</td><td>TCP/UDP</td></tr></tbody></table><table><thead><tr><th>邮件服务器</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>SMTP</td><td>25</td><td>TCP</td></tr><tr><td>POP3</td><td>110</td><td>TCP</td></tr><tr><td>IMAP</td><td>143</td><td>TCP</td></tr><tr><td>IMAP 含 SSL/TLS</td><td>993</td><td>TCP</td></tr><tr><td>POP3 含 SSL/TLS</td><td>995</td><td>TCP</td></tr></tbody></table><table><thead><tr><th>文件传输</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>FTP、FTP 含 SSL、FTP 含 TLS</td><td>21（命令）、20（主动模式的数据连接）、55536-55663（被动模式的数据连接）</td><td>TCP</td></tr><tr><td>AFP</td><td>548</td><td>TCP</td></tr><tr><td>CIFS</td><td>smbd：139（netbios-ssn）、445（microsoft-ds）</td><td>TCP/UDP</td></tr><tr><td>Nmbd：137、138</td><td>UDP</td><td></td></tr><tr><td>NFS</td><td>111、892、2049</td><td>TCP/UDP</td></tr><tr><td>WebDAV、CalDAV</td><td>5005、5006（HTTPS）</td><td>TCP</td></tr><tr><td>iSCSI</td><td>3260</td><td>TCP</td></tr><tr><td>TFTP</td><td>69</td><td>UDP</td></tr></tbody></table><table><thead><tr><th>套件</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>Cloud Station</td><td>6690</td><td>TCP</td></tr><tr><td>VPN Server（OpenVPN）</td><td>1194</td><td>UDP</td></tr><tr><td>VPN Server（PPTP）</td><td>1723</td><td>TCP</td></tr><tr><td>Syslog Server</td><td>514（可添加另外的端口）</td><td>TCP/UDP</td></tr><tr><td>iTunes Server</td><td>3689</td><td>TCP</td></tr><tr><td>Directory Server</td><td>389（LDAP）、636（LDAP 含 SSL）</td><td>TCP</td></tr><tr><td>DHCP Server</td><td>67、68</td><td>UDP</td></tr></tbody></table><table><thead><tr><th>行动应用程序</th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>DS photo+</td><td>80、443（HTTPS）</td><td>TCP</td></tr><tr><td>DS audio</td><td>5000、5001（HTTPS）</td><td>TCP</td></tr><tr><td>DS cam</td><td>5000</td><td>TCP</td></tr><tr><td>DS file</td><td>Android/iOS 设备：5005、5006（HTTPS） Windows Phone：5000</td><td>TCP</td></tr><tr><td>DS finder</td><td>5000（HTTP）、5001（HTTPS）</td><td>TCP</td></tr><tr><td>DS video</td><td>5000（HTTP）、5001（HTTPS）</td><td>TCP</td></tr><tr><td>DS download</td><td>5000（HTTP）、5001（HTTPS）</td><td>TCP</td></tr><tr><td>DS cloud</td><td>6690</td><td>TCP</td></tr></tbody></table><table><thead><tr><th><strong>打印机、UPS 和外围设备</strong></th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>LPR</td><td>515</td><td>UDP</td></tr><tr><td>网络打印机（IPP）/CUPS</td><td>631</td><td>TCP</td></tr><tr><td>Bonjour</td><td>5353</td><td>UDP</td></tr><tr><td>网络 MFP</td><td>3240-3259</td><td>TCP</td></tr><tr><td>UPS</td><td>3493</td><td>TCP</td></tr></tbody></table><table><thead><tr><th><strong>系统</strong></th><th></th><th></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td><strong>端口号码</strong></td><td><strong>协议</strong></td></tr><tr><td>SSH/SFTP</td><td>22</td><td>TCP</td></tr><tr><td>Telnet</td><td>23</td><td>TCP</td></tr><tr><td>资源监视器/SNMP</td><td>161</td><td>TCP/UDP</td></tr><tr><td>MySQL</td><td>3306</td><td>TCP</td></tr><tr><td>LDAP</td><td>389、636（SLAPD）</td><td>TCP</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;群晖DSM使用端口大全（转载）&quot;&gt;&lt;a href=&quot;#群晖DSM使用端口大全（转载）&quot; class=&quot;headerlink&quot; title=&quot;群晖DSM使用端口大全（转载）&quot;&gt;&lt;/a&gt;群晖DSM使用端口大全（转载）&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;

      
    
    </summary>
    
    
      <category term="配置" scheme="https://Sanscan12.github.io/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="血的教训" scheme="https://Sanscan12.github.io/tags/%E8%A1%80%E7%9A%84%E6%95%99%E8%AE%AD/"/>
    
      <category term="群辉" scheme="https://Sanscan12.github.io/tags/%E7%BE%A4%E8%BE%89/"/>
    
      <category term="端口" scheme="https://Sanscan12.github.io/tags/%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>颜色搭配</title>
    <link href="https://sanscan12.github.io/posts/a920.html"/>
    <id>https://sanscan12.github.io/posts/a920.html</id>
    <published>2020-04-20T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="颜色搭配"><a href="#颜色搭配" class="headerlink" title="颜色搭配"></a><strong>颜色搭配</strong></h1><p>如果有自己喜欢的颜色可以吸一下！！！</p><h2 id="单色系"><a href="#单色系" class="headerlink" title="单色系"></a>单色系</h2><p>由单一的基本的颜色构成，将黑色、白色或灰色添加到色盘上，可以轻松地制作出具有广泛使用的一贯性的配色。</p><p><strong>舒适、雅致、中立</strong></p><p><strong><font color = #E1DCD9>#E1DCD9</font></strong><br><strong><font color = #8F8681>#8F8681</font></strong><br><strong><font color = #A67F78>#A67F78</font></strong><br><strong><font color = #32435F>#32435F</font></strong></p><p><strong>沙漠、玛瑙、暖色</strong></p><p><strong><font color = #FFD954>#FFD954 </font></strong><br><strong><font color = #E4B660>#E4B660</font></strong><br><strong><font color = #F2AB39>#F2AB39</font></strong><br><strong><font color = #69491A>#69491A</font></strong></p><p><strong>绿色、自然、翡翠</strong></p><p><strong><font color = #D1EDE1>#D1EDE1</font></strong><br><strong><font color =#7BC5AE >#7BC5AE</font></strong><br><strong><font color = #028C6A> #028C6A</font></strong><br><strong><font color = #003E19>#003E19E</font></strong></p><p><strong>柔和、多肉植物</strong></p><p><strong><font color = #D1DDDB>#D1DDDB</font></strong><br><strong><font color = #85B8CB>#85B8CB</font></strong><br><strong><font color = #1D6A96 >#1D6A96</font></strong><br><strong><font color = #283B42>#283B42</font></strong></p><p><strong>西部、优雅、低调</strong></p><p><strong><font color = #D5D2C1>#D5D2C1</font></strong><br><strong><font color = #BD8E62>#BD8E62</font></strong><br><strong><font color = #A46843>#A46843</font></strong><br><strong><font color = #370D00>#370D00</font></strong></p><p><strong>绿色，翡翠，清新</strong></p><p><strong><font color = #9BCFB8>#9BCFB8</font></strong><br><strong><font color = #7FB174>#7FB174</font></strong><br><strong><font color = #689C97>#689C97</font></strong><br><strong><font color = #072A24>#072A24</font></strong></p><p><strong>玫瑰，浪漫，花朵</strong></p><p><strong><font color = #FFC2C3>#FFC2C3</font></strong><br><strong><font color = #FE7773>#FE7 773</font></strong><br><strong><font color = #E81E25>#E81E25</font></strong><br><strong><font color = #0E0301>#0E030 1</font></strong></p><p><strong>少女、粉色，彩妆</strong></p><p><strong><font color = #ECE4E2 >#ECE4E2 </font></strong><br><strong><font color = #FCD3D1>#FCD3D1</font></strong><br><strong><font color = #FCDFF3>#FCDFF3</font></strong><br><strong><font color = #FE929F>#FE929F</font></strong></p><p><strong>紫色，时尚，神秘</strong></p><p><strong><font color = #D3B7D8>#D3B7D8</font></strong><br><strong><font color =#A13E97 >#A13E97</font></strong><br><strong><font color = #632A7E>#632A7E</font></strong><br><strong><font color = #280E3B >#280E3B </font></strong></p><h2 id="冷色系"><a href="#冷色系" class="headerlink" title="冷色系"></a>冷色系</h2><p>在设计上使用这些颜色的配色，可以表现出信赖和平静，营造安静、平静的气氛。<br>这些配色可以有效地表现对比度，与温暖的颜色搭配得很好。</p><p><strong>迷幻，彩色，旋风</strong></p><p><strong><font color = #E3A6A1>#E3A6A1</font></strong><br><strong><font color = #BC5F6A>#BC5F6A</font></strong><br><strong><font color = #19B3B1>#19B3B1</font></strong><br><strong><font color = #034B61>#034B61</font></strong></p><p><strong>星空，极光，天体绿</strong></p><p><strong><font color = #B2A59F>#B2A59F</font></strong><br><strong><font color = #023459>#023459</font></strong><br><strong><font color =#1E646E >#1E646E</font></strong><br><strong><font color = #002C2F>#002C2F</font></strong></p><p><strong>垃圾涂鸦，抽象</strong></p><p><strong><font color = #BDBDBF>#BDBDBF</font></strong><br><strong><font color = #5580A0>#5580A0</font></strong><br><strong><font color = #CC8A4D>#CC8A4D</font></strong><br><strong><font color = #32435F>#32435F</font></strong></p><p><strong>木制，温暖，红酒</strong></p><p><strong><font color = #B98D72>#B98D72</font></strong><br><strong><font color = #AE4951>#AE495 1</font></strong><br><strong><font color = #57233A>#57233A</font></strong><br><strong><font color = #161B1F>#161B1F</font></strong></p><p><strong>蛇鳞，神秘</strong></p><p><strong><font color = #EAD6BD>#EAD6BD</font></strong><br><strong><font color = #A88661>#A8866 1</font></strong><br><strong><font color = #504E63>#504E63</font></strong><br><strong><font color = #00142F>#00142F</font></strong></p><p><strong>冬日，桃花，盛开</strong></p><p><strong><font color = #CCD3D9>#CCD3D9</font></strong><br><strong><font color = #FED5D9>#FED5D9</font></strong><br><strong><font color = #7E212C>#7E212C</font></strong><br><strong><font color = #321E17>#321E17</font></strong></p><p><strong>万花筒，色彩构成</strong></p><p><strong><font color = #E4DACE>#E4DACE</font></strong><br><strong><font color = #E5BB4B>#E5BB4B</font></strong><br><strong><font color = #498EAF>#498EAF</font></strong><br><strong><font color = #631F16>#631F 16</font></strong></p><p><strong>食欲，撞色，刺激</strong></p><p><strong><font color = #F2DD66>#F2DD66</font></strong><br><strong><font color = #9A1B27>#9A1B27</font></strong><br><strong><font color = #747BA9>#747BA9</font></strong><br><strong><font color = #3B3857 >#3B3857 </font></strong></p><p><strong>海滩，度假，惬意</strong></p><p><strong><font color = #0359AE>#0359AE</font></strong><br><strong><font color = #14B09B>#14B09B</font></strong><br><strong><font color = #EBE5D9>#EBE5D9</font></strong><br><strong><font color = #CC8A56>#CC8A56</font></strong></p><p><strong>大理石，自然，纹理</strong></p><p><strong><font color = #A6C2CE>#A6C2CE</font></strong><br><strong><font color = #9C8F96>#9C8F96</font></strong><br><strong><font color = #EBC57C>#EBC57C</font></strong><br><strong><font color = #6B799E>#6B799E</font></strong></p><p><strong>翠绿，生态，环保</strong></p><p><strong><font color = #97BAA4>#97BAA4</font></strong><br><strong><font color = #499360>#499360</font></strong><br><strong><font color = #295651>#295651</font></strong><br><strong><font color = #232941>#23294 1</font></strong></p><p><strong>咖啡，纯音乐，安静</strong></p><p><strong><font color = #DCC1B0>#DCC1B0</font></strong><br><strong><font color = #869DAB>#869DAB</font></strong><br><strong><font color = #847072>#847072</font></strong><br><strong><font color = #3D313d>#3D31 3F</font></strong></p><p><strong>色素，购物，快时尚</strong></p><p><strong><font color = #B2D6CA >#B2D6CA </font></strong><br><strong><font color = #FE5858>#FE5858</font></strong><br><strong><font color = #024B40>#024B40</font></strong><br><strong><font color = #5D353E>#5D353E</font></strong></p><p><strong>水彩，文艺，阳光</strong></p><p><strong><font color = #E5E0F8>#E5E0F8</font></strong><br><strong><font color = #E29E93>#E29E93</font></strong><br><strong><font color = #EDBC7A>#EDBC7A</font></strong><br><strong><font color = #0384BD>#0384BD</font></strong></p><p><strong>极光，梦幻，奥秘</strong></p><p><strong><font color = #91D4C2>#91D4C2</font></strong><br><strong><font color = #45BB89>#45BB89</font></strong><br><strong><font color = #3D82AB>#3D82AB</font></strong><br><strong><font color = #003853>#003853</font></strong></p><p><strong>朦胧，生机，静谧</strong></p><p><strong><font color = #D9CFE7>#D9CFE7</font></strong><br><strong><font color = #A8BCBA>#A8BCBA</font></strong><br><strong><font color = #ACC66D>#ACC66D</font></strong><br><strong><font color = #50697D>#50697D</font></strong></p><p><strong>荷塘，风景，水产</strong></p><p><strong><font color = #8CA6B3>#8CA6B3</font></strong><br><strong><font color = #87C488>#87C488</font></strong><br><strong><font color = #AA641E>#AA641E</font></strong><br><strong><font color = #284651>#284651</font></strong></p><p><strong>星际，火山，科技</strong></p><p><strong><font color = #324856>#324856</font></strong><br><strong><font color = #4A746A>#4A746A</font></strong><br><strong><font color = #D18237>#D18237</font></strong><br><strong><font color = #D66C44>#D66C44</font></strong></p><p><strong>舞台，冷暖，光影</strong></p><p><strong><font color = #FFA289>#FFA289</font></strong><br><strong><font color = #6A92CC>#6A92CC</font></strong><br><strong><font color = #706FAB>#706FAB</font></strong><br><strong><font color = #50293C>#50293C</font></strong></p><p><strong>冬日，旅行，探险</strong></p><p><strong><font color = #DBDBE5>#DBDBE5</font></strong><br><strong><font color = #A5B7C1>#A5B7C1</font></strong><br><strong><font color = #535D55>#535D55</font></strong><br><strong><font color = #514644>#5 14644</font></strong></p><p><strong>碧海蓝天，旅游，度假</strong></p><p><strong><font color = #C2E6FF>#C2E6FF</font></strong><br><strong><font color = #859F3C>#859F3C</font></strong><br><strong><font color = #007F52>#007F52</font></strong><br><strong><font color = #45451F>#45451F</font></strong></p><p><strong>蜡笔，神迹，彩霞</strong></p><p><strong><font color = #EB8F90>#EB8F90</font></strong><br><strong><font color = #FFB471 >#FFB47 1 </font></strong><br><strong><font color = #ADBED2>#ADBED2</font></strong><br><strong><font color = #12406A>#12406A</font></strong></p><p><strong>传统，牛仔，温暖</strong></p><p><strong><font color = #6C838B>#6C838B</font></strong><br><strong><font color = #BB7748>#BB7 748</font></strong><br><strong><font color = #9E6D70>#9E6D70</font></strong><br><strong><font color = #7F726A>#7F7 26A</font></strong></p><p><strong>中国风，江南，烟雨</strong></p><p><strong><font color = #FDDCEF>#FDDCEF</font></strong><br><strong><font color = #D5C5E9>#D5C5E9</font></strong><br><strong><font color = #3A5A69>#3A5A69</font></strong><br><strong><font color = #030923>#030923</font></strong></p><p><strong>欧美，复古，经典</strong></p><p><strong><font color = #82BBB5>#82BBB5</font></strong><br><strong><font color = #CA884B>#CA884B</font></strong><br><strong><font color = #D1825B>#D1825B</font></strong><br><strong><font color = #CCA142>#CCA142</font></strong></p><p><strong>园林，浅秋，晨练</strong></p><p><strong><font color = #AFB3BC>#AFB3BC</font></strong><br><strong><font color = #E5BA22>#E5BA22</font></strong><br><strong><font color = #757430>#757430</font></strong><br><strong><font color = #D0B987>#D0B987</font></strong></p><p><strong>森林，度假，绿洲</strong></p><p><strong><font color = #DODAE4>#DODAE4</font></strong><br><strong><font color = #2A6078>#2A6078</font></strong><br><strong><font color = #B9CD74>#B9CD74</font></strong><br><strong><font color = #085438>#085438</font></strong></p><p><strong>梦幻，金属，未来感</strong></p><p><strong><font color = #A9DFED>#A9DFED</font></strong><br><strong><font color = #EBD6E8>#EBD6E8</font></strong><br><strong><font color = #84C0E9>#84C0E9</font></strong><br><strong><font color = #37419A>#3741 9A</font></strong></p><p><strong>居家，复古，怀旧</strong></p><p><strong><font color = #D7CBBD>#D7CBBD</font></strong><br><strong><font color = #C1893F>#C1893F</font></strong><br><strong><font color = #AF8F90>#AF8F90</font></strong><br><strong><font color = #69454F>#69454F</font></strong></p><p><strong>幻彩，岩洞，仙气</strong></p><p><strong><font color = #EFC638>#EFC638</font></strong><br><strong><font color = #416EB6>#416EB6</font></strong><br><strong><font color = #715CA8>#715CA8</font></strong><br><strong><font color = #2B103B >#2B103B </font></strong></p><p><strong>花卉、对比，设计</strong></p><p><strong><font color = #DB5A9A>#DB5A9A</font></strong><br><strong><font color = #E5A46E>#E5A46E</font></strong><br><strong><font color = #125669>#125669</font></strong><br><strong><font color = #0A5B54>#0A5B54</font></strong></p><p><strong>俄罗斯，白桦树，郊外</strong></p><p><strong><font color = #F2F4EF>#F2F4EF</font></strong><br><strong><font color = #C2E3F4>#C2E3F4</font></strong><br><strong><font color = #EFB730>#EFB730</font></strong><br><strong><font color = #030305>#030305</font></strong></p><p><strong>度假，澳洲，型男</strong></p><p><strong><font color = #7F9871>#7F987 1</font></strong><br><strong><font color = #9795A3>#9795A 3</font></strong><br><strong><font color = #C94F44>#C94F44</font></strong><br><strong><font color = #261326>#261326</font></strong></p><p><strong>壁纸，童年，儿童房</strong></p><p><strong><font color = #EDA2B6>#EDA2B6</font></strong><br><strong><font color = #ABBF4E>#ABBF4E</font></strong><br><strong><font color = #7A96A2>#7A96A2</font></strong><br><strong><font color = #252621>#25262 1</font></strong></p><p><strong>霓虹灯，深夜，街头</strong></p><p><strong><font color = #C7C5B8>#C7C5B8</font></strong><br><strong><font color = #38618F>#38618F</font></strong><br><strong><font color = #FD9735>#FD9735</font></strong><br><strong><font color = #FF6745>#FF6745</font></strong></p><h2 id="明亮色系"><a href="#明亮色系" class="headerlink" title="明亮色系"></a><strong>明亮色系</strong></h2><p><strong>&lt;font color = &gt;</font></strong><br><strong>&lt;font color = &gt;</font></strong><br><strong>&lt;font color = &gt;</font></strong><br><strong>&lt;font color = &gt;</font></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;颜色搭配&quot;&gt;&lt;a href=&quot;#颜色搭配&quot; class=&quot;headerlink&quot; title=&quot;颜色搭配&quot;&gt;&lt;/a&gt;&lt;strong&gt;颜色搭配&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;如果有自己喜欢的颜色可以吸一下！！！&lt;/p&gt;
&lt;h2 id=&quot;单色系&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="其他" scheme="https://Sanscan12.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="分享" scheme="https://Sanscan12.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="搭色" scheme="https://Sanscan12.github.io/tags/%E6%90%AD%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>CSS 问题</title>
    <link href="https://sanscan12.github.io/posts/3194.html"/>
    <id>https://sanscan12.github.io/posts/3194.html</id>
    <published>2020-04-19T16:00:00.000Z</published>
    <updated>2020-05-04T15:39:13.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相邻块元素外边距合并"><a href="#相邻块元素外边距合并" class="headerlink" title="相邻块元素外边距合并"></a>相邻块元素外边距合并</h2><p>当上下两个有上下外边距的元素相邻时，则被外边距较大者覆盖。也可称<strong>外边距塌陷</strong>。*<font color=red><strong>*遇见该问题经量避免</strong></font></p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/wbj.png" alt=""></p><p>代码例子</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">div </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*上盒子*/</span><span class="token selector"><span class="token class">.no1</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#b3d4fc</span><span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*下盒子*/</span><span class="token selector"><span class="token class">.no2</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> hotpink<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*结果他们之间的距离为30px*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="嵌套块元素外边距合并"><a href="#嵌套块元素外边距合并" class="headerlink" title="嵌套块元素外边距合并"></a>嵌套块元素外边距合并</h2><p>两个元素父子关系的块元素，父没有<strong>内边距、外边框</strong>的前提，父子的垂直外边距会被较大者覆盖，即使父元素的上外边距为0，也会发生合并。</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/Blogdecoration/qt.png" alt=""></p><p>代码例子</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">* </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*父盒子*/</span><span class="token selector"><span class="token class">.no1</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#b3d4fc</span><span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*子盒子*/</span><span class="token selector"><span class="token class">.no2</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*非子块级元素*/</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*子块级元素的外边距控制父块级元素的外边距，子父外边距合并。*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>解决方案：</p><ol><li>为父元素定义 1px 上边框或上内边距</li><li>为父元素添加 overflow: hidden ;(清除浮动)</li></ol></blockquote><hr><h2 id="盒子宽度和高度"><a href="#盒子宽度和高度" class="headerlink" title="盒子宽度和高度"></a>盒子宽度和高度</h2><p>盒子的大小进行控制。盒子模型的总宽度和总高度的计算原则是：</p><pre class="line-numbers language-css"><code class="language-css">  <span class="token comment" spellcheck="true">/*外盒尺寸计算（元素空间尺寸）*/</span>  Element Height = content height + padding + border + margin  Element Width = content width + padding + border + margin  <span class="token comment" spellcheck="true">/*内盒尺寸计算（元素实际大小）*/</span>  Element Height = height + padding + border  Element Width = width + padding + border<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>width 和 height 仅适用于块级元素，对行内元素无效(img标签和input除外)</li><li>计算盒子模型的总高度时，还应考虑上下两个盒子垂直外边距合并</li><li><strong>如果一个盒子没有给定宽高，则会和父盒子一样；</strong></li><li><strong>如果此盒子没有给定宽度则padding不会影响本盒子大小</strong></li></ol><hr><h2 id="盒子模型布局"><a href="#盒子模型布局" class="headerlink" title="盒子模型布局"></a>盒子模型布局</h2><p>按照优先使用  <strong>宽度</strong> (width) 其次使用<strong>内边距 **(padding) 再次</strong>外边距 **(margin)<br>$$<br>width &gt;  padding  &gt;   margin<br>$$</p><blockquote><p>原因：</p><ol><li>margin会有外边距合并还有下面margin加倍的bug所以最后使用</li><li>padding 会影响盒子大小，需要进行加减计算</li><li>width没有问题，经常使用宽度剩余法 高度剩余法来做</li></ol></blockquote><hr><h2 id="绝对定位盒子居中"><a href="#绝对定位盒子居中" class="headerlink" title="绝对定位盒子居中"></a>绝对定位盒子居中</h2><p>实现 绝对定位盒子 的居中问题！！</p><p>定位的盒子也可以<code>水平</code>或<code>垂直</code>居中，的算法</p><blockquote><ol><li>首先left: 50%   父盒子的一半大小</li><li>然后减去自身的一半宽 margin-left。</li></ol></blockquote><p>代码示范：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*水平居中*/</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*垂直居中*/</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">100</span>px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="插入图片和背景的区别"><a href="#插入图片和背景的区别" class="headerlink" title="插入图片和背景的区别"></a>插入图片和背景的区别</h2><ul><li><strong>插入图片</strong>我们用的最多 ，比如产品展示类</li><li><strong>背景图片</strong>一般用于小图标<strong>背景</strong>或者<strong>超大背景图片</strong></li></ul><hr><h2 id="相邻块元素边框线叠加"><a href="#相邻块元素边框线叠加" class="headerlink" title="相邻块元素边框线叠加"></a>相邻块元素边框线叠加</h2><p>以下是浮动<code>div</code>的盒子边框线5px</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/article/dj.png" alt=""></p><p>代码例子</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">* </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">li </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*无装饰*/</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">5</span>px solid <span class="token hexcode">#666666</span><span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">li<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">5</span>px solid red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.no2</span> li </span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">5</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="伪类高亮遮挡"><a href="#伪类高亮遮挡" class="headerlink" title="伪类高亮遮挡"></a>伪类高亮遮挡</h2><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/article/dj3.png" alt=""></p><blockquote><p>解决方案：</p><ul><li>每个块元素添加外边距减回去 <code>margin-left: -5px</code>，-5是有由边框线的像素决定的</li><li>每个块元素添加相对定位 <code>position: relative;</code>， 防止伪类高亮遮挡</li></ul></blockquote><hr><h2 id="基线对齐底线溢出"><a href="#基线对齐底线溢出" class="headerlink" title="基线对齐底线溢出"></a>基线对齐底线溢出</h2><p>先说明字体线段基准！！！<br><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/jx.png" alt=""></p><p>在图片/表格与内容同行时底线会溢出，由于对齐时默认是基线对齐</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/yc.png" alt=""></p><p>更改后</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/yc2.png" alt=""></p><blockquote><p>解决方案：</p><ol><li>图片img设置： <code>vertical-align: bottom;</code> </li><li>内容设置： <code>border: 0;</code></li></ol></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;相邻块元素外边距合并&quot;&gt;&lt;a href=&quot;#相邻块元素外边距合并&quot; class=&quot;headerlink&quot; title=&quot;相邻块元素外边距合并&quot;&gt;&lt;/a&gt;相邻块元素外边距合并&lt;/h2&gt;&lt;p&gt;当上下两个有上下外边距的元素相邻时，则被外边距较大者覆盖。也可称&lt;stron
      
    
    </summary>
    
    
      <category term="前端" scheme="https://Sanscan12.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://Sanscan12.github.io/tags/css/"/>
    
      <category term="血的教训" scheme="https://Sanscan12.github.io/tags/%E8%A1%80%E7%9A%84%E6%95%99%E8%AE%AD/"/>
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>博客操作</title>
    <link href="https://sanscan12.github.io/posts/124c.html"/>
    <id>https://sanscan12.github.io/posts/124c.html</id>
    <published>2020-04-17T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>命令要在根路经下运行！</p><ul><li><p><code>hexo server</code>  等价于 <code>hexo s</code><br>#启动本地服务器，用于预览主题。Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p></li><li><p><code>hexo server -s</code><br>#以静态模式启动</p></li><li><p><code>hexo server -p 5000</code><br>#更改访问端口 (默认端口为4000)</p></li><li><p><code>hexo server -i IP地址</code><br>#自定义 IP</p></li><li><p><code>hexo clean</code><br>#清除缓存。会删掉站点根目录下的public文件夹</p></li><li><p><code>hexo generate</code> 相当于<code>hexo g</code><br>#生成静态网页 (根目录下生成public文件夹, 会将” source / _posts / “ 下面的.md文件编译为.html后缀的文件,存放在”public/ “ 路径下)</p></li><li><p><code>hexo d</code><br>#自动生成网站静态文件，将本地数据部署到设定的仓库</p></li><li><p><code>hexo init</code> 文件夹名称<br>#初始化XX文件夹名称</p></li><li><p><code>npm update hexo -g</code></p><p>#升级</p></li><li><p><code>npm install hexo -g</code><br>#安装</p></li><li><p><code>node-v</code><br>#查看 node.js 版本号</p></li><li><p><code>npm -v</code><br>#查看npm版本号</p></li><li><p><code>git --version</code><br> #查看git版本号</p></li><li><p><code>hexo -v</code><br>#查看hexo版本号</p></li></ul><h2 id="文章开头布局"><a href="#文章开头布局" class="headerlink" title="文章开头布局"></a>文章开头布局</h2><p><code>author</code>：作者</p><p><code>categories</code>: 字符串<br>//文章分类，尽量一个</p><p><code>cover</code>：布尔值<br>// 需要加入到首页轮播封面中</p><p><code>coverImg</code>：url<br>//文章在首页轮播封面显示的图片路径</p><p><code>date</code>：0000-00-00 00:00:00</p><p><code>img</code>：url<br>//文章图片路径</p><p><code>keywords</code>：文章标题<br>//文章关键字</p><p><code>mathjax</code>: 布尔值<br>//是否开启数学公式支持</p><p><code>password</code>：字符串<br>//文章阅读密码</p><p><code>reprintPolicy</code>：<br>//文章转载规则</p><p><code>summary</code>: 字符串<br>//文章摘要</p><p><code>top</code>：布尔值<br>// 推荐文章（文章是否置顶）</p><p><code>title</code>： 标题</p><p><code>toc</code>: 布尔值<br>// TOC 的功能</p><p><code>tags</code>:    //文章标签,可以多个</p><pre><code>- 标签名1</code></pre><ul><li>标签名2<br>···</li></ul><h3 id="开头样板"><a href="#开头样板" class="headerlink" title="开头样板"></a>开头样板</h3><pre><code>---title: 标题date: 2000-04-16 00:00:00author: 柏竹mathjax: truetoc: truecoverImg：urlsummary: 文章摘要categories: 分类tags:  - 标签1  - 标签2---</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo常用命令&quot;&gt;&lt;a href=&quot;#hexo常用命令&quot; class=&quot;headerlink&quot; title=&quot;hexo常用命令&quot;&gt;&lt;/a&gt;hexo常用命令&lt;/h2&gt;&lt;p&gt;命令要在根路经下运行！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;hexo server&lt;
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://Sanscan12.github.io/categories/hexo/"/>
    
    
      <category term="血的教训" scheme="https://Sanscan12.github.io/tags/%E8%A1%80%E7%9A%84%E6%95%99%E8%AE%AD/"/>
    
      <category term="hexo指令" scheme="https://Sanscan12.github.io/tags/hexo%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL API笔记</title>
    <link href="https://sanscan12.github.io/posts/53d1.html"/>
    <id>https://sanscan12.github.io/posts/53d1.html</id>
    <published>2020-04-15T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.989Z</updated>
    
    <content type="html"><![CDATA[<hr><p>便捷查找方式：按<code>Ctrl+F</code>可查找<br>搜索方法查找方法：数据名+操作方式</p><blockquote><p>例子： 字段删除</p></blockquote><hr><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><h2 id="数据库创建"><a href="#数据库创建" class="headerlink" title="数据库创建"></a>数据库创建</h2><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE DATABASE [IF NOT EXISTS] 数据库名 [编码集设置];编码集设置:CHARACTER SET 字符集名 [校对规则]校对规则:COLLATE 校对名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>IF NOT EXISTS：检查是否已存在的状态<br>CHARACTER SET：编码集设置<br>COLLATE：校对规则 <em>（在字符集内用于比较字符的一套规则）</em></p><h2 id="数据库查看"><a href="#数据库查看" class="headerlink" title="数据库查看"></a>数据库查看</h2><pre class="line-numbers language-mysql"><code class="language-mysql">显示数据库:SHOW DATABASES;显示数据库创建语句:SHOW CREATE DATABASE 数据库名;查看当前所选的数据库：SELECT DATABASE();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库修改"><a href="#数据库修改" class="headerlink" title="数据库修改"></a>数据库修改</h2><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER DATABASE [IF NOT EXISTS] 数据库名 [编码集设置];编码集设置:CHARACTER SET 字符集名 [校对规则]校对规则:COLLATE 校对名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库删除"><a href="#数据库删除" class="headerlink" title="数据库删除"></a>数据库删除</h2><pre class="line-numbers language-MYSQL"><code class="language-MYSQL">DROP DATABASE [IF EXISTS]  数据库名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="数据库选择"><a href="#数据库选择" class="headerlink" title="数据库选择"></a>数据库选择</h2><pre class="line-numbers language-MYSQL"><code class="language-MYSQL">USE 数据库名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型数据"><a href="#整型数据" class="headerlink" title="整型数据"></a>整型数据</h2><table><thead><tr><th>整型数据</th><th>字节数</th><th>无符号的取值范围</th><th>有符号的取值范围</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>0~225</td><td>-125~127</td></tr><tr><td>SMALLINT</td><td>2</td><td>0-65535</td><td>-32768~32768</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>0~16777215</td><td>···</td></tr><tr><td>INT</td><td>4</td><td>0-4294967295</td><td>···</td></tr><tr><td>BIGINT</td><td>8</td><td>0~18446744073709551615</td><td></td></tr></tbody></table><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><table><thead><tr><th>浮点型数据</th><th>字节数</th></tr></thead><tbody><tr><td>FLOAT</td><td>4</td></tr><tr><td>DOUBLE</td><td>8</td></tr><tr><td><strong>定点数型数据</strong></td><td></td></tr><tr><td>DECIMAL(（）M , 2)</td><td>M+2</td></tr></tbody></table><h2 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h2><table><thead><tr><th>数据类型</th><th>字节数</th><th>取值范围</th><th>日期格式</th><th>零值</th></tr></thead><tbody><tr><td>YEAR</td><td>1</td><td>1901~2155</td><td>YYYY</td><td>0000</td></tr><tr><td>DATE</td><td>4</td><td>1000-01-01-9999-12-3</td><td>YYYY-MM-DD</td><td>0000-00-00</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59-838:59:59</td><td>HH:MM:SS</td><td>00:00:00</td></tr><tr><td>DATETIME</td><td>8</td><td>11</td><td>YYYY-MM-DD、HH:MM:SS</td><td>0000-00-00 00:00:00</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01~2038-01-19 03:14:07</td><td>YYYY-MM-DD、HH:MM:SS</td><td>0000-00-00 00:00:00</td></tr></tbody></table><h2 id="字符串型"><a href="#字符串型" class="headerlink" title="字符串型"></a>字符串型</h2><table><thead><tr><th>字符串类型(单位：字节)</th><th>字节状态</th><th>优点</th></tr></thead><tbody><tr><td>CHAR((int)Max)</td><td>固定</td><td>查询快</td></tr><tr><td>VARCHAR((int)Max)</td><td>动态</td><td>省空间</td></tr></tbody></table><h2 id="二进制数据类型"><a href="#二进制数据类型" class="headerlink" title="二进制数据类型"></a>二进制数据类型</h2><table><thead><tr><th>二进制数据类型(单位：长度)</th><th>长度状态</th></tr></thead><tbody><tr><td>BINARY((int)Max)</td><td>固定</td></tr><tr><td>VARBINARY((int)Max)</td><td>动态</td></tr></tbody></table><p><em>BINARY类型的长度是固定的，如果长度不足最大长度,后面用“0”对齐，直到指定长度。</em></p><h2 id="大文本数据类型"><a href="#大文本数据类型" class="headerlink" title="大文本数据类型"></a>大文本数据类型</h2><table><thead><tr><th>大文本数据类型</th><th>存储范围（单位：字节）</th></tr></thead><tbody><tr><td>TINYTEXT</td><td>0~255字节</td></tr><tr><td>TEXT</td><td>0~65535字节</td></tr><tr><td>MEDIUMTEXT</td><td>0~16777215字节</td></tr><tr><td>LONGTEXT</td><td>0~4294967295字节</td></tr></tbody></table><h2 id="大数据二进制类型"><a href="#大数据二进制类型" class="headerlink" title="大数据二进制类型"></a>大数据二进制类型</h2><table><thead><tr><th>特殊二进制类型</th><th>存储范围（单位：字节）</th></tr></thead><tbody><tr><td>TINYBLOB</td><td>0~255字节</td></tr><tr><td>BLOB</td><td>0-65535字节</td></tr><tr><td>MEDIUMBLOB</td><td>0~16777215字节</td></tr><tr><td>LONGBLOB</td><td>0-4294967295字节</td></tr></tbody></table><h2 id="枚举型"><a href="#枚举型" class="headerlink" title="枚举型"></a>枚举型</h2><p>ENUM类型数据格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">ENUM('值1','值2'···'值n')<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h1><h2 id="表创建"><a href="#表创建" class="headerlink" title="表创建"></a>表创建</h2><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE TABLE 表名(   字段名1 数据类型 [完整性约束条件],   字段名2 数据类型 [完整性约束条件],   ·······   字段名n 数据类型 [完整性约束条件],   [完整性约束条件](字段1,字段2,·····,字段n))[编码集设置];编码集设置:CHARACTER SET 字符集名 [校对规则]校对规则:COLLATE 校对名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>建议不要在数据库中设置太多字符集名和校对规则</em></p><h2 id="表查看"><a href="#表查看" class="headerlink" title="表查看"></a>表查看</h2><pre class="line-numbers language-mysql"><code class="language-mysql">查看表结构：DESC 表名;查看所有表:SHOW TABLES;查看表的详细结构：SHOW CREATE TABLE 表名;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表修改"><a href="#表修改" class="headerlink" title="表修改"></a>表修改</h2><h3 id="字段增加"><a href="#字段增加" class="headerlink" title="字段增加"></a>字段增加</h3><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD 字段名 数据类型;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="字段-修改-与-顺序"><a href="#字段-修改-与-顺序" class="headerlink" title="字段 修改 与 顺序"></a>字段 修改 与 顺序</h3><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 MODIFY 字段名1 数据类型 [更改字段循序 | 完整性约束条件];更改字段循序:FIRST | (AFTER 字段名2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>FIRST</strong>：将字段1更改为表的第一个字段<br><strong>AFTER</strong>：将字段1插入字段2的后面</p><h3 id="字段名修改"><a href="#字段名修改" class="headerlink" title="字段名修改"></a>字段名修改</h3><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 CHANGE 字段名 新字段名 字段类型;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="表名修改"><a href="#表名修改" class="headerlink" title="表名修改"></a>表名修改</h3><pre class="line-numbers language-mysql"><code class="language-mysql">RENAME TABLE 表名 to 新表名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="表字符集修改"><a href="#表字符集修改" class="headerlink" title="表字符集修改"></a>表字符集修改</h3><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 CHARACTER SET 字符集类型;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="字段删除"><a href="#字段删除" class="headerlink" title="字段删除"></a>字段删除</h3><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 DROP 字段名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="表删除"><a href="#表删除" class="headerlink" title="表删除"></a>表删除</h2><pre class="line-numbers language-mysql"><code class="language-mysql">DROP TABLE 表名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="表约束"><a href="#表约束" class="headerlink" title="表约束"></a>表约束</h2><p>为了防止数据表中插入错误的数据。</p><table><thead><tr><th>约束条件</th><th>说明</th></tr></thead><tbody><tr><td>PRIMARY KEY</td><td>主键约束，用于唯一标识对应的记录</td></tr><tr><td>FOREIGN KEY</td><td>外键约束</td></tr><tr><td>NOT NULL</td><td>非空约束</td></tr><tr><td>UNIQUE</td><td>唯一性约束</td></tr><tr><td>DEFAULT</td><td>默认值约束，用于设置字段的默认值</td></tr><tr><td>CHECK</td><td>约束取值范围</td></tr><tr><td>UNSIGNED</td><td>无符号约束</td></tr></tbody></table><p><strong>无符号约束：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 UNSIGNED<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>约束范围：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 CHECK (字段值>0 and 字段值<=100)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>单字段主键：</strong></p><p>是由一个字段构成的主键，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 PRIMARY KEY<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>多字段主键：</strong><br>是多个字段组合而成的主键，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">PRIMARY KEY {字段名1，字段名2，···字段名n}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>每个数据表中最多只能有一个主键约束，定义为PRIMARY KEY的字段不能有重复值也不能为NULL值。</em><br><strong>非空约束：</strong><br>是字段的值不能为NULL（空），语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 NOT NULL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>唯一约束：</strong><br>用于保证数据表中字段的<strong>唯一性</strong>,使表中字段的值不能重复出现。语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 UNIQUE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> <strong>默认约束：</strong><br>用于给数据表中的字段指定默认值，当在表中插入新记录时，如果字段没有赋值，系统会自动为字段插入默认值。语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 DEFAULT 默认值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="字段自动增加"><a href="#字段自动增加" class="headerlink" title="字段自动增加"></a>字段自动增加</h2><p>在数据表中，若想为表中插入的新记录自动生成<strong>唯一的 ID</strong>,可以使用自增约束来实现。AUTO_ INCREMENT约束的字段可以是任何整数类型。默认情况下，该字段的值是从1开始自增的。使用AUTO_ INCREMENT设置表字段值自动增加的基本语法格式:      <em>该字段是唯一性类型</em></p><pre class="line-numbers language-mysql"><code class="language-mysql">字段名 数据类型 AUTO_INCREMENT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h2 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h2><p>INDEX。可以创建在任何数据类型中，值是否唯一和非空没有固定的要求。</p><pre class="line-numbers language-mysql"><code class="language-mysql">INDEX(字段名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE INDEX 索引名 ON 表名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD INDEX 索引名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h2><p>UNIQUE。该索引所在字段的值必须是唯一的。</p><pre class="line-numbers language-mysql"><code class="language-mysql">UNIQUE INDEX 索引名 (字段名 (ASC | DESC))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE UNIQUE INDEX 索引名 ON 表名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD UNIQUE INDEX 索引名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h2><p>FULLTEXT。它只能创建在CHAR、VARCHAR或TEXT类型的字段上，现在只有<strong>MyISAM存储引擎</strong>支持全文索引。</p><pre class="line-numbers language-mysql"><code class="language-mysql">FULLTEXT INDEX 索引名 (字段名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE FULLTEXT INDEX 索引名 ON 表名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD FULLTEXT INDEX 索引名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>PS:后面需存储引擎(ENGINE =MyISAM)</em></strong></p><h2 id="单列索引"><a href="#单列索引" class="headerlink" title="单列索引"></a>单列索引</h2><p>在表中单个字段上创建索引，它可以是普通索引、唯一索引或者全文素引， 只要保证该索引只对应表中一个字段即可。</p><pre class="line-numbers language-mysql"><code class="language-mysql">INDEX 索引名 (字段名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE INDEX 索引名 ON 表名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD INDEX 索引名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="多列索引"><a href="#多列索引" class="headerlink" title="多列索引"></a>多列索引</h2><p>多列索引指的是在表中多个字段上创建索引，只有在查询条件中使用了这些字段中的第一个字段时,该索引才会被使用。</p><pre class="line-numbers language-mysql"><code class="language-mysql">INDEX 索引名 (字段名1,字段名2,···字段名n)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE INDEX 索引名 ON 表名 (字段名1,字段名2,···字段名n);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD INDEX 索引名  (字段名1,字段名2,···字段名n);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="空间索引"><a href="#空间索引" class="headerlink" title="空间索引"></a>空间索引</h2><p>SPATIAL。它只能创建在空间数据类型的字段上。MySQL中的空间数据类型有4种,分别是<strong>LGEOMETRY、POINT、 LINESTRING和POLYGON</strong>，空间索引只能在存储引擎为<strong>MyISAM</strong>的表中创建。</p><pre class="line-numbers language-mysql"><code class="language-mysql">SPATIAL INDEX 索引名 (字段名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE SPATIAL INDEX 索引名 ON 表名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD SPATIAL INDEX 索引名 (字段名);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>PS:后面需存储引擎(ENGINE =MyISAM)</em></strong></p><h2 id="索引创建"><a href="#索引创建" class="headerlink" title="索引创建"></a>索引创建</h2><p><strong>建表时创建索引：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE TABLE 表名(    字段名1 数据类型 [完整性约束条件]，    字段名2 数据类型 [完整性约束条件]，     ·····    字段名n 数据类型[UNIQUE | FULLTEXT | SPATIAL] INDEX | KEY    [索引名] (字段名1 [(长度)]) [ASC | DESC]))[存储引擎];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>已经创建表后创建索引：</strong><br>使用<strong>CREATE INDEX</strong>语句，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE [UNIQUE | FULLTEXT | SPATIAL] INDEX 索引名 ON 表名 (字段名[(长度)] [ASC | DESC])[存储引擎];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用<strong>ALTER TABLE</strong>语句，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 ADD [UNIQUE | FULLTEXT | SPATIAL] INDEX 索引名 (字段名[(长度)] [ASC | DESC])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>UNIQUE： 可选参数，表示唯一性约束<br>FULLTEXT：可选参数，表示全文约束<br>SPATIAL： 可选参数，表示空间约束<br>INDEX和KEY：用来表示字段的索引，二者选一即可<br>索引名：可选参数，表示创建的索引的名称<br>字段名1：指定索引对应字段的名称<br>长度：可选参数，用于表示索引的长度<br>ASC和DESC：可选参数，其中，ASC表示升序排列，DESC表示降序排列</p><h2 id="索引删除"><a href="#索引删除" class="headerlink" title="索引删除"></a>索引删除</h2><p>使用<strong>ALTER TABLE</strong>语句删除索引，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 DROP INDEX 索引名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<strong>DROP INDEX</strong>删除索引，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">DROP INDEX 索引名 ON 表名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="数据添加"><a href="#数据添加" class="headerlink" title="数据添加"></a>数据添加</h1><h2 id="数据新增"><a href="#数据新增" class="headerlink" title="数据新增"></a>数据新增</h2><p>使用INSERT语句向表插入数据</p><pre class="line-numbers language-mysql"><code class="language-mysql">INSERT INTO 表名 [(字段名1 [，字段名2. . .])] VALUES(值1 [,值2. . .]);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>插入的数据应与字段的数据类型相同。</em><br><em>数据的大小应在字段的数据类型规定范围内。</em><br><strong><em>在VALUES中列出的数据位置必须与被加入的字段的排列位置相对应。</em></strong><br><em>字符和日期型数据应包含在<strong>单引号</strong>中。</em><br><em>插入空值:不指定或 INSERT INTO 表名 VALUES(NULL)；</em><br><em>如果要插入所有字段可以省写字段，直接按表中字段顺序写值。</em></p><h2 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h2><p>使用UPDATE语句修改表中的数据</p><pre class="line-numbers language-mysql"><code class="language-mysql">UPDATE 表名 SET 字段名1 = 值1 [,字段名2 = 值2..][WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>条件表达式:<br>指定字段行的数据更改，如 id = 112 、name = ‘刘邦’<br>UPDATE：可以用新值更新原有表行中的各列<br>SET：指示要修改哪些列和要给予哪些值。<br>WHERE：指定更新哪些行。没有WHERE子句，<strong><em>则更新所有的行</em></strong>。</p><h2 id="数据删除"><a href="#数据删除" class="headerlink" title="数据删除"></a>数据删除</h2><p>使用DELETE语句删除表中数据</p><pre class="line-numbers language-mysql"><code class="language-mysql">DELETE FROM 表名 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>如果不使用where子句，将删除表中所有数据。</em></strong><br>DELETE语句不能删除某一列的值 ( 可使用update)<br>使用DELETE语句仅删除记录，不删除表本身<br>从一个表中删除记录将引起其它表的参照完整性<br><strong><em>外键约束</em></strong><br>删除表中数据也可使用TRUNCATE语句，它和delete有所<br>不同，格式化数据！！！</p><pre class="line-numbers language-mysql"><code class="language-mysql">TRUNCATE 表名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h1><p><strong>SELECT的语法结构：</strong></p><pre class="line-numbers language-MYSQL"><code class="language-MYSQL">SELECT [DISTINCT] (* | {字段名1 [别名][,字段名2[别名]····,字段名n[别名]]} ) FROM 表名 [可选参数];可选参数:[WHERE 条件表达式];高级查询的语句:[GROUP BY 字段名 [HAVING 条件表达式2]] ;[ORDER BY 字段名 [ASC | DESC]] ;[LIMIT [OFFSET] (int)记录数];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>SELECT</strong>：指定查询那个字段数据<br><strong>*：</strong>查询所有字段(列)的意思<br><strong>{字段1,字段2,字段3..}:</strong> 指定查询字段<br>    字段里可进行运算，前提类型符合 ，但底层数据不会被修改！！！<br><strong>别名</strong>：代替字段名<br> <strong>FROM</strong>：指定查询的表<br>可选参数：<br><strong>DISTINCT：</strong>过滤表字段中重复的值（数据），如果指定是多个字段，而且指定的字段值相同，则过滤重复的值！！！<br><strong>WHERE：</strong>指定查询条件<br><strong>GROUP BY：</strong>将查询结果按指定字段进行分组<br>    <strong>HAVING：</strong>对分组后的结果进行过滤<br><strong>ORDER BY：</strong>将查询结果按指定字段进行排序，排列方式有参数ASC（升序）、DESC（降序）控制，默认为ASC（升序）<br><strong>LIMIT：</strong>限制查询结果的数量，后面有可有两个参数，<br>    <strong>OFFSET：</strong>表示偏移量，如果偏移量为0则从第一条开始,。不指定参数1，其默认值为0。<br>    <strong>记录数：</strong>表示返回查询记录的条数</p><table><thead><tr><th>运算符</th><th>展示</th><th>说明</th></tr></thead><tbody><tr><td>比较运算符</td><td>&gt;,&lt;,&lt;=,&gt;=,=,&lt;&gt;</td><td>···</td></tr><tr><td></td><td>字段 BETWEEN(int)值AND(int)值</td><td>显示某个区域的值</td></tr><tr><td></td><td>字段 IN(值1,值2,···)</td><td>显示在字段里的值</td></tr><tr><td></td><td>字段 LIKE ’张%’</td><td>模糊查询%_</td></tr><tr><td></td><td>字段 IS NULL</td><td>判断是否为空</td></tr><tr><td>逻辑运算符</td><td>AND</td><td>多个条件同时成立</td></tr><tr><td></td><td>OR</td><td>多个条件任一个成立</td></tr><tr><td></td><td>NOT</td><td>不成立， 例如：where not(salary&gt;100);</td></tr></tbody></table><h2 id="普通查询"><a href="#普通查询" class="headerlink" title="普通查询"></a>普通查询</h2><h3 id="条件查询-WHERE"><a href="#条件查询-WHERE" class="headerlink" title="条件查询 (WHERE)"></a>条件查询 (WHERE)</h3><p>SELECT的语法里的可选参数，满足条件的查询，基本语法：</p><pre class="line-numbers language-mysql"><code class="language-mysql">可选参数:··· WHERE (条件表达式);如:··· WHERE Engilsh > 80;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="指定查询-IN"><a href="#指定查询-IN" class="headerlink" title="指定查询 (IN)"></a>指定查询 (IN)</h3><p>用于查指定的数值，语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n} FROM 表名 WHERE 字段名 [NOT] IN (值1，值2，···);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="范围查询-BETWEEN-AND"><a href="#范围查询-BETWEEN-AND" class="headerlink" title="范围查询 (BETWEEN  AND)"></a>范围查询 (BETWEEN  AND)</h3><p>用于查询指定范围值，语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n}FROM 表名 WHERE 字段名 [NOT] BETWEEN (int)值1 AND (int)值2;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>查询字段名的值1和值2的范围，前提*</em>2值必须大于1值***</p><h3 id="空值查询-NULL"><a href="#空值查询-NULL" class="headerlink" title="空值查询 (NULL)"></a>空值查询 (NULL)</h3><p>空值查询一判断某些列是否有NULL值。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n}FROM 表名 WHERE 字段名 IS [NOT] NULL;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="过滤查询-DISTINCT"><a href="#过滤查询-DISTINCT" class="headerlink" title="过滤查询 (DISTINCT )"></a>过滤查询 (DISTINCT )</h3><p>去除重复的字段值。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT DISTINCT * | {字段1,字段2...字段n} FROM 表名 [···];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="模糊查询-LIKE"><a href="#模糊查询-LIKE" class="headerlink" title="模糊查询 (LIKE)"></a>模糊查询 (LIKE)</h3><p>寻找匹配的字符串。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n} FROM 表名 WHERE 字段名 [NOT] LIKE '匹配字符串%_';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>注意：</strong><font color = red>Like语句中，‘ % ’代表零个或多个任意字符，‘ _ ’代表一个字符，通配符前缀需右斜线‘ \ ’进行转义，“%”为‘ % ’。</font></p><pre class="line-numbers language-mysql"><code class="language-mysql">例子：字段名 LIKE'_a%\%';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="多条件查询-AND"><a href="#多条件查询-AND" class="headerlink" title="多条件查询  (AND)"></a>多条件查询  (AND)</h3><p>（交集）连接两个或者多个查询条件。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n} FROM 表名 WHERE 条件表达式1 [AND 条件表达式2 [··· AND 条件表达式n]];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="多条件查询-OR"><a href="#多条件查询-OR" class="headerlink" title="多条件查询 (OR)"></a>多条件查询 (OR)</h3><p>（并集）记录满足任意一个条件即被查出。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n}FROM 表名 WHERE 条件表达式1 [OR 条件表达式2 [··· OR 条件表达式n]];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>OR和AND一起用的情况：</strong><br><font color = #b3d4fc>AND的优先级高于OR，因此当两者在一起使用时，应该先运算AND两边的条件表达式，再运算OR两边的条件表达式。</font></p><h2 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h2><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><h4 id="记数函数-COUNT"><a href="#记数函数-COUNT" class="headerlink" title="记数函数 (COUNT())"></a>记数函数 (COUNT())</h4><p>用来统计记录的条数，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT COUNT((*) | (字段名)) FROM 表名 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="求和函数-SUM"><a href="#求和函数-SUM" class="headerlink" title="求和函数 (SUM())"></a>求和函数 (SUM())</h4><p>用于求出表中某个字段所有值的总和，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT SUM(字段名1)[,SUM(字段名2)...,SUM(字段名n)] FROM 表名[WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color = #b3d4fc>SUM里面的字段可进行运算，前提类型符合 ，但底层数据不会被修改！！！</font></p><h4 id="平均值函数-AVG"><a href="#平均值函数-AVG" class="headerlink" title="平均值函数 (AVG())"></a>平均值函数 (AVG())</h4><p>用于求出某个字段所有值的平均值，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT AVG(字段名1)[,AVG(字段名2)...,AVG(字段名n)] FROM 表名 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color = #b3d4fc>AVG里面的字段可进行运算，前提类型符合 ，但底层数据不会被修改！！！</font></p><h4 id="最大值函数-MAX"><a href="#最大值函数-MAX" class="headerlink" title="最大值函数 (MAX())"></a>最大值函数 (MAX())</h4><p>用于求出某个字段的最大值，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT MAX(字段名1)[,MAX(字段名2)...,MAX(字段名n)] FROM 表名 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><font color = #b3d4fc>MAX里面的字段可进行运算，前提类型符合 ，但底层数据不会被修改！！！</font></p><h4 id="最小值函数-MIN"><a href="#最小值函数-MIN" class="headerlink" title="最小值函数 (MIN())"></a>最小值函数 (MIN())</h4><p>用于求出某个字段的最小值，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT MIN(字段名1)[,MIN(字段名2)...,MIN(字段名n)] FROM 表名 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><font color = #b3d4fc>MAX里面的字段可进行运算，前提类型符合 ，但底层数据不会被修改！！！</font><br><font color = red> 函数后面的字段和所有要有小号包括，否则无法识别要记录的数</font></p><h3 id="顺序查询-ORDER-BY"><a href="#顺序查询-ORDER-BY" class="headerlink" title="顺序查询 (ORDER BY)"></a>顺序查询 (ORDER BY)</h3><p>对查询结果进行排序，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * | {字段1,字段2...字段n} FROM 表名 ORDER BY 字段名1 [ASC | DESC][,字段名2 [ASC| DESC]...,字段名n [ASC | DESC]];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ORDER BY：指定字段进行排序<br>SELECT：指定查询的字段<br>ASC升序（默认）、DESC降序<br><font color = red>ORDER BY子句应位于SELECT语句的结尾。</font><br><font color = #b3d4fc>指定字段升序排列时，如果某条字段值为NULL,则这条记录会在第一条显示，这是因为NULL值可以被认为是最小值</font></p><h3 id="分组查询-GROUP-BY"><a href="#分组查询-GROUP-BY" class="headerlink" title="分组查询 (GROUP BY)"></a>分组查询 (GROUP BY)</h3><p>对字段值进行<strong>分组查询</strong>，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT 字段名1 | 聚合函数[,字段2 | 聚合函数...,字段n|聚合函数]FROM 表名GROUP BY 字段名1,字段2,···[HAVING 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>SELECT 后面的字段是要查询的字段。<br>GROUP BY 后面的字段为要分组的字段<br>使用方式：</p><ol><li><p><strong>单独使用GROUP BY</strong></p><p>查询的是每个分组中的一条记录。</p></li><li><p><strong>GROUP BY和聚合函数一起使用</strong><br>可以统计出某个或者某些字段在一个分组中的最大值、最小值、平均值等。</p></li><li><p><strong>GROUP BY和HAVING一起使用</strong><br>HAVING和WHERE都用于设置条件对查询结果进行过滤。</p></li></ol><p><font color=red><strong><em>WHERE语句可以进行过滤,他是分组之前进行过滤, WHERE语句中是不允许使用聚合函数的，如果想在分组之后进行过滤必须使用HAVING语句来进行, HAVING语句中是可以使用聚合函数的</em></strong></font></p><h3 id="限制查询-LIMIT"><a href="#限制查询-LIMIT" class="headerlink" title="限制查询 (LIMIT)"></a>限制查询 (LIMIT)</h3><p>限制查询结果的数量，语法格式:</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT 字段名1[,字段名2,...字段n] FROM 表名LIMIT [(int)OFFSET，](int)记录数;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>OFFSET</strong>：偏移量(从哪里开始的意思)，如果偏移量为0则从查询结果的第一条记录开始一以此类推，如果不指定默认值为0 “记录数”表示返回查询记录的条数。</p><h3 id="为表和字段取别名"><a href="#为表和字段取别名" class="headerlink" title="为表和字段取别名"></a>为表和字段取别名</h3><p>在查询数据时，可以为表和字段取别名，这个别名可以代替其指定的表和字段。</p><h4 id="表别名"><a href="#表别名" class="headerlink" title="表别名"></a>表别名</h4><p>可以为表取一个别名,用这个别名来代替表的名称。别名格式: </p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT (* | 字段) FROM 表名 别名 [...];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>AS:用于指定表名的别名,它可以省略不写。</p><h4 id="字段取别名"><a href="#字段取别名" class="headerlink" title="字段取别名"></a>字段取别名</h4><p>为字段取一个别名,用这个别名来代替表的名称。别名格式: </p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT (* | 字段名1 [别名][,字段名2[别名]····,字段名n[别名]]) FROM 表名 [...];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><table><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回x的绝对值</td></tr><tr><td>SQRT(x)</td><td>返回x的非负2次方根</td></tr><tr><td>MOD(x , y)</td><td>返回x被y除后的余数</td></tr><tr><td>CEILING(x)</td><td>返回不小于x的最小整数</td></tr><tr><td>FLOOR(x)</td><td>返回不大于x的最大整数</td></tr><tr><td>ROUND(x , y)</td><td>对x进行四舍五入操作，小数点后保留y位</td></tr><tr><td>TRUNCATE(x)</td><td>舍去x中小数点y位后面的的数</td></tr><tr><td>SIGN(x)</td><td>返回x的符号，-1、0或者1</td></tr></tbody></table><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><table><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>LENGTH(str)</td><td>返回字符串str的长度</td></tr><tr><td>CONCAT(s1 , s2 , …..)</td><td>返回一个或者多个字符串连接产生的新的字符串</td></tr><tr><td>TRIM(str)</td><td>删除字符串两侧的空格</td></tr><tr><td>REPLACE(str , s1 , s2)</td><td>使用字符串s2替换字符串str中所有的字符串s1</td></tr><tr><td>SUBSTRING(tr , n , len)</td><td>返回字符串st的子串，起始位置为n,长度为len</td></tr><tr><td>REVERSE(str)</td><td>返回字符串反转后的结果</td></tr><tr><td>LOCATE(s1 , str)</td><td>返回子串s1在字符串str中的起始位置</td></tr></tbody></table><h2 id="日期与时间的函数"><a href="#日期与时间的函数" class="headerlink" title="日期与时间的函数"></a>日期与时间的函数</h2><table><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>CURDATE()</td><td>获取系统当前日期</td></tr><tr><td>CURTIME()</td><td>获取系统当前时间</td></tr><tr><td>SYSDATE()</td><td>获取当前系统日期和时间</td></tr><tr><td>TIME_ _TO_SEC()</td><td>返回将时间转换成秒的结果</td></tr><tr><td>ADDDATE()</td><td>执行日期的加运算</td></tr><tr><td>SBUDATE()</td><td>执行日期的减运算</td></tr><tr><td>DATE_ FORMAT()</td><td>格式化输出日期和时间值</td></tr></tbody></table><h2 id="条件判断函数"><a href="#条件判断函数" class="headerlink" title="条件判断函数"></a>条件判断函数</h2><table><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>IF(expr , v1 , v2)</td><td>如果expr表达式为true返回v1,否则返回v2</td></tr><tr><td>IFNULL(v1 , v2)</td><td>如果v1不为NULL返回v1,否则返回v2</td></tr><tr><td>CASE expr WHEN v1 THEN r1 [WHEN v2 THEN r2……] [ELSE m] END</td><td>如果expr值等于v1、v2等,则返回对应位置THEN后面的结果，否则返回ELSE后的结果m</td></tr></tbody></table><h2 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a>加密函数</h2><table><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>MD5(str)</td><td>对字符串 str 进行MD5加密</td></tr><tr><td>ENCODE(str , pwd stu)</td><td>使用pwd作为密码加密字符串str</td></tr><tr><td>DECODE(str , pwd str)</td><td>使用pwd作为密码解密字符串str</td></tr></tbody></table><h1 id="多表操作"><a href="#多表操作" class="headerlink" title="多表操作"></a>多表操作</h1><h2 id="外键添加"><a href="#外键添加" class="headerlink" title="外键添加"></a>外键添加</h2><p>外键是指<strong>引用另一个表中的一个字段或多个字段</strong>。建立、加强两个表数据之间的链接。</p><ol><li>主表是被外键引用的字段，应具有主键约束或唯一性约束</li><li>被引用是<strong>主表</strong>，引用外键的表是<strong>从表</strong>，两表是主从关系</li><li>引入外键后，从表 外键字段只能插入主表被引用字段的值必须存在，如果 从表 的外键字段引用 到主表被引用的字段，则主表被引用字段无法删除，保证数据的完整性</li></ol><p><strong>创建表时定义外键的语法结构：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">CREATE TABLE 表名(   字段名1 数据类型 [完整性约束条件],   字段名2 数据类型 [完整性约束条件],   ·······   FOREIGN KEY (外键字段名) REFERENCES 外表表名(主键或唯一字段名));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建表后定义外键的语法结构：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER  TABLE 表名 ADD CONSTRAINT 外键名 FOREIGN KEY (外键字段名) REFERENCES 外表表名(主键或唯一字段名);[ON DELETE { CASCADE | SET NULL | NO ACTION | RESTRICT }][NO UPDATE { CASCADE | SET NULL | NO ACTION | RESTRICT }]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>CASCADE</td><td>删除包含与删除键值的所有记录</td></tr><tr><td>SET NULL</td><td>修改包含与已删除键值有的所有记录，使用NULL值替换(不能用于已标记为NOT NULL的字段)</td></tr><tr><td>NO ACTION</td><td>不进行任何操作中</td></tr><tr><td>RESTRICT</td><td>拒绝主表删除或修改外键关联字段。(在不定义ON DELETE和ON UPDATE子句时，这是默认设置，也是最安全的设置)</td></tr></tbody></table><p>注意事项：<br><font color=red>    1.建立外键的表必须是InnoDB型不能是临时表。因为MySQL中只有InnoDB型的表才支持外键。</font><br><font color=red>    2.定义外键名时，不能加引号。如: constraint ‘FK_ ID’ 或constraint” FK_ID “都是错误的。</font></p><h2 id="外键删除"><a href="#外键删除" class="headerlink" title="外键删除"></a>外键删除</h2><p>根据逻辑的需求，需要解除两个表之间的关联关系时，就需要删除外键约束。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">ALTER TABLE 表名 DROP FOREIGN KEY 外键名;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="关联表数据添加"><a href="#关联表数据添加" class="headerlink" title="关联表数据添加"></a>关联表数据添加</h2><h3 id="多对一"><a href="#多对一" class="headerlink" title="多对一"></a>多对一</h3><p>在多对一的表关系中，应将外键建在多的一方。</p><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><p>为了实现数据表多对多的关系，需要定义一张<strong>第三方中间表</strong>，该表保存两个关系表的外键。</p><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><p>一对一的对应关系中，<strong>需要分清主从关系</strong>，通常在从表中建立外键。</p><p><font color=red>在从表添加数据时，外键字段的值与外表引用字段的值相同且存在的前提下添加数据，否则受约束！</font> </p><h2 id="关联表数据删除"><a href="#关联表数据删除" class="headerlink" title="关联表数据删除"></a>关联表数据删除</h2><p><strong><font color=red>删除也如此，先删除从表有关联的数据，在删除主表数据</font></strong> </p><h2 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h2><p>交叉连接又称“笛卡尔积”，返回结果的是<strong>被连接的两个表中所有数据行的乘积</strong>。语法格式：</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * FROM 表1 CROSS JOIN 表2 [WHERE 条件表达式];or:SELECT * FROM 表1,表2 [WHERE 条件表达式];;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="INNER-JOIN-内连接"><a href="#INNER-JOIN-内连接" class="headerlink" title="INNER JOIN (内连接)"></a>INNER JOIN (内连接)</h2><p>内连接(INNER JOIN)又称 简单连接 或 自然连接 ，内连接使用 比较运算符 对两个表中的数据进行比较，列出与连接条件匹配的数据行，组合成新的记录。语法格式：(INNER有无误差)</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT {* | 查询字段} FROM 表1 [INNER] JOIN 表2 ON 表1.关系字段 = 表2.关系字段 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="OUTER-JOIN-外连接"><a href="#OUTER-JOIN-外连接" class="headerlink" title="OUTER JOIN (外连接)"></a>OUTER JOIN (外连接)</h2><p>(OUTER有无误差)</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT {* | 查询字段} FROM 表1 { LEFT|RIGHT} [OUTER] JOIN 表2 ON 表1.关系字段 = 表2.关系字段 [WHERE 条件表达式];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="LEFT-JOIN-左连接"><a href="#LEFT-JOIN-左连接" class="headerlink" title="LEFT JOIN (左连接)"></a>LEFT JOIN (左连接)</h3><p>指定左表的所有记录,和所有满足连接条件的记录。如果左表的某条记录在右表中不存在,则在右表中显示为空值。</p><h3 id="RIGHT-JOIN-右连接"><a href="#RIGHT-JOIN-右连接" class="headerlink" title="RIGHT JOIN (右连接)"></a>RIGHT JOIN (右连接)</h3><p>右连接与左连接正好相反，返回右表中所有指定的记录和所有满足连接条件的记录。如果右表的某条记录在左表中没有匹配，则左表将返回空值。</p><h2 id="UNION-复合条件连接"><a href="#UNION-复合条件连接" class="headerlink" title="UNION (复合条件连接)"></a>UNION (复合条件连接)</h2><p>复合条件连接又称<strong>全外连接</strong>，就是在连接查询的过程中，通过添加过滤条件来限制查询结果，使查询结果更加精确。</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT {* | 查询字段} FROM 表1 LEFT JOIN 表2 ON 表1.关系字段 = 表2.关系字段 unionSELECT {* | 查询字段} FROM 表1 RIGHT JOIN 表2 ON 表1.关系字段 = 表2.关系字段;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p><strong>子查询是指一个查询语句嵌套在另一个查询语句内部的查询</strong>。在执行查询语句时，首先会执行子查询中的语句，然后将返回的结果作为外层查询的过滤条件。<br><font color=red><strong>NOT：反向查询！！！</strong></font></p><h3 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h3><p>IN关键字进行子查询时，内层查询语句仅仅返回一个数据字段，这个数据字段中的值将供外层查询语句进行比较操作。</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT {* | 查询字段} FROM 表名1 WHERE 字段 [NOT] IN(SELECT 字段 FROM 表名2 WHERE 条件表达式);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color=red>查询前提：in后面子查询返回结果要和in前的字段匹配</font></p><h3 id="EXISTS"><a href="#EXISTS" class="headerlink" title="EXISTS"></a>EXISTS</h3><p>EXISTS关键字后面的参数可以是任意一个子查询， 这个子查询的作用相当于<strong>测试</strong>，它不产生任何数据，只返回 TRUE 或 FALSE ,返回值 TRUE 时外层查询才会执行。</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT {* | 查询字段} FROM 表名1 WHERE [NOT] EXISTS (SELECT 字段 FROM 表名2 WHERE 条件表达式);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ANY"><a href="#ANY" class="headerlink" title="ANY"></a>ANY</h3><p>ANY关键字表示满足任意一个条件 ,它允许创建一个表达式对子查询的返回值列表进行比较，只要满足内层子查询中的任意一个比较条件,就返回一个结果作为外层查询条件。</p><pre class="line-numbers language-MYSQL"><code class="language-MYSQL">SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} ANY(SELECT 字段 FROM 表名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color=red>查询前提：any后面子查询返回结果要和any前的字段匹配</font></p><h3 id="ALL"><a href="#ALL" class="headerlink" title="ALL"></a>ALL</h3><p>ALL关键字与ANY有点类似，只不过带ALL关键字的子查询返回的结果需同时满足<strong>所有内层查询条件</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} ALL(SELECT 字段 FROM 表名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color=red>查询前提：all后面子查询返回结果要和all前的字段匹配</font></p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>ANY 和 ALL 都用到比较运算符，但还可以使用其他运算符</p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} (SELECT 字段 FROM 表名)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color=red>查询前提：子查询返回结果要和字段匹配</font></p><h1 id="事务与存储过程"><a href="#事务与存储过程" class="headerlink" title="事务与存储过程"></a>事务与存储过程</h1><p>事务指逻辑上的一组操作，组成这组操作的各个单元，要不全部成功，要不全部不成功，<strong>同一个事务的操作具备同步优点</strong>。</p><pre class="line-numbers language-mysql"><code class="language-mysql">START TRANSACTION;·······COMMIT; ROLLBACK;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>START TRANSACTION：开启事务*<font color = #b3d4fc>（执行该语句后处于事务中，不会影响数据库数据）</font>*<br>COMMIT ： 事务提交*<font color = #b3d4fc>（事务生效后会立即影响数据库数据）</font>*<br>ROLLBACK：回滚事务*<font color = #b3d4fc>（取消事务，不会影响数据库数据）</font>*</p><h2 id="事务的特性（ACID）"><a href="#事务的特性（ACID）" class="headerlink" title="事务的特性（ACID）"></a>事务的特性（ACID）</h2><p><strong>原子性(Atomicity)</strong><br>指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</p><p><strong>一致性(Consistency)</strong><br>事务前后数据的完整性必须保持一致。*<font color = #b3d4fc>(数据库的完整性:如果数据库在某个时间点下，所有的数据都符合所有的约束，则称数据库为符合完整性的状态)</font>*</p><p><strong>持久性(Durability)</strong><br>持久性是指一个事务一旦被提交，它对数据库中数据的改变就是<br>永久性的，接下来即使数据库发生故障也不应该对其有任何影响。</p><hr><p><font color=red><strong>隔离性(Isolation)</strong></font><br>事务的隔离性是指多个用户并发访问数据库时，一个用户的事务不能被其它用户的事务所干扰，多个并发事务之间数据要相互隔离。</p><p><strong>隔离安全问题</strong></p><p><strong><font size=5px>脏读：</font></strong>一个事务读取到另一个事务未提交的数据。</p><p><strong><font size=5px>不可重复读：</font></strong>一个事务多次读取同一条记录,读取的结果不相同(过程数据有更改)。*<font color = #b3d4fc>(一个事务读取到另一个事务已经提交的数据)</font>*</p><p><font size=5px>虚读(幻读)：</font>一个事务多次查询整表的数据，由于其他事务新增或删除记录造成多次查询出的记录条数不同*<font color = #b3d4fc>(一个事务读取到另一个事务已经提交的数据)</font>*</p><hr><h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>防止不同隔离性的问题</p><table><thead><tr><th>隔离类型</th><th>说明</th></tr></thead><tbody><tr><td>READ UNCOMMITTED</td><td>不做隔离，有脏读、不可重复读、虚读问题</td></tr><tr><td>READ COMMITTED</td><td>防脏读，不能防不可重复读、虚读问题</td></tr><tr><td>REPEATABLE READ (默认)</td><td>防脏读、不可重复读，不能防虚读问题</td></tr><tr><td>SERIALIZABLE</td><td>没问题，单线程，性能最低</td></tr></tbody></table><p>从安全性考虑：<br>$$<br>SERIALIZABLE&gt;REPEATABLE READ&gt;READ COMMITTED&gt;READ UNCOMMITTED<br>$$<br>从性能上考虑：<br>$$<br>READ UNCOMMITTED&gt;READ COMMITTED&gt;REPEATABLE READ&gt;SERIALIZABLE<br>$$<br><strong>修改当前数据库隔离级别：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">SET [SESSION / GLOBAL] TRANSACTION ISOLATION LEVEL 隔离类型;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>查询当前数据库的隔离级别：</strong></p><pre class="line-numbers language-mysql"><code class="language-mysql">SELECT @@TX_ISOLATION;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><h3 id="存储过程中变量的使用"><a href="#存储过程中变量的使用" class="headerlink" title="存储过程中变量的使用"></a>存储过程中变量的使用</h3><h3 id="存储过程中定义条件和处理程序"><a href="#存储过程中定义条件和处理程序" class="headerlink" title="存储过程中定义条件和处理程序"></a>存储过程中定义条件和处理程序</h3><h3 id="存储过程中光标的使用"><a href="#存储过程中光标的使用" class="headerlink" title="存储过程中光标的使用"></a>存储过程中光标的使用</h3><h3 id="存储过程中流程控制的使用"><a href="#存储过程中流程控制的使用" class="headerlink" title="存储过程中流程控制的使用"></a>存储过程中流程控制的使用</h3><h3 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h3><h3 id="查看存储过程"><a href="#查看存储过程" class="headerlink" title="查看存储过程"></a>查看存储过程</h3><h3 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h3><h3 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h3><p>更新中···</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;便捷查找方式：按&lt;code&gt;Ctrl+F&lt;/code&gt;可查找&lt;br&gt;搜索方法查找方法：数据名+操作方式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例子： 字段删除&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;数据库操作&quot;&gt;&lt;a href=&quot;#数据库
      
    
    </summary>
    
    
      <category term="后端" scheme="https://Sanscan12.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="数据库" scheme="https://Sanscan12.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>CSS API笔记</title>
    <link href="https://sanscan12.github.io/posts/5c87.html"/>
    <id>https://sanscan12.github.io/posts/5c87.html</id>
    <published>2020-04-15T16:00:00.000Z</published>
    <updated>2020-05-10T10:17:06.978Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS初识"><a href="#CSS初识" class="headerlink" title="CSS初识"></a>CSS初识</h1><p>css样式表或层叠样式表（级联样式表），用与设置HTML页面的文本内容（字体，大小，对齐样式）、图片外形等外观。<br>CSS以HTML为基础，提供了丰富的功能，如字体、颜色、背景的控制及整体排版等，而且还可以针对不同的浏览器设置不同的样式。</p><h1 id="css样式表"><a href="#css样式表" class="headerlink" title="css样式表"></a>css样式表</h1><h2 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h2><p>位置在head头部标签中，并且用style标签定义属性，基本语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;head>    &lt;style type="text/CSS">            选择器 </span><span class="token punctuation">{</span>属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> 属性<span class="token property">3</span><span class="token punctuation">:</span>属性值<span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    &lt;/style>&lt;/head><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择器：选择标签加属性。</p><hr><h2 id="行内式（内联样式表）"><a href="#行内式（内联样式表）" class="headerlink" title="行内式（内联样式表）"></a>行内式（内联样式表）</h2><p>内联样式，又称行内样式、行间样式、内嵌样式。是通过标签的style属性来设置元素的样式，基本语法格式：</p><pre class="line-numbers language-css"><code class="language-css">&lt;标签名 style=<span class="token string">"属性1:属性值1; 属性2:属性值2; 属性3:属性值3;"</span>> 内容 &lt;/标签名><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>语法中style是标签的属性。属性和值的书写规范与CSS样式规则相同，行内式只对其所在的标签及嵌套在其中的子标签起作用。</p><hr><h2 id="外部样式表（外链式）"><a href="#外部样式表（外链式）" class="headerlink" title="外部样式表（外链式）"></a>外部样式表（外链式）</h2><p>链入式是将所有的样式放在一个或多个以CSS为扩展名的文件中，通过link标签将文件链接，基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CSS文件的路径<span class="token punctuation">"</span></span>  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>link 必要属性</strong></p><p><font color =8BE9FD>link</font> 是个单标签，link标签需要放在head头部标签中，并且必须指定link标签的三个属性：<br><font color =8BE9FD>href</font>：URL地址，可以是相对路径或绝对路径。<br><font color =8BE9FD>type</font>t：所链接文档的类型，在这里需要指定为“text/CSS”，表示链接的外部文件为CSS样式表。<br><font color =8BE9FD>rel</font>：当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。</p><h2 id="CSS样式规则"><a href="#CSS样式规则" class="headerlink" title="CSS样式规则"></a>CSS样式规则</h2><p>选择器 {属性:属性值 ; 属性2:属性值2 ; ···}<br>CSS样式规则中:<br>1.选择器用于指定CSS样式作用的HTML对象，花括号内是对该对象设置的具体样式。<br>2.属性和属性值以“键值对”的形式出现。<br>3.属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等。<br>4.属性和属性值之间用英文“:”连接。<br>5.多个“键值对”之间用英文“;”进行区分。<br>可以用段落和表格的对齐的演示。</p><h2 id="样式表总结"><a href="#样式表总结" class="headerlink" title="样式表总结"></a>样式表总结</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便，权重高</td><td>没有实现样式和结构相分离</td><td>较少</td><td>控制一个标签（少）</td></tr><tr><td>内部样式表</td><td>部分结构和样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面（中）</td></tr><tr><td>外部样式表</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多，强烈推荐</td><td>控制整个站点（多）</td></tr></tbody></table><hr><h1 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h1><h2 id="标签选择器（元素选择器）"><a href="#标签选择器（元素选择器）" class="headerlink" title="标签选择器（元素选择器）"></a>标签选择器（元素选择器）</h2><p>标签选择器可对标签或元素指定的对象作用。<br>按标签名称和元素名分类，语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">标签名 | 元素名</span><span class="token punctuation">{</span>属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> 属性<span class="token property">3</span><span class="token punctuation">:</span>属性值<span class="token number">3</span><span class="token punctuation">;</span> ···<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><p>类选择器可对指定的对象起作用。<br>用“.”做前缀进行标识，后面紧跟类名，在style标签中，语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">.类名</span><span class="token punctuation">{</span>属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> 属性<span class="token property">3</span><span class="token punctuation">:</span>属性值<span class="token number">3</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>标签调用样式时用“class”属性，值为类名，<strong>无需加“.”做前缀进行标识！</strong><br>下面例子：</p><pre class="line-numbers language-html"><code class="language-html">&lt;p class = "类名">内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>小技巧：</strong></p><ol><li>长名称或词组可以使用中横线来为选择器命名。</li><li>不建议使用“_”下划线来命名CSS选择器。</li><li>不要纯数字、中文等命名， 尽量使用英文字母来表示。</li></ol><hr><h2 id="多类名选择器"><a href="#多类名选择器" class="headerlink" title="多类名选择器"></a>多类名选择器</h2><p>多类名选择器可给标签指定多个类名，从而达到更多选择的目的。<br><strong>注意：</strong></p><ol><li>样式显示效果跟HTML元素中的类名先后顺序没有关系,受CSS样式书写的上下顺序有关。</li><li>各个类名中间用空格隔开。</li></ol><p>多类名选择器的使用，前提先定义了类：<em>（类名之间用空格隔开）</em></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>类名1 类名2 ···<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h2><p><font color =#05ffdc>id</font> 选择器只对一个对象起作用。<br>用“#”做前缀进行标识，后面紧跟id名，id选择器只能对一个标签使用。<em>（可多个食用，建议不要多个使用）</em><br>基本语法格式如下： <em>（语法结构基本和类选择器相同。）</em></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#id</span>名</span><span class="token punctuation">{</span>属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> 属性<span class="token property">3</span><span class="token punctuation">:</span>属性值<span class="token number">3</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><strong>id选择器和类选择器区别</strong></p><p><strong><em>id选择器和类选择器最大的不同在于 使用次数上。</em></strong></p><hr><h2 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h2><p>通配符选择器用“ * ”号表示，是所有选择器中作用范围最广的，能匹配页面中所有的元素。<em>（ 星号代表所有的意思）</em><br>基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">*</span><span class="token punctuation">{</span> 属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> ···<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="选择器总结"><a href="#选择器总结" class="headerlink" title="选择器总结"></a>选择器总结</h2><table><thead><tr><th>选择器</th><th>优点</th><th>缺点</th><th>使用范围</th></tr></thead><tbody><tr><td>标签选择器</td><td>快速在同一类型的标签添加样式</td><td>不能在同一标签设置不同样式</td><td>限制于设置的标签</td></tr><tr><td>类选择器</td><td>可为对象单独定义样式，也可多标签</td><td></td><td>广泛</td></tr><tr><td>id选择器</td><td>可为对象单独定义样式</td><td>不能多标签共用</td><td>一个标签的范围</td></tr><tr><td>通配符选择器</td><td>能匹配页面中所有的元素</td><td>不能单独定义样式</td><td>范围最广</td></tr></tbody></table><hr><h1 id="CSS字体样式属性"><a href="#CSS字体样式属性" class="headerlink" title="CSS字体样式属性"></a>CSS字体样式属性</h1><h2 id="字号大小-font-size"><a href="#字号大小-font-size" class="headerlink" title="字号大小 (font-size)"></a>字号大小 (font-size)</h2><p><font color =#05ffdc>font-size</font>属性用于设置字号大小。<br>属性值设置相对长度单位，也设置绝对长度单位，详细：</p><table><thead><tr><th>属性值的相对长度单位</th><th>说明</th></tr></thead><tbody><tr><td>em</td><td>相对于当前对象内文本的字体尺寸</td></tr><tr><td>px</td><td>像素<em>（常用，建议使用）</em></td></tr></tbody></table><table><thead><tr><th>属性值的绝对长度单位</th><th>说明</th></tr></thead><tbody><tr><td>in</td><td>英尺</td></tr><tr><td>cm</td><td>厘米</td></tr><tr><td>mm</td><td>毫米</td></tr><tr><td>pt</td><td>点</td></tr></tbody></table><hr><h2 id="字体类型-font-family"><a href="#字体类型-font-family" class="headerlink" title="字体类型 (font-family)"></a>字体类型 (font-family)</h2><p><font color =#05ffdc>font-family</font>属性用于设置字体。<br>可同时指定多个字体，中间以逗号隔开，如果浏览器不支持第一个字体，则会尝试下一个，直到找到合适的字体。</p><p><strong>常用技巧：</strong></p><ol><li>现在网页中普遍使用14px+。</li><li>尽量使用偶数的数字字号大小。ie6等老式浏览器支持奇数会有bug。</li><li>各种字体之间必须使用英文状态下的逗号隔开。</li><li>中文字体需要加英文状态下的引号，英文字体一般不需要加引号。当需要设置英文字体时，英文字体名必须位于中文字体名之前。</li><li>如果字体名中包含空格、#、$等符号，则该字体必须加英文状态下的单引号或双引号，例如font-family: “Times New Roman”;。</li><li>尽量使用系统默认字体，保证在任何用户的浏览器中都能正确显示。</li></ol><hr><h2 id="字体编码-CSS-Unicode"><a href="#字体编码-CSS-Unicode" class="headerlink" title="字体编码 (CSS Unicode)"></a>字体编码 (CSS Unicode)</h2><p>在 CSS 中设置字体名称，直接写中文是可以的。但是在文件编码（GB2312、UTF-8 等）不匹配时会产生乱码的错误。xp 系统不支持类似微软雅黑的中文。<em>(尽量只使用宋体和微软雅黑中文字体)</em><br><strong>提高兼容性的解决方案：</strong></p><ol><li>用英文来替代字体名称</li><li>直接使用 Unicode 编码来写字体名称可以避免这些错误</li></ol><table><thead><tr><th>字体名称</th><th>英文名称</th><th>Unicode 编码</th></tr></thead><tbody><tr><td>宋体</td><td>SimSun</td><td>\5B8B\4F53</td></tr><tr><td>新宋体</td><td>NSimSun</td><td>\65B0\5B8B\4F53</td></tr><tr><td>黑体</td><td>SimHei</td><td>\9ED1\4F53</td></tr><tr><td>微软雅黑</td><td>Microsoft YaHei</td><td>\5FAE\8F6F\96C5\9ED1</td></tr><tr><td>楷体_GB2312</td><td>KaiTi_GB2312</td><td>\6977\4F53_GB2312</td></tr><tr><td>隶书</td><td>LiSu</td><td>\96B6\4E66</td></tr><tr><td>幼园</td><td>YouYuan</td><td>\5E7C\5706</td></tr><tr><td>华文细黑</td><td>STXihei</td><td>\534E\6587\7EC6\9ED1</td></tr><tr><td>细明体</td><td>MingLiU</td><td>\7EC6\660E\4F53</td></tr><tr><td>新细明体</td><td>PMingLiU</td><td>\65B0\7EC6\660E\4F53</td></tr></tbody></table><hr><h2 id="字体粗细-font-weight"><a href="#字体粗细-font-weight" class="headerlink" title="字体粗细 (font-weight)"></a>字体粗细 (font-weight)</h2><p><font color =#05ffdc>font-weight</font>属性用于设置字体粗细。<br>字体加粗除了用 b(粗体)和 strong(语气更强的强调)标签之外，也用CSS来实现，但是CSS 是没有语义的。<em>（尽量用数值代表细粗）</em><br>font-weight的属性值：</p><table><thead><tr><th>font-weight 属性值</th><th>说明</th></tr></thead><tbody><tr><td>normal  （默认值） == 400</td><td>正常字体</td></tr><tr><td>bold      == 700</td><td>粗体</td></tr><tr><td>bolder</td><td>特粗体</td></tr><tr><td>lighter</td><td>细体</td></tr><tr><td>100 ~ 900</td><td>100的整倍数</td></tr></tbody></table><hr><h2 id="倾斜字体-font-style"><a href="#倾斜字体-font-style" class="headerlink" title="倾斜字体 (font-style)"></a>倾斜字体 (font-style)</h2><p><font color =#05ffdc>font-style</font>属性用倾斜字体。<br>字体倾斜除了用 i(倾斜)和 em(强调)标签之外可用CSS 来实现，但是CSS 是没有语义的。</p><table><thead><tr><th>font-style 属性值</th><th>说明</th></tr></thead><tbody><tr><td>normal（默认值）</td><td>标准的字体样式</td></tr><tr><td>italic</td><td>斜体的字体样式</td></tr><tr><td>oblique</td><td>倾斜的字体样式</td></tr></tbody></table><hr><h2 id="字体连写样式-font"><a href="#字体连写样式-font" class="headerlink" title="字体连写样式  (font)"></a>字体连写样式  (font)</h2><p>font属性用于对字体样式进行综合设置。<br>基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">选择器</span><span class="token punctuation">{</span><span class="token property">font</span><span class="token punctuation">:</span> <span class="token function">font-style</span><span class="token punctuation">(</span>倾斜字体<span class="token punctuation">)</span>  <span class="token function">font-weight</span><span class="token punctuation">(</span>字体粗细<span class="token punctuation">)</span>  <span class="token function">font-size</span><span class="token punctuation">(</span>字体大小<span class="token punctuation">)</span>/<span class="token function">line-height</span><span class="token punctuation">(</span>字体行高<span class="token punctuation">)</span>  <span class="token function">font-family</span><span class="token punctuation">(</span>字体类型<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>or：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">选择器</span><span class="token punctuation">{</span><span class="token property">font</span><span class="token punctuation">:</span> normal  <span class="token number">400</span>  <span class="token number">100</span>px  <span class="token string">"微软雅黑"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token selector">选择器</span><span class="token punctuation">{</span><span class="token property">font</span><span class="token punctuation">:</span> 斜体 粗细 大小 类型<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>要点：</strong></p><ol><li>使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以空格隔开。</li><li>不需要设置的属性可以省略属性值（取默认值），但必须保留font-size(字体大小)和font-family(字体类型)属性，否则font属性将不起作用。</li></ol><hr><h1 id="CSS外观样式属性"><a href="#CSS外观样式属性" class="headerlink" title="CSS外观样式属性"></a>CSS外观样式属性</h1><h2 id="文本颜色-color"><a href="#文本颜色-color" class="headerlink" title="文本颜色 (color)"></a>文本颜色 (color)</h2><p><font color =#05ffdc>color</font>属性用于定义文本的颜色。</p><table><thead><tr><th>color 属性类型</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue</td></tr><tr><td>十六进制</td><td>#FF0000，#FF6600，#29D794</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)，rgb(100%,0%,0%)</td></tr></tbody></table><p><em>注意:如果使用RGB代码的百分比颜色值，取值为0时也不能省略百分号，必须写为0%。</em></p><hr><h2 id="文本行间距-line-height"><a href="#文本行间距-line-height" class="headerlink" title="文本行间距 (line-height)"></a>文本行间距 (line-height)</h2><p><font color =#05ffdc>ine-height</font>属性用于设置字符的高距。<br>行与行之间的距离，一般称为行高。<br>字体顶与最顶行的距离=(设置值 - 字体)/2（单位：px）<br>line-height常用的属性值单位有三种：</p><table><thead><tr><th>line-height 属性单位</th><th>说明</th></tr></thead><tbody><tr><td>(int)px    <em>（常用）</em></td><td>像素</td></tr><tr><td>(int)em</td><td>字体个数</td></tr><tr><td>(0~100)百分比%</td><td>正常字体的百分比</td></tr></tbody></table><hr><h2 id="文本水平间距-letter-spacing"><a href="#文本水平间距-letter-spacing" class="headerlink" title="文本水平间距 (letter-spacing)"></a>文本水平间距 (letter-spacing)</h2><p><font color =#05ffdc>letter-spacing</font>属性用于设置字符的水平间距。<br>字符与字符之间的距离，一般称为水平间距</p><table><thead><tr><th>letter-spacing 属性单位</th><th>说明</th></tr></thead><tbody><tr><td>(int)px    <em>（常用）</em></td><td>像素</td></tr><tr><td>(int)em</td><td>字体个数</td></tr><tr><td>(0~100)百分比%</td><td>正常字体的百分比</td></tr></tbody></table><hr><h2 id="文本水平对齐方式-text-align"><a href="#文本水平对齐方式-text-align" class="headerlink" title="文本水平对齐方式 (text-align)"></a>文本水平对齐方式 (text-align)</h2><p><font color =#05ffdc>text-align</font>属性用于设置指定字体水平对齐方式。<br>是让盒子里面的内容水平居中，而不是让盒子居中对齐</p><table><thead><tr><th>text-align 属性值</th><th>说明</th></tr></thead><tbody><tr><td>left <em>（默认值）</em></td><td>左对齐</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><hr><h2 id="文本首行缩进-text-indent"><a href="#文本首行缩进-text-indent" class="headerlink" title="文本首行缩进 (text-indent)"></a>文本首行缩进 (text-indent)</h2><p><font color =#05ffdc>text-indent</font>属性用于设置首行文本的缩进。</p><table><thead><tr><th>text-indent 属性单位</th><th>说明</th></tr></thead><tbody><tr><td>(int)px</td><td>像素</td></tr><tr><td>(int)em<em>（常用）</em></td><td>字体个数</td></tr><tr><td>(0~100)百分比%</td><td>浏览器窗口宽度的百分比</td></tr></tbody></table><p><em>一般情况汉字的段落， 2em 就是两个汉字的宽度</em></p><hr><h2 id="文本装饰-text-decoration"><a href="#文本装饰-text-decoration" class="headerlink" title="文本装饰 (text-decoration)"></a>文本装饰 (text-decoration)</h2><p><font color =#05ffdc>text-decoration</font>属性用于给链接修改装饰效果。</p><table><thead><tr><th>text-decoration 属性值</th><th>说明</th></tr></thead><tbody><tr><td>none<em>（默认值）</em></td><td>无装饰（无效果）*</td></tr><tr><td>underline</td><td>文本下的一条线（下划线）</td></tr><tr><td>overline</td><td>文本上的一条线（上划线）</td></tr><tr><td>line-through</td><td>贯穿文本的一条线（删除线）</td></tr></tbody></table><hr><h1 id="开发者工具-chrome"><a href="#开发者工具-chrome" class="headerlink" title="开发者工具 (chrome)"></a>开发者工具 (chrome)</h1><p>此工具是我们的必备工具，以后代码出了问题，首先第一反应就是：<br>“按F12”或者是 “shift+ctrl+i”   打开 开发者工具。</p><p><strong>小技巧：</strong></p><ol><li>ctrl+滚轮 可以 放大开发者工具代码大小。</li><li>左边是HTML元素结构   右边是CSS样式。</li><li>右边CSS样式可以改动数值和颜色查看更改后效果。</li></ol><hr><h1 id="CSS复合选择器"><a href="#CSS复合选择器" class="headerlink" title="CSS复合选择器"></a>CSS复合选择器</h1><h2 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h2><p>交集选择器可指定标签添加样式。<br>交集选择器由两个选择器构成，第一个为标签选择器，第二个为class选择器，两个选择器之间不能有空格<br>基本语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">h3<span class="token class">.class</span> </span><span class="token punctuation">{</span>属性<span class="token punctuation">:</span>属性值<span class="token punctuation">;</span> ····<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>记忆技巧：</strong><br>交集选择器 是并且的意思。  即…又…的意思</p><pre class="line-numbers language-html"><code class="language-html">比如： p.one   选择的是： 类名为 .one 的段落标签。  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span>    p.class{color:red; font-size:20px}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stley</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h2><p>并集选择器可叠加各种选择器和标签等，添加样式。<br>各个选择器通过逗号连接而成的，任何形式的选择器（包括标签选择器、class类选择器id选择器等），都可以作为并集选择器的一部分。<br>基本语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.class</span> , h3 </span><span class="token punctuation">{</span>属性<span class="token punctuation">:</span>属性值<span class="token punctuation">;</span> ····<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>记忆技巧：</strong><br>并集选择器选择器和选择器的意思，只要逗号隔开的，所有选择器都会执行后面样式。</p><p>比如  .one, p , #test {color: #F00;}  表示   .one 和 p  和 #test 这三个选择器都会执行颜色为红色。  通常用于集体声明。</p><hr><h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><p>后代选择器又称<strong>包含选择器</strong>，用来选择元素或元素组的后代。<br><strong>写法：外层标签写在前面，内层标签写在后面，中间用空格分隔</strong>。<em>当标签发生嵌套时，内层标签就成为外层标签的后代。</em><br>基本语法格式：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">类名选择器 标记选择器</span><span class="token punctuation">{</span>属性<span class="token number">1</span>，属性值<span class="token number">1</span>；属性<span class="token number">2</span>，属性值<span class="token number">2</span>,···<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>or：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;style>    <span class="token class">.class</span> h3</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">}</span>    <span class="token selector">div p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">}</span>&lt;/stley>><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="子代选择器"><a href="#子代选择器" class="headerlink" title="子代选择器"></a>子代选择器</h2><p>子代选择器又称<strong>子元素选择器</strong>，只能选择作为某元素子元素的元素。<br>写法：父级标签写在前面，子级标签写在后面，中间跟一个 &gt; 进行连接。 <em>注意，符号左右两侧各保留一个空格。</em><br>基本语法：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">类别选择器 > 标记选择器</span><span class="token punctuation">{</span>属性<span class="token number">1</span>，属性值<span class="token number">1</span>；属性<span class="token number">2</span>，属性值<span class="token number">2</span>,···<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>or：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;style>    <span class="token class">.class</span> > h3</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">}</span>     <span class="token selector">div > p</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><p>伪类选择器用于向某些选择器添加特殊的效果。<br>用“:”做前缀进行标识，后面紧跟伪类名，在style标签中，基本语法格式如下：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;style>    :伪类选择器</span><span class="token punctuation">{</span>属性<span class="token property">1</span><span class="token punctuation">:</span>属性值<span class="token number">1</span><span class="token punctuation">;</span> 属性<span class="token property">2</span><span class="token punctuation">:</span>属性值<span class="token number">2</span><span class="token punctuation">;</span> ··· <span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h3><table><thead><tr><th>选择器</th><th>链接显示情况</th></tr></thead><tbody><tr><td><font color =8BE9FD>link</font></td><td>未访问的链接</td></tr><tr><td><font color =8BE9FD>visited</font></td><td>已访问的链接</td></tr><tr><td><font color =8BE9FD>hover</font></td><td>鼠标移动到链接上</td></tr><tr><td><font color =8BE9FD>active</font></td><td>选定的链接</td></tr></tbody></table><p>注意写的时候，他们的顺序，<strong>尽量不要颠倒</strong>，按照  lvha的顺序。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">a </span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* a是标签选择器  所有的链接 */</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* :hover 是鼠标经过时*/</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*  鼠标经过的时候，由原来的灰色变成了红色 */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="快捷方式"><a href="#快捷方式" class="headerlink" title="快捷方式"></a>快捷方式</h2><ol><li><p>生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 <div></div></p></li><li><p>如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div</p></li><li><p>如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了</p></li><li><p>如果有兄弟关系的标签，用  +  就可以了 比如 div+p  </p></li><li><p>如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了</p></li></ol><hr><h1 id="标签显示模式-display"><a href="#标签显示模式-display" class="headerlink" title="标签显示模式 (display)"></a>标签显示模式 (display)</h1><h2 id="块级元素-block-level"><a href="#块级元素-block-level" class="headerlink" title="块级元素 (block-level)"></a>块级元素 (block-level)</h2><p><font color =#05ffdc>block-level</font>块元素通常都会占一整行或多整行。<br>块级元素可以设置宽度、高度、对齐等··属性，常用于网页布局和网页结构的搭建。</p><p>常见的块元素有<code>&lt;h1&gt;</code>~<code>&lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>标签是最典型的块元素。</p><p> <strong>块级元素的特点：</strong></p><ol><li>总是从新行开始</li><li>高度，行高、外边距以及内边距都可以控制。</li><li>宽度默认是100%    </li><li>可以容纳内联元素和其他块元素。</li></ol><hr><h2 id="行内元素-inline-level"><a href="#行内元素-inline-level" class="headerlink" title="行内元素 (inline-level)"></a>行内元素 (inline-level)</h2><p><font color =#05ffdc>inline-level</font>行内元素又称内联元素，单纯字体空间。<br>自身的字体大小和图像尺寸来支撑结构，<strong>一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。</strong></p><p>常见的行内元素有<code>&lt;a&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;b&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;i&gt;</code>、<code>&lt;del&gt;</code>、<code>&lt;s&gt;</code>、<code>&lt;ins&gt;</code>、<code>&lt;u&gt;</code>、<code>&lt;span&gt;</code>等，其中<code>&lt;span&gt;</code>标签最典型的行内元素。</p><p><strong>行内元素的特点：</strong></p><ol><li>和相邻行内元素在一行上。</li><li>高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。</li><li>行内元素只能容纳文本或则其他行内元素。（a特殊）</li><li>注意：只有文字才能组成段落 因此 p  里面不能放块级元素。链接里面不能再放链接。*</li></ol><hr><h2 id="行内块元素-inline-block"><a href="#行内块元素-inline-block" class="headerlink" title="行内块元素 (inline-block)"></a>行内块元素 (inline-block)</h2><p><font color =#05ffdc>inline-block</font>：范围只限于内容范围的大小<br><strong>行内块元素的特点：</strong></p><ol><li>和相邻行内元素（行内块）在一行上,但是之间会有空白缝隙。</li><li>默认宽度就是它本身内容的宽度。</li><li>高度，行高、外边距以及内边距都可以控制。</li></ol><h2 id="显示模式转换-display"><a href="#显示模式转换-display" class="headerlink" title="显示模式转换 (display)"></a>显示模式转换 (display)</h2><p>块级元素 转 行内元素：display : inline;<br>行内元素 转 块级元素：display : block;<br>块、行内元素 转 行内块元素： display : inline-block;</p><h2 id="标签显示总结"><a href="#标签显示总结" class="headerlink" title="标签显示总结"></a>标签显示总结</h2><table><thead><tr><th>元素</th><th>特点</th></tr></thead><tbody><tr><td>行内元素</td><td>总是从新行开始<br/>高度，行高、外边距以及内边距都可以控制。<br/>宽度默认是容器的100%<br/>可以容纳内联元素和其他块元素。</td></tr><tr><td>块级元素</td><td>和相邻行内元素在一行上。<br/>高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。<br/>默认宽度就是它本身内容的宽度。<br/>行内元素只能容纳文本或则其他行内元素。</td></tr><tr><td>行内块元素</td><td>和相邻行内元素（行内块）在一行上,但是之间会有空白缝隙。<br/>默认宽度就是它本身内容的宽度。<br/>高度，行高、外边距以及内边距都可以控制。</td></tr></tbody></table><hr><h1 id="CSS书写规范"><a href="#CSS书写规范" class="headerlink" title="CSS书写规范"></a>CSS书写规范</h1><h2 id="空格规范"><a href="#空格规范" class="headerlink" title="空格规范"></a>空格规范</h2><p>【强制】 选择器 与 { 之间必须包含空格。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>【强制】 属性名 与之后的 : 之间不允许包含空格， : 与 属性值 之间必须包含空格。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="选择器规范"><a href="#选择器规范" class="headerlink" title="选择器规范"></a>选择器规范</h2><p>【强制】 当一个样式包含多个选择器时，每个选择器声明必须独占一行。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*好习惯*/</span><span class="token selector"><span class="token class">.post</span>,<span class="token class">.page</span>,<span class="token class">.comment</span> </span><span class="token punctuation">{</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*坏习惯*/</span><span class="token selector"><span class="token class">.post</span>, <span class="token class">.page</span>, <span class="token class">.comment</span> </span><span class="token punctuation">{</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择器的嵌套层级不大于 3 级，位置靠后的限定条件应尽可能精确。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 好习惯 */</span><span class="token selector"><span class="token id">#username</span> input </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.comment</span> <span class="token class">.avatar</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 坏习惯 */</span><span class="token selector"><span class="token class">.page</span> <span class="token class">.header</span> <span class="token class">.login</span> <span class="token id">#username</span> input </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.comment</span> div * </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="属性规范"><a href="#属性规范" class="headerlink" title="属性规范"></a>属性规范</h2><p>【强制】 属性定义必须另起一行。<br>【强制】 属性定义后必须以分号结尾。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 好习惯 */</span><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 坏习惯 */</span><span class="token selector"><span class="token class">.selector</span> </span><span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="高度格式"><a href="#高度格式" class="headerlink" title="高度格式"></a>高度格式</h2><p>顶线(字体最高)，中线(字体中间)，基线(字体底部)，底线(最底部)<br>基线与基线的距离为行高。<br>字体上距离=(设置值 - 字体) / 2（单位：px）</p><h1 id="CSS-三大特性"><a href="#CSS-三大特性" class="headerlink" title="CSS 三大特性"></a>CSS 三大特性</h1><h2 id="CSS层叠性"><a href="#CSS层叠性" class="headerlink" title="CSS层叠性"></a>CSS层叠性</h2><p>一般情况下，如果出现样式冲突，则会按照CSS书写的顺序，以最后的样式为准。</p><ol><li>样式冲突，遵循的原则是就近原则。 那个样式离着结构近，就执行那个样式。</li><li>样式不冲突，不会层叠</li></ol><h2 id="CSS继承性"><a href="#CSS继承性" class="headerlink" title="CSS继承性"></a>CSS继承性</h2><p>子标签会继承父标签的某些样式。想要设置一个可继承的属性，只需将它应用于父元素即可。<br><em>恰当地使用继承可以简化代码，降低CSS样式的复杂性。子元素可以继承父元素的样式</em></p><h2 id="CSS优先级"><a href="#CSS优先级" class="headerlink" title="CSS优先级"></a>CSS优先级</h2><p>出现两个或更多规则应用在同一元素上，这时就会出现优先级的问题。注意的特殊情况：</p><ol><li>继承样式的权重为0！！！</li><li>行内样式优先。</li><li>权重相同时，CSS遵循就近原则。</li><li>CSS定义了一个!important命令，该命令被赋予最大的优先级。</li></ol><h2 id="CSS特殊性"><a href="#CSS特殊性" class="headerlink" title="CSS特殊性"></a>CSS特殊性</h2><p>关于CSS权重，需要一套计算公式来去计算，这个就是 CSS Specificity，是衡量CSS值优先级的一个标准。<br>specificity用一个四位的数字串(CSS2是三位)来表示，更像四个级别，值从左到右，左面的最大，一级大于一级，数位之间没有进制，级别之间不可超越。 </p><table><thead><tr><th>继承的贡献值（权重）</th><th>0,0,0,0</th></tr></thead><tbody><tr><td>* 全部</td><td>0,0,0,0</td></tr><tr><td>每个元素（标签）</td><td>0,0,0,1</td></tr><tr><td>每个类，伪类</td><td>0,0,1,0</td></tr><tr><td>每个ID</td><td>0,1,0,0</td></tr><tr><td>每个行内样式</td><td>1,0,0,0</td></tr><tr><td>每个!important（重要的）</td><td>∞ 无穷大</td></tr></tbody></table><p>权重是可以叠加的<br>比如的例子：</p><pre><code>div ul  li   ------&gt;      0,0,0,3.nav ul li   ------&gt;      0,0,1,2a:hover      -----—&gt;      0,0,1,1.nav a       ------&gt;      0,0,1,1   #nav p       -----&gt;       0,1,0,1</code></pre><p><strong>数位之间没有进制</strong>。比如说： 0,0,0,5 + 0,0,0,5 =0,0,0,10 而不是 0,0, 1, 0， 所以不会存在10个div能赶上一个类选择器的情况。</p><h3 id="权重总结"><a href="#权重总结" class="headerlink" title="权重总结"></a>权重总结</h3><ol><li>使用了!important声明的规则。</li><li>内嵌在HTML元素的style属性里面的声明。</li><li>使用了ID 选择器的规则。</li><li>使用了类选择器、属性选择器、伪元素和伪类选择器的规则。</li><li>使用了元素选择器的规则。</li><li>只包含一个通用选择器的规则。</li><li>同一类选择器则遵循就近原则。</li></ol><p><strong><em>权重是优先级的算法，层叠是优先级的表现</em></strong></p><hr><h1 id="背景-background"><a href="#背景-background" class="headerlink" title="背景 (background)"></a>背景 (background)</h1><p>可以添加背景颜色和背景图片，以及来进行图片设置</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><font color =8BE9FD>background-color</font></td><td>背景颜色</td></tr><tr><td><font color =8BE9FD>background-image</font></td><td>背景图片地址</td></tr><tr><td><font color =8BE9FD>background-repeat</font></td><td>是否平铺</td></tr><tr><td><font color =8BE9FD>background-position</font></td><td>背景位置</td></tr><tr><td><font color =8BE9FD>background-attachment</font></td><td>背景固定还是滚动</td></tr><tr><td>背景的合写（复合属性）</td><td></td></tr><tr><td><font color =8BE9FD>background</font>:背景颜色 背景图片地址 背景平铺 背景滚动 背景位置</td><td></td></tr></tbody></table><h2 id="背景图片-image"><a href="#背景图片-image" class="headerlink" title="背景图片 (image)"></a>背景图片 (image)</h2><p><font color =#05ffdc>background-image</font>属性允许指定一个图片展示在背景中<br>可以和background-color连用。如果图片不重复地话，图片覆盖不到地地方都会被背景色填充。 如果有背景图片平铺，则会覆盖背景颜色。语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-image</span> <span class="token punctuation">:</span> none | url<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>none : 　无背景图（默认的）<br>url : 　使用绝对或相对地址指定背景图像<br><em>背景图片后面的地址，url不要加引号</em></p><hr><h2 id="背景平铺-repeat"><a href="#背景平铺-repeat" class="headerlink" title="背景平铺 (repeat)"></a>背景平铺 (repeat)</h2><p><font color =#05ffdc>background-repeat  </font>背景布局形式！语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-repeat</span> <span class="token punctuation">:</span> repeat | no-repeat | repeat-x | repeat-y <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>repeat 属性值</th><th>说明</th></tr></thead><tbody><tr><td>repeat （默认的）</td><td>图像在纵向和横向上平铺</td></tr><tr><td>no-repeat</td><td>图像不平铺</td></tr><tr><td>repeat-x</td><td>图像在横向上平铺</td></tr><tr><td>repeat-y</td><td>背景图像在纵向平铺</td></tr></tbody></table><p><em>设置背景图片时，默认把图片在水平和垂直方向平铺以铺满整个元素</em></p><hr><h2 id="背景位置-position"><a href="#背景位置-position" class="headerlink" title="背景位置 (position)"></a>背景位置 (position)</h2><p><font color =#05ffdc>background-position</font>背景坐标，语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-position</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>length | position<span class="token punctuation">)</span> <span class="token punctuation">(</span>length | position<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>position 属性值</th><th>说明</th></tr></thead><tbody><tr><td>length(精确位置)</td><td>百分数、浮点数字、单位标识符组成的长度值</td></tr><tr><td>position(方位名词)</td><td>top (上)、center (中心)、bottom (底)、left (左)、right (右)</td></tr></tbody></table><p>length属性值，如果只指定了一个值，该值将用于横坐标。纵坐标将默认为50%。第二个值将用于纵坐标。<br>注意：</p><ol><li>position 后面是x坐标和y坐标。 可以使用方位名词或者精确单位。</li><li>如果和精确单位和方位名字混合使用，则必须是x坐标在前，y坐标后面。<br>比如background-position: 15px top;   则 15px 一定是  x坐标   top是 y坐标。</li></ol><p><em>实际工作用的最多的，就是背景图片居中对齐了</em></p><hr><h2 id="背景附着-attachment"><a href="#背景附着-attachment" class="headerlink" title="背景附着 (attachment)"></a>背景附着 (attachment)</h2><p><font color =#05ffdc>background-attachment</font> 是否随滚动条移动。语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-attachment</span> <span class="token punctuation">:</span> scroll | fixed <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color =8BE9FD>scroll </font>: 　背景图像是随对象内容滚动（默认）<br> <font color =8BE9FD>fixed</font>: 　背景图像固定 0<br><em>设置或检索背景图像是随对象内容滚动还是固定的</em></p><hr><h2 id="背景连写"><a href="#背景连写" class="headerlink" title="背景连写"></a>背景连写</h2><p><font color =#05ffdc>background</font>属性的值的书写顺序没有强制标准的。语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background</span><span class="token punctuation">:</span> transparent <span class="token url">url(路径)</span> repeat-y  scroll <span class="token number">50%</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>背景颜色 背景图片地址 背景平铺 背景滚动 背景位置<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="背景透明-rgba"><a href="#背景透明-rgba" class="headerlink" title="背景透明 (rgba)"></a>背景透明 (rgba)</h2><p><font color =#05ffdc>rgba</font>背景半透明的写法语法格式是 :</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后一个参数是 <code>透明度</code>  取值范围 0~1之间<br><em>背景半透明是指盒子背景半透明， 盒子里面的内容不受影响</em></p><hr><h1 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h1><p>盒子模型就是把HTML页面中的元素看作是一个矩形的盒子，也就是一个盛装内容的容器。每个矩形都由元素的内容、内边距（padding）、边框（border）和外边距（margin）组成。</p><h2 id="盒子模型-Box-Model"><a href="#盒子模型-Box-Model" class="headerlink" title="盒子模型 (Box Model)"></a>盒子模型 (Box Model)</h2><p>元素框（element box），它描述了一个文档元素再网页布局汇总所占的位置大小。因此，<strong style="color: #f00;">每个盒子除了有自己大小和位置外，还影响着其他盒子的大小和位置。</strong></p><hr><h2 id="盒子边框-border"><a href="#盒子边框-border" class="headerlink" title="盒子边框 (border)"></a>盒子边框 (border)</h2><p><font color =#05ffdc>border</font> 盒子的外边框，语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span> ||<span class="token property">border-style</span><span class="token punctuation">:</span> 样式 || <span class="token property">border-color</span><span class="token punctuation">:</span> 颜色<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>border 属性</th><th>说明</th></tr></thead><tbody><tr><td>border-width</td><td>边框的粗细</td></tr><tr><td>border-style</td><td>边框的样式(虚线，实线··)</td></tr><tr><td>border-color</td><td>边框的颜色</td></tr></tbody></table><p>border-style默认无边框（none），它有的样式：hidden（隐藏边框）、solid（实线边框）、dashed（虚线）、dotted（点线）、double（双实线）。<br><strong style="color: #f00;">如果border：0则清除所有边框！！！</strong><br><strong>连写：</strong></p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border</span> <span class="token punctuation">:</span> 边框的粗细 边框的样式 边框的颜色<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color = #b3d4fc>顺序无要求！</font></p><h2 id="盒子边框写法总结表"><a href="#盒子边框写法总结表" class="headerlink" title="盒子边框写法总结表"></a>盒子边框写法总结表</h2><table><thead><tr><th>设置内容</th><th>样式属性</th><th>常用属性值</th></tr></thead><tbody><tr><td>上边框</td><td>border-top-style:样式; border-top-width:宽度;border-top-color:颜色;border-top:宽度 样式 颜色;</td><td></td></tr><tr><td>下边框</td><td>border-bottom-style:样式;border- bottom-width:宽度;border- bottom-color:颜色;border-bottom:宽度 样式 颜色;</td><td></td></tr><tr><td>左边框</td><td>border-left-style:样式; border-left-width:宽度;border-left-color:颜色;border-left:宽度 样式 颜色;</td><td></td></tr><tr><td>右边框</td><td>border-right-style:样式;border-right-width:宽度;border-right-color:颜色;border-right:宽度 样式 颜色;</td><td></td></tr><tr><td>样式综合设置</td><td>border-style:上边 [右边 下边 左边];</td><td>none无（默认）、solid单实线、dashed虚线、dotted点线、double双实线</td></tr><tr><td>宽度综合设置</td><td>border-width:上边 [右边 下边 左边];</td><td>像素值</td></tr><tr><td>颜色综合设置</td><td>border-color:上边 [右边 下边 左边];</td><td>颜色值、#十六进制、rgb(r,g,b)、rgb(r%,g%,b%)</td></tr><tr><td>边框综合设置</td><td>border:四边宽度 四边样式 四边颜色;</td><td></td></tr></tbody></table><hr><h2 id="盒子表格边框线合并-collapse"><a href="#盒子表格边框线合并-collapse" class="headerlink" title="盒子表格边框线合并 (collapse)"></a>盒子表格边框线合并 (collapse)</h2><p><font color =#05ffdc>border-collapse</font> <code>table</code>表格标签 ，表示相邻边框合并在一起的css语句：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="盒子圆角边框-radius"><a href="#盒子圆角边框-radius" class="headerlink" title="盒子圆角边框 (radius)"></a>盒子圆角边框 (radius)</h2><p><font color =#05ffdc>border-radius</font> 使边角变圆角，radius 半径（距离）。语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border-radius</span><span class="token punctuation">:</span> 左上角  右上角  右下角  左下角<span class="token punctuation">;</span><span class="token property">ro</span><span class="token punctuation">:</span><span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="盒子内边距-padding"><a href="#盒子内边距-padding" class="headerlink" title="盒子内边距 (padding)"></a>盒子内边距 (padding)</h2><p><font color =#05ffdc>padding</font> 属性用于设置内边距。  指边框与内容之间的距离。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><font color =8BE9FD>padding-top</font></td><td>上内边距</td></tr><tr><td><font color =8BE9FD>padding-right</font></td><td>右内边距</td></tr><tr><td><font color =8BE9FD>padding-bottom</font></td><td>下内边距</td></tr><tr><td><font color =8BE9FD>padding-left</font></td><td>左内边距</td></tr></tbody></table><p><font color=#f00>padding属性参数如果是多个这由一下表格说明：</font></p><table><thead><tr><th>参数值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td>1个值</td><td>padding:上下左右边距 比如padding: 3px;</td></tr><tr><td>2个值</td><td>padding:上下边距 左右边距 比如 padding: 3px 5px;</td></tr><tr><td>3个值</td><td>padding:上边距 左右边距 下边距 比如 padding: 3px 5px 10px;</td></tr><tr><td>4个值</td><td>padding:上内边距 右内边距 下内边距 左内边距 比如: padding: 3px 5px 10px 15px;</td></tr></tbody></table><p><font color=#f00><strong>注意：padding属性会撑破盒子原有的大小，适当食用。</strong></font></p><hr><h2 id="盒子外边距-margin"><a href="#盒子外边距-margin" class="headerlink" title="盒子外边距 (margin)"></a>盒子外边距 (margin)</h2><p><font color =#05ffdc>margin</font>用于设置外边距。  设置外边距会在元素之间创建“空白”， 这段空白通常不能放置其他内容。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><font color =8BE9FD>margin-top</font></td><td>上内边距</td></tr><tr><td><font color =8BE9FD>margin-right</font></td><td>右内边距</td></tr><tr><td><font color =8BE9FD>margin-bottom</font></td><td>下内边距</td></tr><tr><td><font color =8BE9FD>margin-left</font></td><td>左内边距</td></tr><tr><td><font color =8BE9FD>margin</font></td><td>上 右 下 左</td></tr></tbody></table><p><font color=#f00>margin属性参数如果是多个使用方式和padding属性相同</font></p><h2 id="盒子阴影-box-shadow"><a href="#盒子阴影-box-shadow" class="headerlink" title="盒子阴影 (box-shadow)"></a>盒子阴影 (box-shadow)</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token property">box-shadow</span><span class="token punctuation">:</span> 水平阴影 垂直阴影 模糊距离 阴影尺寸 阴影颜色  内/外阴影；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>h-shadow</td><td>必须。水平阴影位置（正右负左）</td></tr><tr><td>v-shadow</td><td>必须。垂直阴影位置（正下负上）</td></tr><tr><td>blur</td><td>模糊距离</td></tr><tr><td>spread</td><td>阴影尺寸</td></tr><tr><td>color</td><td>阴影颜色</td></tr><tr><td>inset</td><td>将外阴影（默认）改为内阴影</td></tr></tbody></table><h2 id="盒子外边距实现居中"><a href="#盒子外边距实现居中" class="headerlink" title="盒子外边距实现居中"></a>盒子外边距实现居中</h2><p>可以让一个盒子实现水平居中，需要满足一下两个条件：</p><ol><li>必须是块级元素。     </li><li>盒子必须指定了宽度（width）</li></ol><p>然后就给<strong>左右的外边距都设置为auto</strong>，就可使块级元素水平居中。例子：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.header</span></span><span class="token punctuation">{</span>     <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">960</span>px<span class="token punctuation">;</span>     <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="盒子和文本的居中"><a href="#盒子和文本的居中" class="headerlink" title="盒子和文本的居中"></a>盒子和文本的居中</h2><p>文字水平居中是 text-align: center<br>盒子水平居中 左右margin 改为 auto </p><h2 id="清除元素的默认内外边距"><a href="#清除元素的默认内外边距" class="headerlink" title="清除元素的默认内外边距"></a>清除元素的默认内外边距</h2><p>为了更方便地控制网页中的元素，制作网页时，可使用如下代码清除元素的默认内外边距： </p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">* </span><span class="token punctuation">{</span>   <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/* 清除内边距 */</span>   <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">/* 清除外边距 */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><font color=red>行内元素是只有左右外边距的，是没有上下外边距的，尽量不要给行内元素指定上下的内外边距就好了</font></p><hr><h1 id="浮动-float"><a href="#浮动-float" class="headerlink" title="浮动 (float)"></a>浮动 (float)</h1><p>CSS的定位机制有3种：普通流（标准流）、浮动和定位。</p><p><font color =#05ffdc>float</font> 属性来定义浮动，语法格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">选择器</span><span class="token punctuation">{</span>    <span class="token property">float</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>left</td><td>向右浮动</td></tr><tr><td>right</td><td>向左浮动</td></tr><tr><td>none（默认）</td><td>不浮动</td></tr></tbody></table><h2 id="浮动特性"><a href="#浮动特性" class="headerlink" title="浮动特性"></a>浮动特性</h2><p>浮动脱离标准流，不占位置，会影响标准流。浮动只有左右浮动。</p><ol><li>如果在一个父类盒子内浮动的子类盒子，浮动的子类盒子不会超出浮动范围</li><li>一个父盒子里面的子盒子，如果其中一个子级有浮动的，则其他子级都需要浮动。这样才能一行对齐显示</li><li>元素添加浮动后，元素会具有行内块元素的特性</li></ol><p><strong>浮动目的</strong></p><p>浮动的目的就是为了让多个块级元素同一行上显示。</p><p><strong>float      浮 漏 特</strong> </p><p>浮：    加了浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面。<br>漏：    加了浮动的盒子，不占位置的，它浮起来了，它原来的位置漏 给了标准流的盒子。<br>特：    特别注意，首先浮动的盒子需要和标准流的父级搭配使用， 其次 特别的注意浮动可以使元素显示模式体现为行内块特性。</p><h2 id="浮动清除"><a href="#浮动清除" class="headerlink" title="浮动清除"></a>浮动清除</h2><p>清除浮动主要为了解决父级元素因为子级浮动引起内部高度为 0 的问题。就是把浮动的盒子圈到里面，让父盒子闭合出口和入口不让他们出来影响其他元素。<br><strong>清除浮动：</strong></p><pre class="line-numbers language-css"><code class="language-css"> <span class="token property">clear</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><h3 id="额外标签法"><a href="#额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h3><p>通过在浮动元素末尾添加一个空的标签！<br><font color=red    >注意：是最后一个空的子标签</font></p><pre class="line-numbers language-css"><code class="language-css">&lt;div style=”<span class="token property">clear</span><span class="token punctuation">:</span>both”>&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>优点：</strong> 通俗易懂，书写方便</p><p><strong>缺点：</strong> 添加许多无意义的标签，结构化较差</p><hr><h3 id="父级添加overflow属性方法"><a href="#父级添加overflow属性方法" class="headerlink" title="父级添加overflow属性方法"></a>父级添加overflow属性方法</h3><p>可以通过触发 BFC 的方式，可以实现清除浮动效果。<strong><font color=red><em>给父盒子添加！！！</em></font></strong></p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">overflow</span><span class="token punctuation">:</span> hidden|auto|scroll<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>优点：</strong>  代码简洁</p><p><strong>缺点：</strong>  内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素</p><hr><h3 id="after伪元素清除浮动"><a href="#after伪元素清除浮动" class="headerlink" title="after伪元素清除浮动"></a>after伪元素清除浮动</h3><p><strong>:after 方式为空元素的升级版，好处是不用单独加标签了</strong> </p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.clearfix</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>     <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>     <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token selector"><span class="token class">.clearfix</span> </span><span class="token punctuation">{</span>    *<span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span> /*zoom <span class="token number">1</span>就是ie<span class="token number">6</span>清除浮动方式 * ie<span class="token number">7</span>以下的版本所识别* /<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父盒子调用 <font color =8BE9FD>clearfix</font> 类使用即可</p><p><strong>优点：</strong> 符合闭合浮动思想  结构语义化正确</p><p><strong>缺点：</strong>低版本不支持</p><p><font color=#f00><strong>注意： content:”” ，尽量不要带点</strong></font></p><hr><h3 id="使用before和after双伪元素清除浮动"><a href="#使用before和after双伪元素清除浮动" class="headerlink" title="使用before和after双伪元素清除浮动"></a>使用before和after双伪元素清除浮动</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.clearfix</span><span class="token pseudo-element">:before</span>, <span class="token class">.clearfix</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>   <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* 这句话可以出发BFC BFC可以清除浮动,BFC我们后面讲 */</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.clearfix</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>  <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.clearfix</span> </span><span class="token punctuation">{</span>  *<span class="token property">zoom</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>父盒子调用 <font color =8BE9FD>clearfix</font> 类使用即可<br><strong>优点：</strong>  代码更简洁</p><p><strong>缺点：</strong> 低版本不支持</p><hr><h1 id="版心和布局流程"><a href="#版心和布局流程" class="headerlink" title="版心和布局流程"></a>版心和布局流程</h1><h2 id="版心"><a href="#版心" class="headerlink" title="版心"></a>版心</h2><p>是指网页中主体内容所在的区域。一般在浏览器窗口中水平居中显示，常见的宽度值为960px、980px、1000px、1200px等。</p><h2 id="布局流程"><a href="#布局流程" class="headerlink" title="布局流程"></a>布局流程</h2><p>布局时通常需要遵守一定的布局流程，具体如下：</p><ol><li>确定页面的版心（可视区）</li><li>分析页面中的行模块，以及每个行模块中的列模块</li><li>制作HTML结构 </li><li>CSS初始化，然后开始运用盒子模型的原理，通过DIV+CSS布局来控制网页的各个模块。</li></ol><hr><h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><p>定位可以实现<code>标准流</code>和<code>浮动</code>难以实现的结果简单化。</p><h2 id="元素的定位属性"><a href="#元素的定位属性" class="headerlink" title="元素的定位属性"></a>元素的定位属性</h2><p>元素的定位属性主要包括定<code>位模式</code>和<code>边偏移</code>两部分。</p><p><strong>1、边偏移</strong></p><table><thead><tr><th>边偏移属性</th><th>说明</th></tr></thead><tbody><tr><td>top</td><td>顶端，定义元素相对于其父元素上边线的距离</td></tr><tr><td>bottom</td><td>底部，定义元素相对于其父元素下边线的距离</td></tr><tr><td>left</td><td>左侧，定义元素相对于其父元素左边线的距离</td></tr><tr><td>right</td><td>右侧，定义元素相对于其父元素右边线的距离</td></tr></tbody></table><p><strong>2、定位模式 (定位的分类)</strong></p><p><font color =#05ffdc>position</font> 属性用于定义元素的 定位模式 ，语法格式如下：</p><pre><code>选择器{position: 属性值;}</code></pre><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>static</td><td>静态定位（默认）</td></tr><tr><td>relative</td><td>相对定位，相对于其原文档流的位置进行定位</td></tr><tr><td>absolute</td><td>绝对定位，相对于其上一个已经定位的父元素进行定位</td></tr><tr><td>fixed</td><td>固定定位，相对于浏览器窗口进行定位</td></tr></tbody></table><hr><h2 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位 (static)"></a>静态定位 (static)</h2><p><font color =#05ffdc>position: static;</font> HTML文档流中默认样式</p><blockquote><ol><li>无法偏移</li><li>可取消定位</li><li>跟随滚动</li></ol></blockquote><hr><h2 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 (relative)"></a>相对定位 (relative)</h2><p><font color =#05ffdc>position: relative; </font> 多个元素一个搞定，盒子打包</p><blockquote><ol><li>可偏移，原有位置继续占有</li><li>移动位置，是以元素左上角为基点移动</li><li>跟随滚动</li></ol></blockquote><hr><h2 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位 (absolute)"></a>绝对定位 (absolute)</h2><p><font color =#05ffdc>position: absolute; </font> 不占空间的漂浮元素</p><blockquote><ol><li>可偏移，原有位置不占有</li><li>无父级，以浏览器为基准</li><li>有父级，以父级盒子为基准</li><li>跟随滚动</li></ol></blockquote><p><strong>口诀技巧</strong></p><ol><li><strong>子绝父相</strong><br>子级盒子是绝对定位，父级盒子是相对定位</li><li><strong>子绝父绝</strong><br>父级盒子是绝对定位，子级盒子是绝对定位</li></ol><hr><h2 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位 (fixed)"></a>固定定位 (fixed)</h2><p><font color =#05ffdc>position: fixed; </font> 始终在窗口展示的元素</p><blockquote><ol><li>跟父亲没有关系，只认浏览器</li><li>完全脱标，不占有位置</li><li>不随滚动</li></ol></blockquote><hr><h2 id="叠放次序-z-index"><a href="#叠放次序-z-index" class="headerlink" title="叠放次序 (z-index)"></a>叠放次序 (z-index)</h2><p><font color =#05ffdc>z-index: 4; </font> 调整重叠定位元素的堆叠顺序</p><blockquote><ol><li>默认属性值：0，值越大越靠顶层</li><li>取值相同，书写顺序，后者居上</li><li>没有单位</li><li>除了静态，只能用于定位，其他类型，则无效</li></ol></blockquote><hr><h2 id="定位总结"><a href="#定位总结" class="headerlink" title="定位总结"></a>定位总结</h2><table><thead><tr><th>定位模式</th><th>是否脱标占有位置</th><th>是否可以使用边偏移</th><th>移动位置基准</th></tr></thead><tbody><tr><td>静态 static</td><td>不脱标，正常模式</td><td>不可以</td><td>正常模式</td></tr><tr><td>相对定位 relative</td><td>脱标，占位置</td><td>可以</td><td>相对自身位置移动</td></tr><tr><td>绝对定位 absolute</td><td>脱标，不占位置</td><td>可以</td><td>相对于定位父级移动位置</td></tr><tr><td>固定定位 fixed</td><td>脱标，不占位置</td><td>可以</td><td>相对于浏览器移动位置</td></tr></tbody></table><hr><h1 id="元素显示与隐藏"><a href="#元素显示与隐藏" class="headerlink" title="元素显示与隐藏"></a>元素显示与隐藏</h1><p>主要目的是让一个元素在页面中消失，但是不在文档源码中删除</p><h2 id="显示-display"><a href="#显示-display" class="headerlink" title="显示 (display)"></a>显示 (display)</h2><p><font color =#05ffdc>display</font> 设置元素如何显示</p><p><font color =#05ffdc>display : none;</font> 隐藏对象 、不保留位置</p><hr><h2 id="可见性-visibility"><a href="#可见性-visibility" class="headerlink" title="可见性 (visibility)"></a>可见性 (visibility)</h2><p><font color =#05ffdc>visibility</font> 设置元素否显示</p><table><thead><tr><th>visibility属性值</th><th>说明</th></tr></thead><tbody><tr><td>visible（默认）</td><td>对象可视</td></tr><tr><td>hidden</td><td>对象隐藏 、保留位置</td></tr></tbody></table><hr><h2 id="溢出隐藏-overflow"><a href="#溢出隐藏-overflow" class="headerlink" title="溢出隐藏 (overflow)"></a>溢出隐藏 (overflow)</h2><p><font color =#05ffdc>overflow</font> 当对象的内容超过指定的高度和宽度则隐藏</p><table><thead><tr><th>overflow属性值</th><th>说明</th></tr></thead><tbody><tr><td>visible （默认）</td><td>不剪切内容也不添加滚动条</td></tr><tr><td>auto</td><td>超出自动显示滚动条，不超不显示</td></tr><tr><td>hidden</td><td>超出内容隐藏掉</td></tr><tr><td>scroll</td><td>总是显示滚动条</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/wt3.png" style="zoom:50%;" /><hr><h1 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h1><h2 id="鼠标样式-cursor"><a href="#鼠标样式-cursor" class="headerlink" title="鼠标样式 (cursor)"></a>鼠标样式 (cursor)</h2><p><font color =#05ffdc>cursor</font> 鼠标移到对象上更换预定义光标形状</p><p>常用的鼠标样式：</p><table><thead><tr><th>cursor属性值</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认</td></tr><tr><td>pointer</td><td>小手</td></tr><tr><td>move</td><td>移动</td></tr><tr><td>text</td><td>文本</td></tr></tbody></table><hr><h2 id="轮廓-outline"><a href="#轮廓-outline" class="headerlink" title="轮廓 (outline)"></a>轮廓 (outline)</h2><p><font color =#05ffdc>outline</font> 边框边缘的外围，可起到突出元素的作用</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">outline</span><span class="token punctuation">:</span> color style width<span class="token property">outline</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span> solid <span class="token number">1</span>px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p> 参数：<br>color: 选择颜色<br>style：样式<br>width: 宽度</p></blockquote><p>一般情况，我们只关心的直接写法是 <code>outline: 0;</code>、<code>outline: none;</code></p><hr><h2 id="文本域固定-resize"><a href="#文本域固定-resize" class="headerlink" title="文本域固定 (resize)"></a>文本域固定 (resize)</h2><p><font color =#05ffdc>resize</font> 调节文本域尺寸大小或固定</p><table><thead><tr><th>resize属性值</th><th>说明</th></tr></thead><tbody><tr><td>none</td><td>固定大小</td></tr><tr><td>both</td><td>可调节大小</td></tr><tr><td>horizontal</td><td>只可以调节宽</td></tr><tr><td>vertical</td><td>只可以调节高</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/wt2.png" style="zoom: 50%;" /><hr><h2 id="垂直对齐-vertical-align"><a href="#垂直对齐-vertical-align" class="headerlink" title="垂直对齐 (vertical-align)"></a>垂直对齐 (vertical-align)</h2><p><font color =#05ffdc>vertical-align</font> 设置内容与图片\表单的对齐方式</p><table><thead><tr><th>vertical-align属性值</th><th>说明</th></tr></thead><tbody><tr><td>baseline （默认）</td><td>基线对齐</td></tr><tr><td>top</td><td>顶部对齐</td></tr><tr><td>middle</td><td>居中对齐</td></tr><tr><td>bottom</td><td>底部对齐</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/wt1.png" style="zoom:50%;" ><hr><h1 id="溢出的文字隐藏"><a href="#溢出的文字隐藏" class="headerlink" title="溢出的文字隐藏"></a>溢出的文字隐藏</h1><h2 id="自动换行-word-break"><a href="#自动换行-word-break" class="headerlink" title="自动换行 (word-break)"></a>自动换行 (word-break)</h2><p><font color =#05ffdc>word-break</font> 设置文本换行行为</p><table><thead><tr><th>word-break属性值</th><th>说明</th></tr></thead><tbody><tr><td>normal（默认）</td><td>强制显示所有文本</td></tr><tr><td>keep-all</td><td>只能在半角空格或连字符处换行（处理英文）</td></tr><tr><td>break-all</td><td>遇边界断行，不考虑单词完整</td></tr><tr><td>break-word</td><td>遇边界断行，考虑单词完整</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/1.png" style="zoom: 67%;" /><hr><h2 id="空格换行-white-space"><a href="#空格换行-white-space" class="headerlink" title="空格换行 (white-space)"></a>空格换行 (white-space)</h2><p><font color =#05ffdc>white-space</font> 对元素内容的空格处理！br可换行！！！</p><table><thead><tr><th>white-space属性值</th><th>说明</th></tr></thead><tbody><tr><td>normal （默认）</td><td>默认处理</td></tr><tr><td>pre</td><td>超出边界不断行</td></tr><tr><td>pre-wrap</td><td>空白距离不合并，碰边断行</td></tr><tr><td>pre-line</td><td>合并多余空白，碰边断行</td></tr><tr><td>nowrap</td><td>合并多余空白，结束换行</td></tr></tbody></table><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css1.png" style="zoom:50%;" /><hr><h2 id="文字溢出-text-overflow"><a href="#文字溢出-text-overflow" class="headerlink" title="文字溢出 (text-overflow)"></a>文字溢出 (text-overflow)</h2><p><font color =#05ffdc>text-overflow</font>  将元素内容溢出时用自定义字符代替</p><table><thead><tr><th>text-overflow属性值</th><th>说明</th></tr></thead><tbody><tr><td>clip</td><td>切掉溢出部分</td></tr><tr><td>ellipsis</td><td>溢出部分替换为（…）</td></tr></tbody></table><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;!DOCTYPE html>&lt;html lang="en">&lt;head>    &lt;meta charset="UTF-8">    &lt;title>Title&lt;/title>    &lt;style>        div </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid red<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no1</span> </span><span class="token punctuation">{</span>            <span class="token property">text-overflow</span><span class="token punctuation">:</span> clip<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no2</span> </span><span class="token punctuation">{</span>            <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    &lt;/style>&lt;/head>&lt;body>&lt;ul>    &lt;li>clip&lt;div class=<span class="token string">"no1"</span>>内容内容内容内容内容内容&lt;/div>&lt;/li>    &lt;li>ellipsis&lt;div class=<span class="token string">"no2"</span>>内容内容内容内容内容内容&lt;/div>&lt;/li>&lt;/ul>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css2.png" alt=""></p><blockquote><p><font color=red><strong>生效前提：</strong></font></p><ol><li>元素宽度小于内容</li><li>超出内容隐藏的属性<code>overflow: hidden</code></li><li>操出边界不换行的属性<code>white-space:( pre | nowrap )</code></li></ol></blockquote><hr><h1 id="精灵图"><a href="#精灵图" class="headerlink" title="精灵图"></a>精灵图</h1><p>由很多小的背景图像合成的大图被称为 精灵图。可以减少浏览器与服务器数据交换的次数。</p><p><strong>精灵图运用</strong></p><p>根据大小查找图片,锁定位置。</p><p>精灵图在css使用到的属性有</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*背景连写*/</span>background<span class="token comment" spellcheck="true">/*背景图片*/</span><span class="token property">background-image</span><span class="token punctuation">:</span> none | url<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*背景平铺 */</span><span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat | no-repeat | repeat-x | repeat-y <span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*背景位置*/</span><span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>length | position<span class="token punctuation">)</span> <span class="token punctuation">(</span>length | position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*length: 精准坐标、position: 方位名词*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原图调用 ：（京东精灵图）</p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css4.png" style="zoom:50%;" /><p>示范代码：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;!DOCTYPE html>&lt;html lang="en">&lt;head>    &lt;meta charset="UTF-8">    &lt;title>Title&lt;/title>    &lt;style>        li </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no1</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">26</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/jd.png")</span> no-repeat<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no2</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">22</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/jd.png")</span> no-repeat <span class="token number">0</span> -<span class="token number">68</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no3</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">230</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">52</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/jd.png")</span> no-repeat <span class="token number">0</span> -<span class="token number">134</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no4</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">26</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/jd.png")</span> no-repeat <span class="token number">0</span> -<span class="token number">408</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.no5</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">42</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">44</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/jd.png")</span> no-repeat <span class="token number">0</span> -<span class="token number">442</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    &lt;/style>&lt;/head>&lt;body>&lt;ul>    &lt;li class=<span class="token string">"no1"</span>>&lt;/li>    &lt;li class=<span class="token string">"no2"</span>>&lt;/li>    &lt;li class=<span class="token string">"no3"</span>>&lt;/li>    &lt;li class=<span class="token string">"no4"</span>>&lt;/li>    &lt;li class=<span class="token string">"no5"</span>>&lt;/li>&lt;/ul>&lt;/body>&lt;/html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果图示</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css3.png" alt=""></p><hr><h1 id="滑动门"><a href="#滑动门" class="headerlink" title="滑动门"></a>滑动门</h1><p>为网页元素设置特殊形状的背景。<br>以下我网站例子：</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css5.png" alt=""></p><p>背景原型：</p><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css7.png" alt=""><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css8.png" /></p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css11.jpg" style="zoom:50%;" /><p>滑动门应用：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">* </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">body </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*背景*/</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/wx.jpg")</span> repeat-x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span> li </span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span> a </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">33</span>px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">33</span>px<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*按钮样式背景（左）*/</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/to.png")</span> no-repeat<span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span> span </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">33</span>px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*按钮样式背景（右）*/</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/to.png")</span> right<span class="token punctuation">;</span>            <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/*鼠标指定时高亮*/</span>        <span class="token selector"><span class="token class">.box</span> a<span class="token pseudo-class">:hover</span> span </span><span class="token punctuation">{</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/ao.png")</span> right<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span> a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("img/ao.png")</span> no-repeat<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>PC平台<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>开放平台<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>帮助与反馈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Sanscan12/img/img/css9.png" alt=""></p><blockquote><p>说明：</p><ol><li>a 设置背景左侧，内边距撑开左框中的宽度</li><li>span 设置背景右侧，内边距撑开有边框的宽度，左边有内容</li><li>a包含span是因为整体是可以点击的缘故</li></ol></blockquote><hr><h1 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h1><p>字体图标是以特殊形式的字体呈现出来的图标，可透明、旋转、改颜色等····</p><blockquote><p><strong>使用流程：</strong></p><ol><li>获取svg格式的效果图</li><li>上传生成兼容性的字体文件包</li><li>下载到本地的兼容字体文件包</li><li>字体文件包引入到HTML页面中</li></ol></blockquote><p><strong>引入网页：</strong></p><ol><li><p>创建fonts文件夹在根路经里</p></li><li><p>在样式里声明字体图标，声明代码可在下载的项目里获取！！！</p><p>以下是例子：<font color=red><strong>（不同来源网站不同声明代码！！！）</strong></font></p><pre class="line-numbers language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'icomoon'</span><span class="token punctuation">;</span>  <span class="token property">src</span><span class="token punctuation">:</span>  <span class="token url">url('fonts/icomoon.eot?7kkyc2')</span><span class="token punctuation">;</span>  <span class="token property">src</span><span class="token punctuation">:</span>  <span class="token url">url('fonts/icomoon.eot?7kkyc2#iefix')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'embedded-opentype'</span><span class="token punctuation">)</span>,    <span class="token url">url('fonts/icomoon.ttf?7kkyc2')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'truetype'</span><span class="token punctuation">)</span>,    <span class="token url">url('fonts/icomoon.woff?7kkyc2')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'woff'</span><span class="token punctuation">)</span>,    <span class="token url">url('fonts/icomoon.svg?7kkyc2#icomoon')</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'svg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*清除粗细*/</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/*清除倾斜*/</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>盒子使用字体</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*盒子字体可用*/</span><span class="token selector">span </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*icomoon: 字体图标的名称*/</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"icomoon"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>盒子里添加结构，图标编码可在项目里获取！</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">span<span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span>         <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"\e900"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*或者 （一下是特殊字体图标）*/</span>&lt;span>&amp;#xe<span class="token number">613</span><span class="token punctuation">;</span>&lt;/span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>本人学时：5个月</p><p>本站对你有用，欢迎在以下留言评论，反馈问题也是可以的！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CSS初识&quot;&gt;&lt;a href=&quot;#CSS初识&quot; class=&quot;headerlink&quot; title=&quot;CSS初识&quot;&gt;&lt;/a&gt;CSS初识&lt;/h1&gt;&lt;p&gt;css样式表或层叠样式表（级联样式表），用与设置HTML页面的文本内容（字体，大小，对齐样式）、图片外形等外观。&lt;b
      
    
    </summary>
    
    
      <category term="前端" scheme="https://Sanscan12.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://Sanscan12.github.io/tags/css/"/>
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>英语语法</title>
    <link href="https://sanscan12.github.io/posts/d796.html"/>
    <id>https://sanscan12.github.io/posts/d796.html</id>
    <published>2020-04-11T16:00:00.000Z</published>
    <updated>2020-05-08T15:36:11.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h1><p>名词是能表示或指称”人、事、物、地点或概念”的词语。</p><h2 id="名词的种类"><a href="#名词的种类" class="headerlink" title="名词的种类"></a>名词的种类</h2><p>1.<strong>专有名词</strong>：指特定的名称,”人、事、物、地点或概念”的名词，<strong>首字母需为大写</strong><br>2.<strong>普通名词</strong>：指一般名称，<strong>首字母不需大写</strong><br>3.<strong>具体名词</strong>：五官能感受到的物质<br>4.<strong>抽象名词</strong>：五官无法感受到的概念<br>5.<strong>可数名词</strong>：有单数与复数区别的名词<br>6.<strong>不可数名词</strong>：无法计数类的名词</p><h2 id="可数名词"><a href="#可数名词" class="headerlink" title="可数名词"></a>可数名词</h2><p>可数名词有<strong>普通名词</strong>和<strong>集合名词</strong>两种</p><p><strong>1.普通名词</strong></p><p> <strong>单数的普通名词</strong>之前，通常会加上冠词a/an或是the；<strong>复数的普通名词</strong>之前不加冠词a/an，并在词尾加上s或es表示复数</p><table><thead><tr><th>单数普通名词</th><th>复数普通名词</th></tr></thead><tbody><tr><td>a chair （一张椅子）</td><td>charis（椅子）</td></tr><tr><td>an apple （一个苹果）</td><td>apples（苹果）</td></tr><tr><td>the book （那本书）</td><td>books（书）</td></tr></tbody></table><p><strong>2.集合名词</strong></p><p>集合名词指的是同一种类的人或物之集合体名称，形式是单数，但代表是复数；将几何体视为一个单位时，则为普通名词，单数前面加冠词a/an或是the，复数在词尾加上s或es。</p><table><thead><tr><th align="center">集合名词指组成分子的总称</th><th align="center">集合名词视为一个单位</th></tr></thead><tbody><tr><td align="center">my family （我的家人）</td><td align="center">two families （两个家庭）</td></tr><tr><td align="center">some fruit （一些水果）</td><td align="center">different fruits （不同的水果）</td></tr><tr><td align="center">a lot of fish （很多鱼）</td><td align="center">various fishes （各种各样的鱼）</td></tr></tbody></table><h2 id="不可数名词"><a href="#不可数名词" class="headerlink" title="不可数名词"></a>不可数名词</h2><p>“专有名词”“位置名词”以及“抽象名词”都是属于不可数名词。不可数名词一般前面不加冠词a/an，也没有复数形式。<br><strong>表示“人名、国名、地名、物件名称或月日、节日等”的专有名词</strong>；<strong>表示“没有一定形态”的物质名词</strong>；<strong>指无形的概念，如“性质、状态、概念或观念”等的抽象名词</strong></p><h2 id="单数变复数名词的方法"><a href="#单数变复数名词的方法" class="headerlink" title="单数变复数名词的方法"></a>单数变复数名词的方法</h2><h3 id="1-规则变化"><a href="#1-规则变化" class="headerlink" title="1.规则变化"></a>1.规则变化</h3><table><thead><tr><th align="left">变化规则</th><th align="left">单数→复数</th><th align="center">例外</th></tr></thead><tbody><tr><td align="left">一般名词词尾加上s</td><td align="left">girl→girls、desk→desks</td><td align="center"></td></tr><tr><td align="left">名词词尾为o词尾加上es</td><td align="left">potato→potatoes、tomato→tomatoes、hero→heroes</td><td align="center"></td></tr><tr><td align="left">名词词尾为s, X, Z, sh, ch词尾加上es</td><td align="left">bus→buses、box→boxes、fish→fishes、church→churches</td><td align="center">photos、radios、pianos</td></tr><tr><td align="left">名词词尾为f或fe先将f或fe改成v，再加es</td><td align="left">leaf→leaves、knife→knives</td><td align="center">roofs、chiefs</td></tr><tr><td align="left">名词词尾为辅音+y先将y改成i，再加es</td><td align="left">baby→babies、story→stories</td><td align="center"></td></tr><tr><td align="left">名词词尾为元音+y直接加s</td><td align="left">boy→boys、day→days、key→keys</td><td align="center"></td></tr></tbody></table><h3 id="2-不规则变化"><a href="#2-不规则变化" class="headerlink" title="2.不规则变化"></a>2.不规则变化</h3><table><thead><tr><th>变化方式</th><th>单数→复数</th><th>例外</th></tr></thead><tbody><tr><td>名词中的元音变化</td><td>man→men、woman→wonen、tooth→teeth、foot→feet</td><td>German→Germans(德国人)</td></tr><tr><td>名词词尾+en/ren</td><td>child→childer</td><td></td></tr><tr><td>单复数形式相同</td><td>sheep→sheep、Chinese→Chinese</td><td></td></tr></tbody></table><h2 id="可数名词中的特殊名词"><a href="#可数名词中的特殊名词" class="headerlink" title="可数名词中的特殊名词"></a>可数名词中的特殊名词</h2><p><strong>1.有些名词，单复数所代表的意义不同</strong></p><table><thead><tr><th>单数</th><th>复数</th></tr></thead><tbody><tr><td>good （善行） <br />cloth （布） <br />glass（玻璃）<br />manner（方法）<br />wood（木头）<br />work（工作）</td><td>goods （货物） <br />clothes （衣服） <br />glasses（眼镜）<br />manners（礼貌）<br />woods（树木）<br />works（作品）</td></tr></tbody></table><p><strong>2.通常以复数形态出现的名词</strong><br>        这些名词通常是“成双成对”的形式存在，要表示数量时，会在前面加上a pair of （一双，一副）。一旦使用单数，则该物品不成套</p><table><thead><tr><th>成双的名词</th><th>表示数量的用法</th></tr></thead><tbody><tr><td>shoes（鞋子）<br />socks（袜子）<br />gioves（手套）<br />pants（长裤）<br />shorts（短裤）<br />jeans（牛仔裤）<br />scissors（剪刀）<br />chopsticks（筷子）</td><td>a shoe（一只鞋子）<br />a glove （一只手套）<br />a pair of shoes（一双鞋）<br />a pair of chopsticks（一双筷子）</td></tr></tbody></table><h2 id="名词在句子中的用法"><a href="#名词在句子中的用法" class="headerlink" title="名词在句子中的用法"></a>名词在句子中的用法</h2><p><strong>1.作为主语</strong></p><ol><li><p>作为句子的主语</p><blockquote><p>Mary is very smart. (Mary)<br>玛丽非常聪明</p></blockquote></li><li><p>作为主语的补语（也称“表语”）</p><blockquote><p>My favorite holiday is Christmas. (Christmas)<br>我最喜欢的节日是圣诞节</p></blockquote></li><li><p>作为主语的同位语</p><blockquote><p>My brother,Jeff,is a doctor. (jeff)<br>我的哥哥杰夫是名医生。</p></blockquote></li></ol><p><strong>2.作为宾语</strong></p><ol><li><p>作为动词的宾语</p><blockquote><p>I love Kathy. (love)（动词）<br>我爱凯西。</p></blockquote></li><li><p>作为介词的宾语</p><blockquote><p>We are talking about our weekend. (about)（介词）        talking about：讨论<br>我们正在讨论我们的周末。</p></blockquote></li><li><p>作为宾语的补语</p><blockquote><p>Everyone calls me Bill. (me)（宾语）<br>大家都叫我比尔。</p></blockquote></li><li><p>作为宾语的同位语</p><blockquote><p>I want to thank my husband,Jerry. (my husband)（宾语）<br>我要感谢我的先生杰里。</p></blockquote></li></ol><hr><h1 id="代词"><a href="#代词" class="headerlink" title="代词"></a>代词</h1><p>代词是代替名词的词。</p><h2 id="人称代词"><a href="#人称代词" class="headerlink" title="人称代词"></a>人称代词</h2><p>代替人名或称谓的人称代词，有单复数的区别，并有主格、形容词性物主代词及宾格三种形式：</p><table><thead><tr><th align="left"></th><th></th><th>主格</th><th>形容词性物主代词</th><th>宾格</th></tr></thead><tbody><tr><td align="left"><strong>第一人称</strong></td><td>单数</td><td>I 我</td><td>my 我的</td><td>me 我</td></tr><tr><td align="left"></td><td>复数</td><td>we 我们</td><td>our 我们的</td><td>us 我们</td></tr><tr><td align="left"><strong>第二人称</strong></td><td>单数</td><td>you 你</td><td>your 你的</td><td>you 你</td></tr><tr><td align="left"></td><td>复数</td><td>you 你们</td><td>your 你们的</td><td>you你们</td></tr><tr><td align="left"><strong>第三人称</strong></td><td>单数</td><td>he 他<br />she 她<br />it 它</td><td>his 他的<br />her 她的<br />its 它的</td><td>him 他<br />her 她<br />it 它</td></tr><tr><td align="left"></td><td>复数</td><td>they 他们/她们/它们</td><td>their 他们的/她们的/它们的</td><td>them 他们/她们/它们</td></tr></tbody></table><h3 id="1-人称代词的用法"><a href="#1-人称代词的用法" class="headerlink" title="1.人称代词的用法"></a>1.人称代词的用法</h3><p><strong>1.主格：为句子的主语</strong></p><blockquote><p>I am a student.<br>我是名学生。</p></blockquote><p><strong>2.宾格：为句子的宾格</strong></p><ol><li><p>作为动词的宾语</p><blockquote><p>She loves me. (loves)（动词）、(me)<br>她爱我。</p></blockquote></li><li><p>作为宾语补语</p><blockquote><p>I thought that was you. (that)（宾格）、(you)<br>我以为那是你。</p></blockquote></li><li><p>作为介词的宾语</p><blockquote><p>I care about him. (about)（介词）、(him)<br>我很关心他。</p></blockquote></li></ol><p><strong>3.形容词物主代词：为形容词，放在名词前面，修饰名词</strong></p><blockquote><p>That is my money. (my)、(money)（名词）<br>那是我的钱。</p></blockquote><h3 id="2-关于it的用法"><a href="#2-关于it的用法" class="headerlink" title="2.关于it的用法"></a>2.关于it的用法</h3><p><strong>1.it指“它”，用来代替物品名称或动物名称。</strong></p><blockquote><p>Where is my watch?<br>我的手表在哪里？</p><p>It is on the desk.<br>It → it为my watch的代词<br>它在书桌上。</p><p>It is my dog.<br>It → it为my dog的代词<br>它是我的狗。</p></blockquote><p><strong>2.it可用来代替“时间、天气、”等抽象名词。</strong></p><blockquote><p>It is three o’clock.<br>It → it指时间<br>现在是三点。</p><p>It is cold today.<br>It → it指天气，为the weather的代词<br>天气很冷。</p></blockquote><p><strong>3.it可作为句子的形式主语。</strong></p><blockquote><p>It is wrong to lig.<br>说慌是错的。    </p></blockquote><p><strong>PS</strong>：这个句子真正的主语是后面的to lie（说慌这件事），it虽然在句首，却不是真正的主语，所以称为“形式主语”</p><h2 id="与人称代词有关的其他代词"><a href="#与人称代词有关的其他代词" class="headerlink" title="与人称代词有关的其他代词"></a>与人称代词有关的其他代词</h2><h3 id="1-名词性物主代词"><a href="#1-名词性物主代词" class="headerlink" title="1.名词性物主代词"></a><strong>1.名词性物主代词</strong></h3><p>名词性物主代词为代替“形容词性物主代词+名词”的代词，当前面出现多某个词是，为了避免重复，后面再提到同样的名词是就会使用“名词性物主代词”。</p><table><thead><tr><th>形容词性物主代词+名词</th><th>名词性物主代词</th></tr></thead><tbody><tr><td>my (我们) + 名词</td><td>mine</td></tr><tr><td>our (我们的) + 名词</td><td>ours</td></tr><tr><td>your (你的) + 名词</td><td>yours</td></tr><tr><td>his (他的) + 名词</td><td>his</td></tr><tr><td>her (她的) + 名词</td><td>hers</td></tr><tr><td>its (它的) + 名词</td><td>its</td></tr><tr><td>their (Ta们的)+ 名词</td><td>theirs</td></tr></tbody></table><blockquote><p>Is this your umbrella? (umbrella)<br>这是你的雨伞吗？</p><p>Yes,it is mine.<br>mine 指的是 my umbrella<br>对，它是我的。    </p><p>Their cat is white;ours is black.<br>cat、ours 指的是our cat<br>他们的猫是白色的，我们的是黑色的。</p></blockquote><p><strong>PS</strong>：前面的问句已经提到umbrella（雨伞）这个名词，后面的答句就不需要再重复umbrella，改用mine来代替my umbrella</p><h3 id="2-反身代词"><a href="#2-反身代词" class="headerlink" title="2.反身代词"></a><strong>2.反身代词</strong></h3><p>当主语与宾语指的是同一人或同一件事时，宾语要使用反身代词。</p><table><thead><tr><th></th><th>主语</th><th>宾语</th><th>反身代词</th></tr></thead><tbody><tr><td><strong>单数</strong></td><td>I <br />you  <br />he  <br />she  <br />it</td><td>me  <br />you  <br />him  <br />her <br />it</td><td>myself (我自己)  <br />yourself (你自己) <br />himself (他自己) <br />herself (她自己) <br />itself(它自己)</td></tr><tr><td><strong>复数</strong></td><td>we <br />you<br />they</td><td>us<br />you<br />them</td><td>ourselves (我们自己)<br />yourselves (你们自己)<br />themselves(他们自己)</td></tr></tbody></table><blockquote><p>错误:I know me.<br>正确:I know myself.<br>我了解我自己。</p></blockquote><p><strong>PS</strong>：主语是“我”，宾语也是“我”，主语宾语为同一人，因此宾语要用反身代词myself，而不是me</p><blockquote><p>错误:You must protect you.<br>正确:You must protect yourselves.<br>我们必须保护你们自己。</p></blockquote><p><strong>PS</strong>：主语是“你们”，宾语也是“你们”，主语宾语为同一群人，因此宾语要用反身代词 youreslves ，而不是you</p><h2 id="指示代词"><a href="#指示代词" class="headerlink" title="指示代词"></a>指示代词</h2><p>用来代替“的定的人或事物”的代词。指示代词也可以做指示形容词，后面接名词。</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>单数</td><td>this</td><td>这个(人、事、物)</td></tr><tr><td></td><td>that</td><td>那个(人、事、物)</td></tr><tr><td>复数</td><td>these</td><td>这些(人、事、物)</td></tr><tr><td></td><td>those</td><td>哪些(人、事、物)</td></tr></tbody></table><p><strong>1.指示代词的用法</strong><br>指示电磁在句子中做主语，也可做宾语。<br><strong>1.做主语</strong></p><blockquote><p>This is my seat. (This)<br>这是我的座位。</p><p>Those are better,but more expensive. (Those)<br>哪些比较好，但比较贵。</p></blockquote><p><strong>2做宾语</strong></p><blockquote><p>I don’t want to eat that. (that)<br>我不想吃那个东西。</p><p>Where should I put these? (these)<br>我改吧这些东西放哪儿？</p></blockquote><p><strong>3.指示代词做指示形容词时，后面接名词。</strong></p><blockquote><p>You can’t borrow this book. (this book)<br>你不能借这本书。</p><p>These bags are all defective. (These bags)<br>这些包都是有瑕疵的。</p></blockquote><h2 id="不定代词"><a href="#不定代词" class="headerlink" title="不定代词"></a>不定代词</h2><p>用来代替“不特定的人或事物”的词。不定代词也可以做不定形容词，后面接名词。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>one</td><td>一个(人、事、物)</td></tr><tr><td>each</td><td>每一个(人、事、物)</td></tr><tr><td>both</td><td>两个(人、事、物)</td></tr><tr><td>either</td><td>两者其中之一(人、事、物)</td></tr><tr><td>any</td><td>任何、若干(人、事、物)</td></tr><tr><td>some</td><td>一些(人、事、物)</td></tr><tr><td>many</td><td>许多(人、事、物)</td></tr><tr><td>more</td><td>更多(人、事、物)</td></tr><tr><td>most</td><td>大部分(人、事、物)</td></tr><tr><td>all</td><td>所有(人、事、物)</td></tr><tr><td>none</td><td>没有(人、事、物)</td></tr><tr><td>a few</td><td>几个(人、事、物)</td></tr><tr><td>a lot</td><td>很多(人、事、物)</td></tr></tbody></table><p>1.不定代词的用法<br>不定代词在句子中可以做主语，也可做宾语。<br>    <strong>1.做主语</strong></p><blockquote><p>I have many bags. Some are expensive, but most of them are cheap.<br>Some指“有些包”，但没有特别指出是哪些包。<br>most指“大部分包”，但没有特别指出是哪些包。<br>我有很多包。 有些很贵， 但大部分都很便宜。</p></blockquote><p><strong>2.做宾语</strong></p><blockquote><p>The cookies look yummy. Can I have one?<br>one指“一块饼干”。但没有指定要哪一个。<br>这些饼干看起来真美味。我可以吃吗？</p><p>She wants money, but I don’t have any.<br>any指“任何一点钱”。没有特别指定是什么形式的货币.<br>她想要钱，但我一点儿都没有。</p></blockquote><p><strong>3.不定代词做不定形容词用时，后面接名词疑问代词</strong></p><blockquote><p>She only has a few friends. (a few)<br>她只有几个朋友。</p><p>I got many gifts on my birthday. (many)<br>我生日时收到许多礼物。</p></blockquote><h2 id="疑问代词"><a href="#疑问代词" class="headerlink" title="疑问代词"></a>疑问代词</h2><p>疑问代词是用来询问“人、事物、时、地、方法、原因”的代词，单复数形式皆相同，常放在句首为疑问词。</p><table><thead><tr><th>代词</th><th>询问</th></tr></thead><tbody><tr><td>who 谁</td><td>问“人”</td></tr><tr><td>whom 谁</td><td>问“人”</td></tr><tr><td>whose 谁的</td><td>问“持有人”</td></tr><tr><td>what 什么</td><td>问“事、物”或“职业、身份”</td></tr><tr><td>which 哪一个</td><td>问“人 、事、物”</td></tr></tbody></table><p><strong>1.疑问代词的用法</strong></p><ol><li><p>做主语</p><blockquote><p>Who is in the bathroom? (Who)<br>谁在厕所里？</p></blockquote></li><li><p>作为主语补语</p><blockquote><p>Whose is that?<br>Whose为主语that的补语<br>那个是谁的？</p></blockquote></li><li><p>作为动词的宾语</p><blockquote><p>Whom do you Iove?<br>Whom为动词Love的宾语<br>你爱谁？</p><p>Which do you prefer?<br>Which为动词的love的宾语<br>你比较喜欢哪个？</p></blockquote></li><li><p>作为借此的宾语</p><blockquote><p>What are you talking about?<br>What为介词about的宾语<br>你们在讲什么？</p></blockquote></li></ol><hr><h1 id="所有格"><a href="#所有格" class="headerlink" title="所有格"></a>所有格</h1><p>所有格放在形容词前面，表示该名词是属于 <code>谁的</code>。正文因为放在名词前面，所以也可是为形容词，或称为 <code>所有形容词</code> 。所有格也可以用介词of来表示 <code>属于·····的</code>。</p><h2 id="所有格的形成方式"><a href="#所有格的形成方式" class="headerlink" title="所有格的形成方式"></a>所有格的形成方式</h2><table><thead><tr><th>形式方式</th><th>说明</th></tr></thead><tbody><tr><td>形容词性物主代词</td><td>my（我的）、our（我们的）、his（他的）、its（它的）<br />your（你的/你们的）、their（他/它们的）、her（她的）</td></tr><tr><td>名词 + ’s</td><td>Peter’s（彼得的）、the boy’s（男孩的）、my mother’s（我妈妈的）</td></tr><tr><td>of + 名词</td><td>… of the table (餐桌的)、… of London(伦敦的)、… of the house (房子的)</td></tr><tr><td>集合名词，后面直接加 ’s</td><td>children’s（小孩们的）、people’s（人们的）</td></tr><tr><td>词尾为s的复数名词，加 ’不加s</td><td>the boys’（男孩儿们的）、the students’（学生们的）</td></tr><tr><td>两人以上共同拥有，最后一个名词后面加  ’s</td><td>Steven and Jack’s（史蒂文与杰克的）</td></tr><tr><td>两人以上各自拥有，每个名词后面各自加 ’s</td><td>Streve’s and Jack’s（史蒂文与杰克的）</td></tr></tbody></table><h2 id="所有格的用法"><a href="#所有格的用法" class="headerlink" title="所有格的用法"></a>所有格的用法</h2><p>所有格无法独立使用在句子中，后面一定要接名词（若是of+名词，则名词放前面）形成<strong>名词短语</strong>才能使用在句子中，并作为主语、主语补语或宾语。</p><ol><li><p><strong>作为主语</strong></p><blockquote><p>my + father = my father （我的父亲）<br>形容词性物主代词 + 名词 = 名词短语<br>My father is a police officer.<br>My father:句子的主语<br>我的父亲是一名警官。</p></blockquote></li><li><p><strong>作为主语补语</strong></p><blockquote><p>the boys’ ＋　teacher = the boys’ teacher （男孩儿们的老师）<br>所有格 +　名词　=　名词短语　<br>His wife is the boys’ teacher.<br>boys’ teacher:作为主语his wife的补语<br>他太太是男孩儿们的老师。</p></blockquote></li><li><p><strong>作为动词的宾语</strong></p><blockquote><p>the weather + of London = the weather of London （伦敦的天气）<br>名词 + 所有格 = 名词短语<br>I canboys’t stand the weather of London.<br>the weather of London:作为动词stand的宾语<br>我无法忍受伦敦的天气。</p></blockquote></li><li><p><strong>作为介词的宾语</strong></p><blockquote><p>Amy and Emily’s + brother = Amy and Emily’s brother （艾米和埃米莉的哥哥）<br>所有格 + 名词 = 名词短语</p><p>I am in love with Amy and Emily’s brother.<br>Amy and Emily’s brother：作为介词with的宾语<br>我爱上了艾米和埃米莉的哥哥。</p></blockquote></li></ol><hr><h1 id="冠词"><a href="#冠词" class="headerlink" title="冠词"></a>冠词</h1><p>冠词是一种限定词，<code>不定冠词</code> a或an通常放在 <code>未指定</code>的单数名词前；而<code>定冠词</code>the则放在<code>有指定</code>的单数名词或不可数名词前。冠词虽然可分为<code>定冠词</code>和 <code>不定冠词</code> 两种，但总共只有三个，即a、an、the。</p><h2 id="不定冠词-a-an"><a href="#不定冠词-a-an" class="headerlink" title="不定冠词 a/an"></a>不定冠词 a/an</h2><p>a与an都是指 <code>一个</code>，因此后面只能接单数的可数名词。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>a 用在首字母为<strong>辅音</strong>的单数名词前</td><td>a boy (一个男孩)</td></tr><tr><td></td><td>a chair（一张椅子）</td></tr><tr><td></td><td>a book （一本书）</td></tr><tr><td></td><td>a window （一扇窗户）</td></tr><tr><td></td><td>a aup of tea （一杯茶）</td></tr><tr><td>an 用在首字母为<strong>元音</strong>的单数名词前</td><td>an egg （一颗蛋）</td></tr><tr><td></td><td>an hour（一个小时）</td></tr><tr><td></td><td>an island （一座岛）</td></tr><tr><td></td><td>an umbrella （一把伞）</td></tr></tbody></table><h2 id="定冠词-the"><a href="#定冠词-the" class="headerlink" title="定冠词 the"></a>定冠词 the</h2><p>the没有单位复数之分，后面可接单数可数名词、复数可数名词，也可以接不可数名词。</p><h2 id="定冠词的使用"><a href="#定冠词的使用" class="headerlink" title="定冠词的使用"></a>定冠词的使用</h2><ol><li><p><strong>表示<code>特定的</code> 人、事、物</strong></p><blockquote><p>Mr.Smith is the teacher of the class.<br>Mr.Smith是这个班级的老师，不是路边随便抓来的一个老师<br>史密斯先生是这个班级的老师。</p><p>Did you enjoy the movie?<br>指某部说话者与听话这都知道的特定的电影，而并非是任意一部电影<br>你喜欢看那部电影吗？</p><p>The milk smells sour.<br>指特定的某一瓶或某一杯牛奶，而非所有的牛奶<br>这牛奶闻起来酸了。</p></blockquote></li><li><p><strong>表示独一无二的自然事物</strong><br>自然界中独一无二的事物前面，要加固定冠词，表示<code>唯一</code></p><blockquote><p>Look at the moon in the sky！<br>你看天空的月亮！</p><p>The earth moves around the sun.<br>地球绕着太阳转。</p></blockquote></li><li><p><strong>表示方向或方位时</strong></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>the right （右边）</td><td>the left（左边）</td></tr><tr><td>the north （北方）</td><td>the south（南方）</td></tr><tr><td>the east （东方）</td><td>the west （西方）</td></tr></tbody></table><blockquote><p>The forest is on the right of the river.<br>森林在和的右侧。</p><p>The birds are flying to the southh.<br>鸟儿们要飞到南方去。</p></blockquote></li><li><p><strong>专有名称之前</strong><br>有<code>专属名称</code>的自然景观，前面也会加上定冠词</p><blockquote><p>She swam scross the Yellow River.<br>她游泳横渡了黄河。</p><p>We went to the Maldives for vacation.<br>我们去马尔代夫度假。</p></blockquote></li><li><p><strong>序数词之前</strong></p><p>表示“第·····”的序数词之前，必须要加定冠词</p><blockquote><p>She was first noe to get up.<br>她是第一个起床的人。</p><p>Mother’s Day falls on the seacond Sunday of May.<br>母亲节是在五月的第二个星期天。</p></blockquote></li><li><p><strong>形容词最高级之前</strong></p><p>表是 “最·····”的形容词最高级之前，必须要加定冠词。</p><blockquote><p>I have the best mom in the world.<br>我拥有世界上最棒的妈妈。</p><p>Sally is the youngest child in my family.<br>萨莉是我家最小的孩子</p></blockquote></li></ol><h2 id="不需要加定冠词的名词"><a href="#不需要加定冠词的名词" class="headerlink" title="不需要加定冠词的名词"></a>不需要加定冠词的名词</h2><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>1.前面已经是形容词性物主代词、指示形容词及不定形容词的名词</td><td>my wife （我的太太）   <br />this book （这本书）<br />one day （有一天）</td></tr><tr><td>2.物质名词</td><td>water（水）<br />air（空气）<br />iron（铁）<br />gold（黄金）</td></tr><tr><td>3.抽象名词</td><td>honesty（诚实）<br />happiness（幸福）</td></tr><tr><td>4.科学</td><td>science（科学）<br />math（数学）</td></tr><tr><td>5.运动项目</td><td>basketball（篮球）<br />tennis（网球）</td></tr><tr><td>6.颜色</td><td>blue（蓝色）<br />white（白色）</td></tr><tr><td>7.语言</td><td>English（英语）<br />Chinese（中文）</td></tr></tbody></table><blockquote><p><strong>例子：</strong></p><p>Mike is the my friend.<br>迈克是我的朋友。</p><p>We can’t live without the air.<br>没有空气，我们无法存活。</p><p>Money can’t buy the happiness.<br>金钱买不到快乐。</p><p>Jarry is good at the math.<br>杰里很擅长数学。</p><p>Let’s paly the basketball.<br>我们来打篮球吧。</p><p>My favorite color is the red.<br>我最喜欢的颜色是红色。</p><p>Do you speak the English?<br>你会说英语吗？</p></blockquote><p>等待更新···</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;名词&quot;&gt;&lt;a href=&quot;#名词&quot; class=&quot;headerlink&quot; title=&quot;名词&quot;&gt;&lt;/a&gt;名词&lt;/h1&gt;&lt;p&gt;名词是能表示或指称”人、事、物、地点或概念”的词语。&lt;/p&gt;
&lt;h2 id=&quot;名词的种类&quot;&gt;&lt;a href=&quot;#名词的种类&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="其他" scheme="https://Sanscan12.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>结构思维</title>
    <link href="https://sanscan12.github.io/posts/e9a6.html"/>
    <id>https://sanscan12.github.io/posts/e9a6.html</id>
    <published>2020-04-03T16:00:00.000Z</published>
    <updated>2020-05-02T04:11:11.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-认识结构化"><a href="#1-认识结构化" class="headerlink" title="1 认识结构化"></a>1 认识结构化</h1><h2 id="1-1-结构化的特征"><a href="#1-1-结构化的特征" class="headerlink" title="1.1 结构化的特征"></a>1.1 结构化的特征</h2><h3 id="大脑的四个思维习惯"><a href="#大脑的四个思维习惯" class="headerlink" title="大脑的四个思维习惯"></a>大脑的四个思维习惯</h3><p>归纳主题、归类、偏爱数字3以以及短时记忆不能承载太多信息、喜欢有规律的信息</p><h3 id="结构化思维的三个特征"><a href="#结构化思维的三个特征" class="headerlink" title="结构化思维的三个特征"></a>结构化思维的三个特征</h3><p><font color = #EBC57C><strong>主题先行</strong></font></p><p>一般情况会逐句了解你的意思。</p><p><font color = #EBC57C><strong>归类分组</strong></font></p><p>当你要表达大量信息的时候，因为大脑的短时记忆有限，所以最佳策略是把信息进行归类，最好是分为3类，会比较容易记忆。</p><p><font color = #EBC57C><strong>逻辑递进</strong></font></p><p>当你定了主题，并对所有信息进行归类分组。</p><h2 id="1-2-表达时主题先行"><a href="#1-2-表达时主题先行" class="headerlink" title="1.2 表达时主题先行"></a>1.2 表达时主题先行</h2><h3 id="区分主题和议题"><a href="#区分主题和议题" class="headerlink" title="区分主题和议题"></a><strong><font color = #EBC57C>区分主题和议题</font></strong></h3><p><strong>主题</strong>是对于要讨论的内容，我持什么观点。<br><strong>议题</strong>是指我将要讨论什么内容</p><p>主题是要适度、符合预期、有思想</p><h3 id="4种方式主题吸引"><a href="#4种方式主题吸引" class="headerlink" title="4种方式主题吸引"></a><strong><font color = #EBC57C>4种方式主题吸引</font></strong></h3><p><strong>主题模型开场白SCQA模型</strong></p><table><thead><tr><th>英文简称</th><th>说明</th></tr></thead><tbody><tr><td>S是Situation</td><td>背景</td></tr><tr><td>C是Complication</td><td>冲突=渴望+阻碍</td></tr><tr><td>Q是Question</td><td>问题</td></tr><tr><td>A是Answer</td><td>答案</td></tr></tbody></table><ol><li><p><strong>标准式（SCA）</strong>： 背景——冲突——答案</p><p><font color=#5B5B5B size=2>我们公司近年来发展速度越来越快，连锁门店逐年增加。——背景。</font></p><p><font color=#5B5B5B size=2>但公司的资金缺I1却越来越明显，已经成为限制我们快速发展的主要瓶颈。——冲突</font></p><p><font color=#5B5B5B size=2>为此，我设计了门店资金调整方案，以解决资金缺口过大的问题。——答案</font></p></li><li><p><strong>开门见山式（ASC）</strong>：答案——背景——冲突<br>紧急型：时间紧急的情况下，对方可以快速把握重点</p><p><font color=#5B5B5B size=2>老板，我还是不去当销售，留在技术岗位更加合适。——答案</font><br><font color=#5B5B5B size=2>因为，销售需要跟客户建立密切的联系。——背景</font><br><font color=#5B5B5B size=2>但是，我不喜欢与人打交道，并且这方面能力和经验非常欠缺。——冲突</font></p></li><li><p><strong>突出忧虑（CSA）</strong>：冲突——背景——答案<br>广告型：开头引起情绪，快速获取关注，以及引起结尾答案的兴趣。</p><p><font color=#5B5B5B size=2>这样下去你可能会瘫痪!——冲突</font><br><font color=#5B5B5B size=2>颈椎很脆弱，长时间用电脑会导致诸多问题等等。——背景</font><br><font color=#5B5B5B size=2>这里有一套电脑支架，把你的电脑抬高就好了。——答案</font></p></li><li><p><strong>突出信心式（QSCA）</strong>：问题——背景——冲突——答案<br>文章型：开头问问题，然后逐渐讲解。前提已经准备好答案的情况下。</p><p><font color=#5B5B5B size=2>如何在某一个领域成为专家? ——问题</font><br><font color=#5B5B5B size=2>你可能听说过，只要在某个领域训练1万个小时，就可以成为专家。——背景</font><br><font color=#5B5B5B size=2>但是实际上，有很多人工作了10年以上，也并没有成为专家。——冲突</font><br><font color=#5B5B5B size=2>其实，决定一个人能否成为某一领域的专家，最重要的是取决于他是否进行了刻意练习。——答案</font></p></li></ol><h3 id="1-3-信息归类分组"><a href="#1-3-信息归类分组" class="headerlink" title="1.3 信息归类分组"></a>1.3 信息归类分组</h3><h4 id="归类信息的三个步骤"><a href="#归类信息的三个步骤" class="headerlink" title="归类信息的三个步骤"></a>归类信息的三个步骤</h4><p><font color = #EBC57C><strong>信息归类</strong></font></p><p>列出需要的所有信息项，将类似信息进行连线分组。</p><p><font color = #EBC57C><strong>归纳共性</strong></font></p><p>查看每组的各条信息，把它们的共性提炼出来，用一个词来概括整个组的信息。</p><p><font color = #EBC57C><strong>结构提炼</strong></font></p><p>看一下上一步中得到的分组，是否每组的信息属于同一范畴，是否需要补充或调整组</p><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>你成为了圈外的课程产品经理，了解到你平时的工作包括: </p><ol><li>搜集材料到素材库</li><li>招募新助教</li><li>迭代课程内容</li><li>主持开学和结课仪式</li><li>培训助教</li><li>安排学习活动日程</li><li>设计学习活动</li><li>设计课程大纲。</li></ol><p><strong>信息归类：</strong><br>第一类：1、3、8；第二类：4、6、7；第三类：2、5<br><strong>归纳共性：</strong><br>第一类命名为“研发和迭代课程”；第二类命名为“设计和执行学习活动”；第三类命名为“管理助教”<br><strong>结构提炼：</strong><br>第一方面，研发和迭代课程，包括: 1、3、8<br>第二方面，设计和执行学习活动，包括: 4、6、7<br>第三方面，管理助教，包括:2、5</p><hr><h4 id="结构提炼注意要点"><a href="#结构提炼注意要点" class="headerlink" title="结构提炼注意要点"></a><strong><font color = #EBC57C>结构提炼注意要点</font></strong></h4><p>满足MECE原则Mutually Exclusive Collectively Exhaustive。</p><ol><li>ME：<strong>相互独立</strong>。指的是在分类的时候，每个层次的组别之间的信息没有重叠。</li><li>CE：<strong>完全穷尽</strong>。指的是没有遗漏掉其它重要信息，整个结构是完整的。</li></ol><p><font color = red><strong>MECE 原则就是不重不漏。</strong></font></p><h3 id="1-4-逻辑递进"><a href="#1-4-逻辑递进" class="headerlink" title="1.4 逻辑递进"></a>1.4 逻辑递进</h3><p>整个结构里各层各组的信息都是逻辑紧密地联系在一起的。</p><h4 id="逻辑递进的两种形式"><a href="#逻辑递进的两种形式" class="headerlink" title="逻辑递进的两种形式"></a><strong><font color = #EBC57C>逻辑递进的两种形式</font></strong></h4><h5 id="纵向逻辑"><a href="#纵向逻辑" class="headerlink" title="纵向逻辑"></a><strong><font color = C49062>纵向逻辑</font></strong></h5><p>指的是从结构的主题开始，每一层的信息要对下一层整个组的信息进行高度概括，而下一层的内容是对上一层次的支撑，以此类推，直到结构的底部，这个原则称之为以上统下。<br><strong>纵向逻辑推理的两种方法：</strong></p><ol><li><strong>演绎推理</strong>：从一般规律推论到具体事实。前提：要具备有普遍性的事实</li><li><strong>归纳推理</strong>：从大量总结出的一般规律。</li></ol><h5 id="横向逻辑"><a href="#横向逻辑" class="headerlink" title="横向逻辑"></a><strong><font color = C49062>横向逻辑</font></strong></h5><p>陈述信息的顺序，要符合大多数人的思维习惯<em>（比如先早后晚、先主要后次要、范围先大后小等等）</em>。通常我们有三种顺序来陈述，分别是时间顺序、空间顺序、程度顺序。<br><strong>横向逻辑三种陈述顺序：</strong></p><ol><li><strong>时间顺序：</strong>按照前因后果的循序来陈述</li><li><strong>空间顺序：</strong>按照地理概念来划分</li><li><strong>程度顺序：</strong>按照重要性来排列</li></ol><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>　　女孩子大概都受了小鸟依人的蛊惑，总认为自己将来是需要依靠某个人才能生活的，尤其想依靠的就是男人。你可以长得像只小鸟一样娇小可人，这没有什么不好，但是千万别长成一只“笼子里的金丝雀”。<br>　　不独立，就是不自由!你有完整的独立的人格。在经济上，决不依靠任何人:在感情上，绝不依赖某个人，在思想上，决不盲从任何人。<br>　　首先在经济上，你要找到解决自己生计的谋生方式，而不是指着橱窗里的衣服和首饰对男人说我要!我要!，女人应该像男人一样有事做才行。五个工作日能让你富有朝气。你必须找到能够保证你牢固地站在大地上的东西。在感情上，除了爱情以外，还有很多重要的事情值得你去做。不妨走出去，多认识一些优秀的人，这时你会发现你爱着的那个他也不过是衣服上的一颗白饭粒，不是你的救命粮。因此，不要对那个人说‘没有你我就活不下去….之类的傻话。把所有的心思和情感都寄托在他的身上，他不会被你那忠诚而挚热的感情所感动，相反，他会越不把你当一回事。在思想和精神上，一个对男人言听计从，事事都要寻求男人帮助，离开男人就无法决定任何事的女人，对男人来说，无异于养了一个需要照顾的女婴，是包袱，是累赘。做个有主张的女子吧!知道什么该做，什么不该做、不盲从、不人云亦云，有自己的想法，坚持自己的观…..当你在经济、感情和思想上完全独立的时候，你会发现你的世界原来非常广阔。</p><p><strong>纵向逻辑归纳推理可分成：</strong>经济、感情、思想<br><strong>横向逻辑程度循序：</strong><br>        经济上包括两点，分别是“不要求男人给你买东西”，“找到一份热爱的、带给你朝气的事业”<br>        感情上也是两点，分别是“多认识-一些优秀的朋友”，“不把所有的心思和情感都寄托在他身上”<br>        思想上的两点，“不要事事寻求男人帮助”和“坚持自己的想法和观点”。</p><hr><h1 id="2-结构化在表达中的应用"><a href="#2-结构化在表达中的应用" class="headerlink" title="2 结构化在表达中的应用"></a>2 结构化在表达中的应用</h1><h2 id="2-1临场发言中运用结构化"><a href="#2-1临场发言中运用结构化" class="headerlink" title="2.1临场发言中运用结构化"></a>2.1临场发言中运用结构化</h2><h3 id="结构化表达的两种方式"><a href="#结构化表达的两种方式" class="headerlink" title="结构化表达的两种方式"></a><strong><font color = #EBC57C>结构化表达的两种方式</font></strong></h3><ol><li><strong>自上而下：</strong>先考虑主题，然后找结构，最后填充信息</li><li><strong>自下而上：</strong>先收集零散的信息和观点，然后归纳出结构，最后概括出主题。</li></ol><h3 id="临场发言三个步骤：-自上而下"><a href="#临场发言三个步骤：-自上而下" class="headerlink" title="临场发言三个步骤：(自上而下)"></a><font color = #EBC57C><strong>临场发言三个步骤：(自上而下)</strong></font></h3><ol><li><p><strong>定主题</strong></p><p><font color=#5B5B5B size=2>先想清楚自己到底想表达什么观点，也就是主题是什么。不要指望给出一堆信息，让听的人来帮你提炼主题。要在一开始就说出自己的观点，作为一个切入点。这个步骤对应结构化思维当中的“主题先行”。</font></p></li><li><p><strong>搭架子</strong><br><font color=#5B5B5B size=2>论主题的时候需要分为几个小点。因为要现场短时间内做到归类分组和逻辑递进太难了，所以可以事先积累一些现成的架子，它们本身就符合归类分组和逻辑递进的要求，然后我们往里面填充信息，就可以做到结构化发言了。相当于记忆索引不至于，没话说</font></p></li><li><p><strong>填素材</strong></p><p><font color=#5B5B5B size=2>根据架子里每一个小点，填充一些事例和数据，从而推进论据向观点靠近，让发言的内容更加饱满。</font></p></li></ol><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p><font size=5><strong>被问到: 你是怎么驱动团队达成目标的?</strong></font></p><p>先分析一下，想清楚自己到底想说什么，你的主题观点是什么再表达出来，比如:“激励员工不能只靠奖惩而要激发内部驱动力”，大家就明白你大概是要表达什么内容了。根据内部驱动力理论的三个要素:<strong>自主感</strong>、<strong>胜任感</strong>、<strong>归属感</strong>，搭一个空间要素架。想想各个点，你主要会做一些什么。进而解释。</p><hr><p><font color = #b3d4fc size=5><strong>注意点：</strong></font></p><ol><li><strong>不要急着回答问题</strong><br><font color=#5B5B5B size=2>当别人抛出问题时，不要马上回答，稍微花5秒钟思考一下问题背后的本质。</font></li><li><strong>逼迫自己选择一个视角</strong><br><font color=#5B5B5B size=2>临场发言时，大脑往往会有很多观点浮现出来，甚至有时候这些观点可能是相反的，大脑会有不同的声音在吵架。通常这个时候，最容易浪费时间在纠结当中。所以，最重要的不是思考哪一个观点是对的，而是迅速选取一个视角，然后围绕它去搭建你的结构。</font></li><li><strong>不断回答听众头脑中的疑问</strong><br><font color=#5B5B5B size=2>发言需要吸引人，并且让人觉得有逻辑，一个重要因素就是“你不断给出的信息，正好回答了听众脑中不断蹦出的问题”。</font></li></ol><h2 id="2-2搭架子组织结构"><a href="#2-2搭架子组织结构" class="headerlink" title="2.2搭架子组织结构"></a>2.2搭架子组织结构</h2><h3 id="临场发言中常用的三种架子"><a href="#临场发言中常用的三种架子" class="headerlink" title="临场发言中常用的三种架子:"></a><font color = #EBC57C><strong>临场发言中常用的三种架子:</strong></font></h3><ol><li><strong>时间架：</strong></li></ol><ul><li><p>时间点：不同时间线递进<br>   <font color=#5B5B5B size=2>去年、今年、明年；20岁、22岁、24岁</font>    </p></li><li><p>周期：一组现象按同样的顺序重复出现<br>   <font color=#5B5B5B size=2>公司运作周期、产品的生命周期</font></p><ul><li>流程/步骤：过程事件<br><font color=#5B5B5B size=2>解释产品质量好流程介绍：研发、工程、采购、生产、市场和销售、服务等等。</font></li></ul></li></ul><ol start="2"><li><strong>空间架：</strong></li></ol><ul><li><strong>地点：</strong><br>   <font color=#5B5B5B size=2>不同地方</font><ul><li><strong>一个整体的组成部分：</strong><br><font color=#5B5B5B size=2>主机是由主板、显卡、cpu等配件组成</font></li><li><strong>抽象的要素概念：</strong><br><font color=#5B5B5B size=2>3c战略模型：公司、顾客、解决对象展开讨论</font></li><li><strong>二维矩阵：</strong><br><font color=#5B5B5B size=2>可以用到重要紧急矩阵，从重要且紧急、重要不紧急等方面展开</font></li></ul></li></ul><ol start="3"><li><strong>程度架：</strong><ul><li>重要性程度：把重要的放前面说，递进解释</li><li>紧急性程度：把紧急的放前面说，递进解释</li></ul></li></ol><h3 id="临场发言的训练方法"><a href="#临场发言的训练方法" class="headerlink" title="临场发言的训练方法:"></a><font color = #EBC57C><strong>临场发言的训练方法:</strong></font></h3><ol><li><strong>输入：</strong></li></ol><ul><li><strong>累架子拆文章：</strong><br><font color=#5B5B5B size=2>看到一篇文章，觉得表达得很清晰很好理解，那么就可以试着去拆解，分析作者是用了什么架子。把这个架子记录下来，以后在说到类似的话题，就可以直接引用了。</font></li><li><strong>存模型：</strong><br><font color=#5B5B5B size=2>平时在看书和文章的时候，看到一些有意思的理论、模型，可以思考出它的三到五个应用，加深记忆，然<br> 后把它记下来，作为自己的素材。</font></li><li><strong>建索材库：</strong><br>   <font color=#5B5B5B size=2>把积累到的架子放到自己素材库中，<br>   可以按照时间、空间和程度进行分类，同时打个标签注明一下，这个架子在什么场景下可以使用，方便你<br>   在临场发言的时候，可以快速进行调用。</font></li></ul><ol start="2"><li><p><strong>输出：</strong></p><p><strong>写文章</strong>、<strong>讲议题</strong></p></li></ol><p><font color = #EBC57C><strong>其他重要的思维能力:</strong></font><br><strong>思维</strong>的意义是得出结论或解决问题。</p><ol><li><strong>创造思维：</strong>把你的思路打开，这样可以进发出很多非常规的想法</li><li><strong>批判思维：</strong>去判断。这些想法是否靠谱，是否切中了问题本质</li><li><strong>收敛思维：</strong>将零散的想法进行结构化，结构化思维是收敛思维的一种</li></ol><h1 id="3表达"><a href="#3表达" class="headerlink" title="3表达"></a>3表达</h1><h2 id="3-1清晰表达"><a href="#3-1清晰表达" class="headerlink" title="3.1清晰表达"></a>3.1清晰表达</h2><h3 id="表达能力分三层："><a href="#表达能力分三层：" class="headerlink" title="表达能力分三层："></a><font color = #EBC57C><strong>表达能力分三层：</strong></font></h3><ol><li>条理清晰</li><li>有说服力</li><li>有影响力</li></ol><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>向老板汇报这个月的销售情况（已完成目标），下面有两种表达方式：</p><ul><li><p><strong>No1：</strong><br><font color=#5B5B5B size=2>本次销售任务已完成：1.老顾客完成了5笔复购、2.拓展了10名新顾客，已有两名已经确定意向。</font></p></li><li><p><strong>No2：</strong><br><font color=#5B5B5B size=2>由于上个月折扣比较大，下个月比较惨。不过通过老顾客的回访、请顾客推荐等方式，在下半个有还是完成任务：1.完成5笔老顾客复购、2.拓展了10名新用户，已经有两名已经确定意向。</font></p></li></ul><p>no1、no2都是是通过结构化表达，no2有故事性，no1直接性，虽然两者都是标明较为清晰，但no2更有说服力。no2<strong>是为表达添加了故事性。</strong></p><hr><h3 id="讲故事的三个要点："><a href="#讲故事的三个要点：" class="headerlink" title="讲故事的三个要点："></a><font color = #EBC57C><strong>讲故事的三个要点：</strong></font></h3><ol><li><strong>冲突</strong></li></ol><ul><li><p>冲突是故事的灵魂</p></li><li><p>冲突 = 渴望 + 阻碍</p></li></ul><ol start="2"><li><strong>行动</strong></li></ol><ul><li>为了解决冲突采取的方法</li></ul><ol start="3"><li><strong>结局</strong></li></ol><ul><li>行动带来的结果</li></ul><hr><p><font color = #b3d4fc size=5><strong>例子：</strong></font></p><p>西游记、梁祝等优秀的故事，都有共同特征：冲突。冲突是故事的灵魂</p><p><strong>西游记</strong><br>如果唐僧师徒四人取经路上没有妖魔鬼怪，一路顺风。这些故事还会感人吗?因为这样就没有了<strong>冲突</strong>。<br>唐僧发生<strong>冲突</strong>，孙悟空都会采取<strong>行动</strong>救师傅、帮助师傅，完成西天取经的任务，从而达到<strong>结局</strong>。</p><p><strong>怕上火喝王老吉</strong><br>含义：想吃(渴望)，但很热气(阻碍)，配王老吉(行动)，预防上火(结局)</p><hr><h3 id="结构化思维和讲故事相互融合"><a href="#结构化思维和讲故事相互融合" class="headerlink" title="结构化思维和讲故事相互融合:"></a><strong><font color = #EBC57C>结构化思维和讲故事相互融合:</font></strong></h3><ol><li>用SCQA的形式来增加主题的故事性</li><li>具体述可以用“ 冲突(S+C+Q) + 行动(A) + 结局(A) ”来展开</li></ol><p><strong>学习来源：圈外同学</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-认识结构化&quot;&gt;&lt;a href=&quot;#1-认识结构化&quot; class=&quot;headerlink&quot; title=&quot;1 认识结构化&quot;&gt;&lt;/a&gt;1 认识结构化&lt;/h1&gt;&lt;h2 id=&quot;1-1-结构化的特征&quot;&gt;&lt;a href=&quot;#1-1-结构化的特征&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="常识" scheme="https://Sanscan12.github.io/categories/%E5%B8%B8%E8%AF%86/"/>
    
    
      <category term="笔记" scheme="https://Sanscan12.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="思维训练" scheme="https://Sanscan12.github.io/tags/%E6%80%9D%E7%BB%B4%E8%AE%AD%E7%BB%83/"/>
    
      <category term="圈外同学" scheme="https://Sanscan12.github.io/tags/%E5%9C%88%E5%A4%96%E5%90%8C%E5%AD%A6/"/>
    
  </entry>
  
</feed>
